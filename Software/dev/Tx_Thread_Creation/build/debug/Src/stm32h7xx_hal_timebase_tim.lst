ARM GAS  /tmp/ccWj0e75.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_hal_timebase_tim.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Src/stm32h7xx_hal_timebase_tim.c"
  19              		.section	.text.HAL_InitTick,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_InitTick
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_InitTick:
  27              	.LVL0:
  28              	.LFB144:
   1:Src/stm32h7xx_hal_timebase_tim.c **** /* USER CODE BEGIN Header */
   2:Src/stm32h7xx_hal_timebase_tim.c **** /**
   3:Src/stm32h7xx_hal_timebase_tim.c ****   ******************************************************************************
   4:Src/stm32h7xx_hal_timebase_tim.c ****   * @file    stm32h7xx_hal_timebase_tim.c
   5:Src/stm32h7xx_hal_timebase_tim.c ****   * @brief   HAL time base based on the hardware TIM.
   6:Src/stm32h7xx_hal_timebase_tim.c ****   ******************************************************************************
   7:Src/stm32h7xx_hal_timebase_tim.c ****   * @attention
   8:Src/stm32h7xx_hal_timebase_tim.c ****   *
   9:Src/stm32h7xx_hal_timebase_tim.c ****   * Copyright (c) 2021 STMicroelectronics.
  10:Src/stm32h7xx_hal_timebase_tim.c ****   * All rights reserved.
  11:Src/stm32h7xx_hal_timebase_tim.c ****   *
  12:Src/stm32h7xx_hal_timebase_tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/stm32h7xx_hal_timebase_tim.c ****   * in the root directory of this software component.
  14:Src/stm32h7xx_hal_timebase_tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/stm32h7xx_hal_timebase_tim.c ****   *
  16:Src/stm32h7xx_hal_timebase_tim.c ****   ******************************************************************************
  17:Src/stm32h7xx_hal_timebase_tim.c ****   */
  18:Src/stm32h7xx_hal_timebase_tim.c **** /* USER CODE END Header */
  19:Src/stm32h7xx_hal_timebase_tim.c **** 
  20:Src/stm32h7xx_hal_timebase_tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Src/stm32h7xx_hal_timebase_tim.c **** #include "stm32h7xx_hal.h"
  22:Src/stm32h7xx_hal_timebase_tim.c **** #include "stm32h7xx_hal_tim.h"
  23:Src/stm32h7xx_hal_timebase_tim.c **** 
  24:Src/stm32h7xx_hal_timebase_tim.c **** /* Private typedef -----------------------------------------------------------*/
  25:Src/stm32h7xx_hal_timebase_tim.c **** /* Private define ------------------------------------------------------------*/
  26:Src/stm32h7xx_hal_timebase_tim.c **** /* Private macro -------------------------------------------------------------*/
  27:Src/stm32h7xx_hal_timebase_tim.c **** /* Private variables ---------------------------------------------------------*/
  28:Src/stm32h7xx_hal_timebase_tim.c **** TIM_HandleTypeDef        htim6;
  29:Src/stm32h7xx_hal_timebase_tim.c **** /* Private function prototypes -----------------------------------------------*/
  30:Src/stm32h7xx_hal_timebase_tim.c **** /* Private functions ---------------------------------------------------------*/
ARM GAS  /tmp/ccWj0e75.s 			page 2


  31:Src/stm32h7xx_hal_timebase_tim.c **** 
  32:Src/stm32h7xx_hal_timebase_tim.c **** /**
  33:Src/stm32h7xx_hal_timebase_tim.c ****   * @brief  This function configures the TIM6 as a time base source.
  34:Src/stm32h7xx_hal_timebase_tim.c ****   *         The time source is configured  to have 1ms time base with a dedicated
  35:Src/stm32h7xx_hal_timebase_tim.c ****   *         Tick interrupt priority.
  36:Src/stm32h7xx_hal_timebase_tim.c ****   * @note   This function is called  automatically at the beginning of program after
  37:Src/stm32h7xx_hal_timebase_tim.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  38:Src/stm32h7xx_hal_timebase_tim.c ****   * @param  TickPriority: Tick interrupt priority.
  39:Src/stm32h7xx_hal_timebase_tim.c ****   * @retval HAL status
  40:Src/stm32h7xx_hal_timebase_tim.c ****   */
  41:Src/stm32h7xx_hal_timebase_tim.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  42:Src/stm32h7xx_hal_timebase_tim.c **** {
  29              		.loc 1 42 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 40
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  43:Src/stm32h7xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  33              		.loc 1 43 3 view .LVU1
  44:Src/stm32h7xx_hal_timebase_tim.c ****   uint32_t              uwTimclock, uwAPB1Prescaler;
  34              		.loc 1 44 3 view .LVU2
  45:Src/stm32h7xx_hal_timebase_tim.c **** 
  46:Src/stm32h7xx_hal_timebase_tim.c ****   uint32_t              uwPrescalerValue;
  35              		.loc 1 46 3 view .LVU3
  47:Src/stm32h7xx_hal_timebase_tim.c ****   uint32_t              pFLatency;
  36              		.loc 1 47 3 view .LVU4
  48:Src/stm32h7xx_hal_timebase_tim.c ****   /*Configure the TIM6 IRQ priority */
  49:Src/stm32h7xx_hal_timebase_tim.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
  37              		.loc 1 49 3 view .LVU5
  38              		.loc 1 49 6 is_stmt 0 view .LVU6
  39 0000 0F28     		cmp	r0, #15
  40 0002 01D9     		bls	.L11
  50:Src/stm32h7xx_hal_timebase_tim.c ****    {
  51:Src/stm32h7xx_hal_timebase_tim.c ****      HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
  52:Src/stm32h7xx_hal_timebase_tim.c **** 
  53:Src/stm32h7xx_hal_timebase_tim.c ****      /* Enable the TIM6 global Interrupt */
  54:Src/stm32h7xx_hal_timebase_tim.c ****      HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
  55:Src/stm32h7xx_hal_timebase_tim.c ****      uwTickPrio = TickPriority;
  56:Src/stm32h7xx_hal_timebase_tim.c ****     }
  57:Src/stm32h7xx_hal_timebase_tim.c ****   else
  58:Src/stm32h7xx_hal_timebase_tim.c ****   {
  59:Src/stm32h7xx_hal_timebase_tim.c ****     return HAL_ERROR;
  41              		.loc 1 59 12 view .LVU7
  42 0004 0120     		movs	r0, #1
  43              	.LVL1:
  60:Src/stm32h7xx_hal_timebase_tim.c ****   }
  61:Src/stm32h7xx_hal_timebase_tim.c **** 
  62:Src/stm32h7xx_hal_timebase_tim.c ****   /* Enable TIM6 clock */
  63:Src/stm32h7xx_hal_timebase_tim.c ****   __HAL_RCC_TIM6_CLK_ENABLE();
  64:Src/stm32h7xx_hal_timebase_tim.c ****   /* Get clock configuration */
  65:Src/stm32h7xx_hal_timebase_tim.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  66:Src/stm32h7xx_hal_timebase_tim.c ****   /* Get APB1 prescaler */
  67:Src/stm32h7xx_hal_timebase_tim.c ****   uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  68:Src/stm32h7xx_hal_timebase_tim.c ****   /* Compute TIM6 clock */
  69:Src/stm32h7xx_hal_timebase_tim.c ****   if (uwAPB1Prescaler == RCC_HCLK_DIV1)
  70:Src/stm32h7xx_hal_timebase_tim.c ****   {
  71:Src/stm32h7xx_hal_timebase_tim.c ****     uwTimclock = HAL_RCC_GetPCLK1Freq();
  72:Src/stm32h7xx_hal_timebase_tim.c ****   }
ARM GAS  /tmp/ccWj0e75.s 			page 3


  73:Src/stm32h7xx_hal_timebase_tim.c ****   else
  74:Src/stm32h7xx_hal_timebase_tim.c ****   {
  75:Src/stm32h7xx_hal_timebase_tim.c ****     uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  76:Src/stm32h7xx_hal_timebase_tim.c ****   }
  77:Src/stm32h7xx_hal_timebase_tim.c **** 
  78:Src/stm32h7xx_hal_timebase_tim.c ****   /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  79:Src/stm32h7xx_hal_timebase_tim.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
  80:Src/stm32h7xx_hal_timebase_tim.c **** 
  81:Src/stm32h7xx_hal_timebase_tim.c ****   /* Initialize TIM6 */
  82:Src/stm32h7xx_hal_timebase_tim.c ****   htim6.Instance = TIM6;
  83:Src/stm32h7xx_hal_timebase_tim.c **** 
  84:Src/stm32h7xx_hal_timebase_tim.c ****   /* Initialize TIMx peripheral as follow:
  85:Src/stm32h7xx_hal_timebase_tim.c **** 
  86:Src/stm32h7xx_hal_timebase_tim.c ****   + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  87:Src/stm32h7xx_hal_timebase_tim.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  88:Src/stm32h7xx_hal_timebase_tim.c ****   + ClockDivision = 0
  89:Src/stm32h7xx_hal_timebase_tim.c ****   + Counter direction = Up
  90:Src/stm32h7xx_hal_timebase_tim.c ****   */
  91:Src/stm32h7xx_hal_timebase_tim.c ****   htim6.Init.Period = (1000000U / 1000U) - 1U;
  92:Src/stm32h7xx_hal_timebase_tim.c ****   htim6.Init.Prescaler = uwPrescalerValue;
  93:Src/stm32h7xx_hal_timebase_tim.c ****   htim6.Init.ClockDivision = 0;
  94:Src/stm32h7xx_hal_timebase_tim.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  95:Src/stm32h7xx_hal_timebase_tim.c **** 
  96:Src/stm32h7xx_hal_timebase_tim.c ****   if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
  97:Src/stm32h7xx_hal_timebase_tim.c ****   {
  98:Src/stm32h7xx_hal_timebase_tim.c ****     /* Start the TIM time Base generation in interrupt mode */
  99:Src/stm32h7xx_hal_timebase_tim.c ****     return HAL_TIM_Base_Start_IT(&htim6);
 100:Src/stm32h7xx_hal_timebase_tim.c ****   }
 101:Src/stm32h7xx_hal_timebase_tim.c **** 
 102:Src/stm32h7xx_hal_timebase_tim.c ****   /* Return function status */
 103:Src/stm32h7xx_hal_timebase_tim.c ****   return HAL_ERROR;
 104:Src/stm32h7xx_hal_timebase_tim.c **** }
  44              		.loc 1 104 1 view .LVU8
  45 0006 7047     		bx	lr
  46              	.LVL2:
  47              	.L11:
  42:Src/stm32h7xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  48              		.loc 1 42 1 view .LVU9
  49 0008 10B5     		push	{r4, lr}
  50              		.cfi_def_cfa_offset 8
  51              		.cfi_offset 4, -8
  52              		.cfi_offset 14, -4
  53 000a 8AB0     		sub	sp, sp, #40
  54              		.cfi_def_cfa_offset 48
  55 000c 0446     		mov	r4, r0
  51:Src/stm32h7xx_hal_timebase_tim.c **** 
  56              		.loc 1 51 6 is_stmt 1 view .LVU10
  57 000e 0022     		movs	r2, #0
  58 0010 0146     		mov	r1, r0
  59 0012 3620     		movs	r0, #54
  60              	.LVL3:
  51:Src/stm32h7xx_hal_timebase_tim.c **** 
  61              		.loc 1 51 6 is_stmt 0 view .LVU11
  62 0014 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  63              	.LVL4:
  54:Src/stm32h7xx_hal_timebase_tim.c ****      uwTickPrio = TickPriority;
  64              		.loc 1 54 6 is_stmt 1 view .LVU12
ARM GAS  /tmp/ccWj0e75.s 			page 4


  65 0018 3620     		movs	r0, #54
  66 001a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  67              	.LVL5:
  55:Src/stm32h7xx_hal_timebase_tim.c ****     }
  68              		.loc 1 55 6 view .LVU13
  55:Src/stm32h7xx_hal_timebase_tim.c ****     }
  69              		.loc 1 55 17 is_stmt 0 view .LVU14
  70 001e 1A4B     		ldr	r3, .L13
  71 0020 1C60     		str	r4, [r3]
  63:Src/stm32h7xx_hal_timebase_tim.c ****   /* Get clock configuration */
  72              		.loc 1 63 3 is_stmt 1 view .LVU15
  73              	.LBB2:
  63:Src/stm32h7xx_hal_timebase_tim.c ****   /* Get clock configuration */
  74              		.loc 1 63 3 view .LVU16
  63:Src/stm32h7xx_hal_timebase_tim.c ****   /* Get clock configuration */
  75              		.loc 1 63 3 view .LVU17
  76 0022 1A4B     		ldr	r3, .L13+4
  77 0024 D3F8E820 		ldr	r2, [r3, #232]
  78 0028 42F01002 		orr	r2, r2, #16
  79 002c C3F8E820 		str	r2, [r3, #232]
  63:Src/stm32h7xx_hal_timebase_tim.c ****   /* Get clock configuration */
  80              		.loc 1 63 3 view .LVU18
  81 0030 D3F8E830 		ldr	r3, [r3, #232]
  82 0034 03F01003 		and	r3, r3, #16
  83 0038 0093     		str	r3, [sp]
  63:Src/stm32h7xx_hal_timebase_tim.c ****   /* Get clock configuration */
  84              		.loc 1 63 3 view .LVU19
  85 003a 009B     		ldr	r3, [sp]
  86              	.LBE2:
  63:Src/stm32h7xx_hal_timebase_tim.c ****   /* Get clock configuration */
  87              		.loc 1 63 3 view .LVU20
  65:Src/stm32h7xx_hal_timebase_tim.c ****   /* Get APB1 prescaler */
  88              		.loc 1 65 3 view .LVU21
  89 003c 01A9     		add	r1, sp, #4
  90 003e 02A8     		add	r0, sp, #8
  91 0040 FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  92              	.LVL6:
  67:Src/stm32h7xx_hal_timebase_tim.c ****   /* Compute TIM6 clock */
  93              		.loc 1 67 3 view .LVU22
  67:Src/stm32h7xx_hal_timebase_tim.c ****   /* Compute TIM6 clock */
  94              		.loc 1 67 19 is_stmt 0 view .LVU23
  95 0044 079B     		ldr	r3, [sp, #28]
  96              	.LVL7:
  69:Src/stm32h7xx_hal_timebase_tim.c ****   {
  97              		.loc 1 69 3 is_stmt 1 view .LVU24
  69:Src/stm32h7xx_hal_timebase_tim.c ****   {
  98              		.loc 1 69 6 is_stmt 0 view .LVU25
  99 0046 BBB9     		cbnz	r3, .L3
  71:Src/stm32h7xx_hal_timebase_tim.c ****   }
 100              		.loc 1 71 5 is_stmt 1 view .LVU26
  71:Src/stm32h7xx_hal_timebase_tim.c ****   }
 101              		.loc 1 71 18 is_stmt 0 view .LVU27
 102 0048 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 103              	.LVL8:
  71:Src/stm32h7xx_hal_timebase_tim.c ****   }
 104              		.loc 1 71 18 view .LVU28
 105 004c 0346     		mov	r3, r0
ARM GAS  /tmp/ccWj0e75.s 			page 5


 106              	.LVL9:
 107              	.L4:
  79:Src/stm32h7xx_hal_timebase_tim.c **** 
 108              		.loc 1 79 3 is_stmt 1 view .LVU29
  79:Src/stm32h7xx_hal_timebase_tim.c **** 
 109              		.loc 1 79 46 is_stmt 0 view .LVU30
 110 004e 104A     		ldr	r2, .L13+8
 111 0050 A2FB0323 		umull	r2, r3, r2, r3
 112              	.LVL10:
  79:Src/stm32h7xx_hal_timebase_tim.c **** 
 113              		.loc 1 79 46 view .LVU31
 114 0054 9B0C     		lsrs	r3, r3, #18
  79:Src/stm32h7xx_hal_timebase_tim.c **** 
 115              		.loc 1 79 20 view .LVU32
 116 0056 013B     		subs	r3, r3, #1
 117              	.LVL11:
  82:Src/stm32h7xx_hal_timebase_tim.c **** 
 118              		.loc 1 82 3 is_stmt 1 view .LVU33
  82:Src/stm32h7xx_hal_timebase_tim.c **** 
 119              		.loc 1 82 18 is_stmt 0 view .LVU34
 120 0058 0E48     		ldr	r0, .L13+12
 121 005a 0F4A     		ldr	r2, .L13+16
 122 005c 0260     		str	r2, [r0]
  91:Src/stm32h7xx_hal_timebase_tim.c ****   htim6.Init.Prescaler = uwPrescalerValue;
 123              		.loc 1 91 3 is_stmt 1 view .LVU35
  91:Src/stm32h7xx_hal_timebase_tim.c ****   htim6.Init.Prescaler = uwPrescalerValue;
 124              		.loc 1 91 21 is_stmt 0 view .LVU36
 125 005e 40F2E732 		movw	r2, #999
 126 0062 C260     		str	r2, [r0, #12]
  92:Src/stm32h7xx_hal_timebase_tim.c ****   htim6.Init.ClockDivision = 0;
 127              		.loc 1 92 3 is_stmt 1 view .LVU37
  92:Src/stm32h7xx_hal_timebase_tim.c ****   htim6.Init.ClockDivision = 0;
 128              		.loc 1 92 24 is_stmt 0 view .LVU38
 129 0064 4360     		str	r3, [r0, #4]
  93:Src/stm32h7xx_hal_timebase_tim.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 130              		.loc 1 93 3 is_stmt 1 view .LVU39
  93:Src/stm32h7xx_hal_timebase_tim.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 131              		.loc 1 93 28 is_stmt 0 view .LVU40
 132 0066 0023     		movs	r3, #0
 133              	.LVL12:
  93:Src/stm32h7xx_hal_timebase_tim.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 134              		.loc 1 93 28 view .LVU41
 135 0068 0361     		str	r3, [r0, #16]
  94:Src/stm32h7xx_hal_timebase_tim.c **** 
 136              		.loc 1 94 3 is_stmt 1 view .LVU42
  94:Src/stm32h7xx_hal_timebase_tim.c **** 
 137              		.loc 1 94 26 is_stmt 0 view .LVU43
 138 006a 8360     		str	r3, [r0, #8]
  96:Src/stm32h7xx_hal_timebase_tim.c ****   {
 139              		.loc 1 96 3 is_stmt 1 view .LVU44
  96:Src/stm32h7xx_hal_timebase_tim.c ****   {
 140              		.loc 1 96 6 is_stmt 0 view .LVU45
 141 006c FFF7FEFF 		bl	HAL_TIM_Base_Init
 142              	.LVL13:
  96:Src/stm32h7xx_hal_timebase_tim.c ****   {
 143              		.loc 1 96 5 discriminator 1 view .LVU46
 144 0070 30B1     		cbz	r0, .L12
ARM GAS  /tmp/ccWj0e75.s 			page 6


 103:Src/stm32h7xx_hal_timebase_tim.c **** }
 145              		.loc 1 103 10 view .LVU47
 146 0072 0120     		movs	r0, #1
 147              	.L2:
 148              		.loc 1 104 1 view .LVU48
 149 0074 0AB0     		add	sp, sp, #40
 150              		.cfi_remember_state
 151              		.cfi_def_cfa_offset 8
 152              		@ sp needed
 153 0076 10BD     		pop	{r4, pc}
 154              	.LVL14:
 155              	.L3:
 156              		.cfi_restore_state
  75:Src/stm32h7xx_hal_timebase_tim.c ****   }
 157              		.loc 1 75 5 is_stmt 1 view .LVU49
  75:Src/stm32h7xx_hal_timebase_tim.c ****   }
 158              		.loc 1 75 24 is_stmt 0 view .LVU50
 159 0078 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 160              	.LVL15:
  75:Src/stm32h7xx_hal_timebase_tim.c ****   }
 161              		.loc 1 75 16 discriminator 1 view .LVU51
 162 007c 4300     		lsls	r3, r0, #1
 163              	.LVL16:
  75:Src/stm32h7xx_hal_timebase_tim.c ****   }
 164              		.loc 1 75 16 discriminator 1 view .LVU52
 165 007e E6E7     		b	.L4
 166              	.LVL17:
 167              	.L12:
  99:Src/stm32h7xx_hal_timebase_tim.c ****   }
 168              		.loc 1 99 5 is_stmt 1 view .LVU53
  99:Src/stm32h7xx_hal_timebase_tim.c ****   }
 169              		.loc 1 99 12 is_stmt 0 view .LVU54
 170 0080 0448     		ldr	r0, .L13+12
 171 0082 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 172              	.LVL18:
 173 0086 F5E7     		b	.L2
 174              	.L14:
 175              		.align	2
 176              	.L13:
 177 0088 00000000 		.word	uwTickPrio
 178 008c 00440258 		.word	1476543488
 179 0090 83DE1B43 		.word	1125899907
 180 0094 00000000 		.word	htim6
 181 0098 00100040 		.word	1073745920
 182              		.cfi_endproc
 183              	.LFE144:
 185              		.section	.text.HAL_SuspendTick,"ax",%progbits
 186              		.align	1
 187              		.global	HAL_SuspendTick
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 192              	HAL_SuspendTick:
 193              	.LFB145:
 105:Src/stm32h7xx_hal_timebase_tim.c **** 
 106:Src/stm32h7xx_hal_timebase_tim.c **** /**
 107:Src/stm32h7xx_hal_timebase_tim.c ****   * @brief  Suspend Tick increment.
ARM GAS  /tmp/ccWj0e75.s 			page 7


 108:Src/stm32h7xx_hal_timebase_tim.c ****   * @note   Disable the tick increment by disabling TIM6 update interrupt.
 109:Src/stm32h7xx_hal_timebase_tim.c ****   * @param  None
 110:Src/stm32h7xx_hal_timebase_tim.c ****   * @retval None
 111:Src/stm32h7xx_hal_timebase_tim.c ****   */
 112:Src/stm32h7xx_hal_timebase_tim.c **** void HAL_SuspendTick(void)
 113:Src/stm32h7xx_hal_timebase_tim.c **** {
 194              		.loc 1 113 1 is_stmt 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              		@ link register save eliminated.
 114:Src/stm32h7xx_hal_timebase_tim.c ****   /* Disable TIM6 update Interrupt */
 115:Src/stm32h7xx_hal_timebase_tim.c ****   __HAL_TIM_DISABLE_IT(&htim6, TIM_IT_UPDATE);
 199              		.loc 1 115 3 view .LVU56
 200 0000 034B     		ldr	r3, .L16
 201 0002 1A68     		ldr	r2, [r3]
 202 0004 D368     		ldr	r3, [r2, #12]
 203 0006 23F00103 		bic	r3, r3, #1
 204 000a D360     		str	r3, [r2, #12]
 116:Src/stm32h7xx_hal_timebase_tim.c **** }
 205              		.loc 1 116 1 is_stmt 0 view .LVU57
 206 000c 7047     		bx	lr
 207              	.L17:
 208 000e 00BF     		.align	2
 209              	.L16:
 210 0010 00000000 		.word	htim6
 211              		.cfi_endproc
 212              	.LFE145:
 214              		.section	.text.HAL_ResumeTick,"ax",%progbits
 215              		.align	1
 216              		.global	HAL_ResumeTick
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 221              	HAL_ResumeTick:
 222              	.LFB146:
 117:Src/stm32h7xx_hal_timebase_tim.c **** 
 118:Src/stm32h7xx_hal_timebase_tim.c **** /**
 119:Src/stm32h7xx_hal_timebase_tim.c ****   * @brief  Resume Tick increment.
 120:Src/stm32h7xx_hal_timebase_tim.c ****   * @note   Enable the tick increment by Enabling TIM6 update interrupt.
 121:Src/stm32h7xx_hal_timebase_tim.c ****   * @param  None
 122:Src/stm32h7xx_hal_timebase_tim.c ****   * @retval None
 123:Src/stm32h7xx_hal_timebase_tim.c ****   */
 124:Src/stm32h7xx_hal_timebase_tim.c **** void HAL_ResumeTick(void)
 125:Src/stm32h7xx_hal_timebase_tim.c **** {
 223              		.loc 1 125 1 is_stmt 1 view -0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 126:Src/stm32h7xx_hal_timebase_tim.c ****   /* Enable TIM6 Update interrupt */
 127:Src/stm32h7xx_hal_timebase_tim.c ****   __HAL_TIM_ENABLE_IT(&htim6, TIM_IT_UPDATE);
 228              		.loc 1 127 3 view .LVU59
 229 0000 034B     		ldr	r3, .L19
 230 0002 1A68     		ldr	r2, [r3]
 231 0004 D368     		ldr	r3, [r2, #12]
 232 0006 43F00103 		orr	r3, r3, #1
ARM GAS  /tmp/ccWj0e75.s 			page 8


 233 000a D360     		str	r3, [r2, #12]
 128:Src/stm32h7xx_hal_timebase_tim.c **** }
 234              		.loc 1 128 1 is_stmt 0 view .LVU60
 235 000c 7047     		bx	lr
 236              	.L20:
 237 000e 00BF     		.align	2
 238              	.L19:
 239 0010 00000000 		.word	htim6
 240              		.cfi_endproc
 241              	.LFE146:
 243              		.global	htim6
 244              		.section	.bss.htim6,"aw",%nobits
 245              		.align	2
 248              	htim6:
 249 0000 00000000 		.space	76
 249      00000000 
 249      00000000 
 249      00000000 
 249      00000000 
 250              		.text
 251              	.Letext0:
 252              		.file 2 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 253              		.file 3 "/home/chris/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-non
 254              		.file 4 "/home/chris/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-non
 255              		.file 5 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 256              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 257              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 258              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 259              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 260              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
ARM GAS  /tmp/ccWj0e75.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h7xx_hal_timebase_tim.c
     /tmp/ccWj0e75.s:20     .text.HAL_InitTick:00000000 $t
     /tmp/ccWj0e75.s:26     .text.HAL_InitTick:00000000 HAL_InitTick
     /tmp/ccWj0e75.s:177    .text.HAL_InitTick:00000088 $d
     /tmp/ccWj0e75.s:248    .bss.htim6:00000000 htim6
     /tmp/ccWj0e75.s:186    .text.HAL_SuspendTick:00000000 $t
     /tmp/ccWj0e75.s:192    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
     /tmp/ccWj0e75.s:210    .text.HAL_SuspendTick:00000010 $d
     /tmp/ccWj0e75.s:215    .text.HAL_ResumeTick:00000000 $t
     /tmp/ccWj0e75.s:221    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
     /tmp/ccWj0e75.s:239    .text.HAL_ResumeTick:00000010 $d
     /tmp/ccWj0e75.s:245    .bss.htim6:00000000 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK1Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
uwTickPrio
