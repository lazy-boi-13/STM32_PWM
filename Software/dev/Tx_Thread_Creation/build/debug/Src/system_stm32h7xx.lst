ARM GAS  /tmp/ccIYA7Cs.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"system_stm32h7xx.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Src/system_stm32h7xx.c"
  19              		.section	.text.SystemInit,"ax",%progbits
  20              		.align	1
  21              		.global	SystemInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	SystemInit:
  27              	.LFB144:
   1:Src/system_stm32h7xx.c **** /**
   2:Src/system_stm32h7xx.c ****   ******************************************************************************
   3:Src/system_stm32h7xx.c ****   * @file    system_stm32h7xx.c
   4:Src/system_stm32h7xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32h7xx.c ****   * @brief   CMSIS Cortex-Mx Device Peripheral Access Layer System Source File.
   6:Src/system_stm32h7xx.c ****   *
   7:Src/system_stm32h7xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Src/system_stm32h7xx.c ****   *   user application:
   9:Src/system_stm32h7xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Src/system_stm32h7xx.c ****   *                      before branch to main program. This call is made inside
  11:Src/system_stm32h7xx.c ****   *                      the "startup_stm32h7xx.s" file.
  12:Src/system_stm32h7xx.c ****   *
  13:Src/system_stm32h7xx.c ****   *      - SystemCoreClock variable: Contains the core clock, it can be used
  14:Src/system_stm32h7xx.c ****   *                                  by the user application to setup the SysTick
  15:Src/system_stm32h7xx.c ****   *                                  timer or configure other parameters.
  16:Src/system_stm32h7xx.c ****   *
  17:Src/system_stm32h7xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Src/system_stm32h7xx.c ****   *                                 be called whenever the core clock is changed
  19:Src/system_stm32h7xx.c ****   *                                 during program execution.
  20:Src/system_stm32h7xx.c ****   *
  21:Src/system_stm32h7xx.c ****   *
  22:Src/system_stm32h7xx.c ****   ******************************************************************************
  23:Src/system_stm32h7xx.c ****   * @attention
  24:Src/system_stm32h7xx.c ****   *
  25:Src/system_stm32h7xx.c ****   * Copyright (c) 2017 STMicroelectronics.
  26:Src/system_stm32h7xx.c ****   * All rights reserved.
  27:Src/system_stm32h7xx.c ****   *
  28:Src/system_stm32h7xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  29:Src/system_stm32h7xx.c ****   * in the root directory of this software component.
  30:Src/system_stm32h7xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  31:Src/system_stm32h7xx.c ****   *
ARM GAS  /tmp/ccIYA7Cs.s 			page 2


  32:Src/system_stm32h7xx.c ****   ******************************************************************************
  33:Src/system_stm32h7xx.c ****   */
  34:Src/system_stm32h7xx.c **** 
  35:Src/system_stm32h7xx.c **** /** @addtogroup CMSIS
  36:Src/system_stm32h7xx.c ****   * @{
  37:Src/system_stm32h7xx.c ****   */
  38:Src/system_stm32h7xx.c **** 
  39:Src/system_stm32h7xx.c **** /** @addtogroup stm32h7xx_system
  40:Src/system_stm32h7xx.c ****   * @{
  41:Src/system_stm32h7xx.c ****   */
  42:Src/system_stm32h7xx.c **** 
  43:Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Includes
  44:Src/system_stm32h7xx.c ****   * @{
  45:Src/system_stm32h7xx.c ****   */
  46:Src/system_stm32h7xx.c **** 
  47:Src/system_stm32h7xx.c **** #include "stm32h7xx.h"
  48:Src/system_stm32h7xx.c **** #include <math.h>
  49:Src/system_stm32h7xx.c **** 
  50:Src/system_stm32h7xx.c **** #if !defined  (HSE_VALUE)
  51:Src/system_stm32h7xx.c **** #define HSE_VALUE    ((uint32_t)25000000) /*!< Value of the External oscillator in Hz */
  52:Src/system_stm32h7xx.c **** #endif /* HSE_VALUE */
  53:Src/system_stm32h7xx.c **** 
  54:Src/system_stm32h7xx.c **** #if !defined  (CSI_VALUE)
  55:Src/system_stm32h7xx.c ****   #define CSI_VALUE    ((uint32_t)4000000) /*!< Value of the Internal oscillator in Hz*/
  56:Src/system_stm32h7xx.c **** #endif /* CSI_VALUE */
  57:Src/system_stm32h7xx.c **** 
  58:Src/system_stm32h7xx.c **** #if !defined  (HSI_VALUE)
  59:Src/system_stm32h7xx.c ****   #define HSI_VALUE    ((uint32_t)64000000) /*!< Value of the Internal oscillator in Hz*/
  60:Src/system_stm32h7xx.c **** #endif /* HSI_VALUE */
  61:Src/system_stm32h7xx.c **** 
  62:Src/system_stm32h7xx.c **** 
  63:Src/system_stm32h7xx.c **** /**
  64:Src/system_stm32h7xx.c ****   * @}
  65:Src/system_stm32h7xx.c ****   */
  66:Src/system_stm32h7xx.c **** 
  67:Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_TypesDefinitions
  68:Src/system_stm32h7xx.c ****   * @{
  69:Src/system_stm32h7xx.c ****   */
  70:Src/system_stm32h7xx.c **** 
  71:Src/system_stm32h7xx.c **** /**
  72:Src/system_stm32h7xx.c ****   * @}
  73:Src/system_stm32h7xx.c ****   */
  74:Src/system_stm32h7xx.c **** 
  75:Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Defines
  76:Src/system_stm32h7xx.c ****   * @{
  77:Src/system_stm32h7xx.c ****   */
  78:Src/system_stm32h7xx.c **** 
  79:Src/system_stm32h7xx.c **** /************************* Miscellaneous Configuration ************************/
  80:Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to use initialized data in D2 domain SRAM (AHB SRAM) 
  81:Src/system_stm32h7xx.c **** /* #define DATA_IN_D2_SRAM */
  82:Src/system_stm32h7xx.c **** 
  83:Src/system_stm32h7xx.c **** /* Note: Following vector table addresses must be defined in line with linker
  84:Src/system_stm32h7xx.c ****          configuration. */
  85:Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
  86:Src/system_stm32h7xx.c ****      anywhere in FLASH BANK1 or AXI SRAM, else the vector table is kept at the automatic
  87:Src/system_stm32h7xx.c ****      remap of boot address selected */
  88:Src/system_stm32h7xx.c **** /* #define USER_VECT_TAB_ADDRESS */
ARM GAS  /tmp/ccIYA7Cs.s 			page 3


  89:Src/system_stm32h7xx.c **** 
  90:Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
  91:Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
  92:Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
  93:Src/system_stm32h7xx.c ****      in D2 AXI SRAM else user remap will be done in FLASH BANK2. */
  94:Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
  95:Src/system_stm32h7xx.c **** #if defined(VECT_TAB_SRAM)
  96:Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   D2_AXISRAM_BASE   /*!< Vector Table base address field.
  97:Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
  98:Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
  99:Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 100:Src/system_stm32h7xx.c **** #else
 101:Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BANK2_BASE  /*!< Vector Table base address field.
 102:Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 103:Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 104:Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 105:Src/system_stm32h7xx.c **** #endif /* VECT_TAB_SRAM */
 106:Src/system_stm32h7xx.c **** #else
 107:Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 108:Src/system_stm32h7xx.c ****      in D1 AXI SRAM else user remap will be done in FLASH BANK1. */
 109:Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
 110:Src/system_stm32h7xx.c **** #if defined(VECT_TAB_SRAM)
 111:Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   D1_AXISRAM_BASE   /*!< Vector Table base address field.
 112:Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 113:Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 114:Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 115:Src/system_stm32h7xx.c **** #else
 116:Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BANK1_BASE  /*!< Vector Table base address field.
 117:Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 118:Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 119:Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 120:Src/system_stm32h7xx.c **** #endif /* VECT_TAB_SRAM */
 121:Src/system_stm32h7xx.c **** #endif /* DUAL_CORE && CORE_CM4 */
 122:Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 123:Src/system_stm32h7xx.c **** /******************************************************************************/
 124:Src/system_stm32h7xx.c **** 
 125:Src/system_stm32h7xx.c **** /**
 126:Src/system_stm32h7xx.c ****   * @}
 127:Src/system_stm32h7xx.c ****   */
 128:Src/system_stm32h7xx.c **** 
 129:Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Macros
 130:Src/system_stm32h7xx.c ****   * @{
 131:Src/system_stm32h7xx.c ****   */
 132:Src/system_stm32h7xx.c **** 
 133:Src/system_stm32h7xx.c **** /**
 134:Src/system_stm32h7xx.c ****   * @}
 135:Src/system_stm32h7xx.c ****   */
 136:Src/system_stm32h7xx.c **** 
 137:Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Variables
 138:Src/system_stm32h7xx.c ****   * @{
 139:Src/system_stm32h7xx.c ****   */
 140:Src/system_stm32h7xx.c ****   /* This variable is updated in three ways:
 141:Src/system_stm32h7xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 142:Src/system_stm32h7xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 143:Src/system_stm32h7xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 144:Src/system_stm32h7xx.c ****          Note: If you use this function to configure the system clock; then there
 145:Src/system_stm32h7xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
ARM GAS  /tmp/ccIYA7Cs.s 			page 4


 146:Src/system_stm32h7xx.c ****                variable is updated automatically.
 147:Src/system_stm32h7xx.c ****   */
 148:Src/system_stm32h7xx.c ****   uint32_t SystemCoreClock = 64000000;
 149:Src/system_stm32h7xx.c ****   uint32_t SystemD2Clock = 64000000;
 150:Src/system_stm32h7xx.c ****   const  uint8_t D1CorePrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 151:Src/system_stm32h7xx.c **** 
 152:Src/system_stm32h7xx.c **** /**
 153:Src/system_stm32h7xx.c ****   * @}
 154:Src/system_stm32h7xx.c ****   */
 155:Src/system_stm32h7xx.c **** 
 156:Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_FunctionPrototypes
 157:Src/system_stm32h7xx.c ****   * @{
 158:Src/system_stm32h7xx.c ****   */
 159:Src/system_stm32h7xx.c **** 
 160:Src/system_stm32h7xx.c **** /**
 161:Src/system_stm32h7xx.c ****   * @}
 162:Src/system_stm32h7xx.c ****   */
 163:Src/system_stm32h7xx.c **** 
 164:Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Functions
 165:Src/system_stm32h7xx.c ****   * @{
 166:Src/system_stm32h7xx.c ****   */
 167:Src/system_stm32h7xx.c **** 
 168:Src/system_stm32h7xx.c **** /**
 169:Src/system_stm32h7xx.c ****   * @brief  Setup the microcontroller system
 170:Src/system_stm32h7xx.c ****   *         Initialize the FPU setting and  vector table location
 171:Src/system_stm32h7xx.c ****   *         configuration.
 172:Src/system_stm32h7xx.c ****   * @param  None
 173:Src/system_stm32h7xx.c ****   * @retval None
 174:Src/system_stm32h7xx.c ****   */
 175:Src/system_stm32h7xx.c **** void SystemInit (void)
 176:Src/system_stm32h7xx.c **** {
  28              		.loc 1 176 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 177:Src/system_stm32h7xx.c **** #if defined (DATA_IN_D2_SRAM)
 178:Src/system_stm32h7xx.c ****  __IO uint32_t tmpreg;
 179:Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 180:Src/system_stm32h7xx.c **** 
 181:Src/system_stm32h7xx.c ****   /* FPU settings ------------------------------------------------------------*/
 182:Src/system_stm32h7xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 183:Src/system_stm32h7xx.c ****     SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
  33              		.loc 1 183 5 view .LVU1
  34              		.loc 1 183 8 is_stmt 0 view .LVU2
  35 0000 224A     		ldr	r2, .L4
  36 0002 D2F88830 		ldr	r3, [r2, #136]
  37              		.loc 1 183 16 view .LVU3
  38 0006 43F47003 		orr	r3, r3, #15728640
  39 000a C2F88830 		str	r3, [r2, #136]
 184:Src/system_stm32h7xx.c ****   #endif
 185:Src/system_stm32h7xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 186:Src/system_stm32h7xx.c **** 
 187:Src/system_stm32h7xx.c ****    /* Increasing the CPU frequency */
 188:Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  40              		.loc 1 188 3 is_stmt 1 view .LVU4
  41              		.loc 1 188 32 is_stmt 0 view .LVU5
ARM GAS  /tmp/ccIYA7Cs.s 			page 5


  42 000e 204B     		ldr	r3, .L4+4
  43 0010 1B68     		ldr	r3, [r3]
  44 0012 03F00F03 		and	r3, r3, #15
  45              		.loc 1 188 5 view .LVU6
  46 0016 062B     		cmp	r3, #6
  47 0018 06D8     		bhi	.L2
 189:Src/system_stm32h7xx.c ****   {
 190:Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 191:Src/system_stm32h7xx.c ****     MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  48              		.loc 1 191 5 is_stmt 1 view .LVU7
  49 001a 1D4A     		ldr	r2, .L4+4
  50 001c 1368     		ldr	r3, [r2]
  51 001e 23F00F03 		bic	r3, r3, #15
  52 0022 43F00703 		orr	r3, r3, #7
  53 0026 1360     		str	r3, [r2]
  54              	.L2:
 192:Src/system_stm32h7xx.c ****   }
 193:Src/system_stm32h7xx.c **** 
 194:Src/system_stm32h7xx.c ****   /* Set HSION bit */
 195:Src/system_stm32h7xx.c ****   RCC->CR |= RCC_CR_HSION;
  55              		.loc 1 195 3 view .LVU8
  56              		.loc 1 195 6 is_stmt 0 view .LVU9
  57 0028 1A4B     		ldr	r3, .L4+8
  58 002a 1A68     		ldr	r2, [r3]
  59              		.loc 1 195 11 view .LVU10
  60 002c 42F00102 		orr	r2, r2, #1
  61 0030 1A60     		str	r2, [r3]
 196:Src/system_stm32h7xx.c **** 
 197:Src/system_stm32h7xx.c ****   /* Reset CFGR register */
 198:Src/system_stm32h7xx.c ****   RCC->CFGR = 0x00000000;
  62              		.loc 1 198 3 is_stmt 1 view .LVU11
  63              		.loc 1 198 13 is_stmt 0 view .LVU12
  64 0032 0022     		movs	r2, #0
  65 0034 1A61     		str	r2, [r3, #16]
 199:Src/system_stm32h7xx.c **** 
 200:Src/system_stm32h7xx.c ****   /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
 201:Src/system_stm32h7xx.c ****   RCC->CR &= 0xEAF6ED7FU;
  66              		.loc 1 201 3 is_stmt 1 view .LVU13
  67              		.loc 1 201 6 is_stmt 0 view .LVU14
  68 0036 1968     		ldr	r1, [r3]
  69              		.loc 1 201 11 view .LVU15
  70 0038 174A     		ldr	r2, .L4+12
  71 003a 0A40     		ands	r2, r2, r1
  72 003c 1A60     		str	r2, [r3]
 202:Src/system_stm32h7xx.c **** 
 203:Src/system_stm32h7xx.c ****    /* Decreasing the number of wait states because of lower CPU frequency */
 204:Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  73              		.loc 1 204 3 is_stmt 1 view .LVU16
  74              		.loc 1 204 32 is_stmt 0 view .LVU17
  75 003e 144B     		ldr	r3, .L4+4
  76 0040 1B68     		ldr	r3, [r3]
  77              		.loc 1 204 5 view .LVU18
  78 0042 13F0080F 		tst	r3, #8
  79 0046 06D0     		beq	.L3
 205:Src/system_stm32h7xx.c ****   {
 206:Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 207:Src/system_stm32h7xx.c ****     MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
ARM GAS  /tmp/ccIYA7Cs.s 			page 6


  80              		.loc 1 207 5 is_stmt 1 view .LVU19
  81 0048 114A     		ldr	r2, .L4+4
  82 004a 1368     		ldr	r3, [r2]
  83 004c 23F00F03 		bic	r3, r3, #15
  84 0050 43F00703 		orr	r3, r3, #7
  85 0054 1360     		str	r3, [r2]
  86              	.L3:
 208:Src/system_stm32h7xx.c ****   }
 209:Src/system_stm32h7xx.c **** 
 210:Src/system_stm32h7xx.c **** #if defined(D3_SRAM_BASE)
 211:Src/system_stm32h7xx.c ****   /* Reset D1CFGR register */
 212:Src/system_stm32h7xx.c ****   RCC->D1CFGR = 0x00000000;
  87              		.loc 1 212 3 view .LVU20
  88              		.loc 1 212 15 is_stmt 0 view .LVU21
  89 0056 0F4B     		ldr	r3, .L4+8
  90 0058 0022     		movs	r2, #0
  91 005a 9A61     		str	r2, [r3, #24]
 213:Src/system_stm32h7xx.c **** 
 214:Src/system_stm32h7xx.c ****   /* Reset D2CFGR register */
 215:Src/system_stm32h7xx.c ****   RCC->D2CFGR = 0x00000000;
  92              		.loc 1 215 3 is_stmt 1 view .LVU22
  93              		.loc 1 215 15 is_stmt 0 view .LVU23
  94 005c DA61     		str	r2, [r3, #28]
 216:Src/system_stm32h7xx.c **** 
 217:Src/system_stm32h7xx.c ****   /* Reset D3CFGR register */
 218:Src/system_stm32h7xx.c ****   RCC->D3CFGR = 0x00000000;
  95              		.loc 1 218 3 is_stmt 1 view .LVU24
  96              		.loc 1 218 15 is_stmt 0 view .LVU25
  97 005e 1A62     		str	r2, [r3, #32]
 219:Src/system_stm32h7xx.c **** #else
 220:Src/system_stm32h7xx.c ****   /* Reset CDCFGR1 register */
 221:Src/system_stm32h7xx.c ****   RCC->CDCFGR1 = 0x00000000;
 222:Src/system_stm32h7xx.c **** 
 223:Src/system_stm32h7xx.c ****   /* Reset CDCFGR2 register */
 224:Src/system_stm32h7xx.c ****   RCC->CDCFGR2 = 0x00000000;
 225:Src/system_stm32h7xx.c **** 
 226:Src/system_stm32h7xx.c ****   /* Reset SRDCFGR register */
 227:Src/system_stm32h7xx.c ****   RCC->SRDCFGR = 0x00000000;
 228:Src/system_stm32h7xx.c **** #endif
 229:Src/system_stm32h7xx.c ****   /* Reset PLLCKSELR register */
 230:Src/system_stm32h7xx.c ****   RCC->PLLCKSELR = 0x02020200;
  98              		.loc 1 230 3 is_stmt 1 view .LVU26
  99              		.loc 1 230 18 is_stmt 0 view .LVU27
 100 0060 0E49     		ldr	r1, .L4+16
 101 0062 9962     		str	r1, [r3, #40]
 231:Src/system_stm32h7xx.c **** 
 232:Src/system_stm32h7xx.c ****   /* Reset PLLCFGR register */
 233:Src/system_stm32h7xx.c ****   RCC->PLLCFGR = 0x01FF0000;
 102              		.loc 1 233 3 is_stmt 1 view .LVU28
 103              		.loc 1 233 16 is_stmt 0 view .LVU29
 104 0064 0E49     		ldr	r1, .L4+20
 105 0066 D962     		str	r1, [r3, #44]
 234:Src/system_stm32h7xx.c ****   /* Reset PLL1DIVR register */
 235:Src/system_stm32h7xx.c ****   RCC->PLL1DIVR = 0x01010280;
 106              		.loc 1 235 3 is_stmt 1 view .LVU30
 107              		.loc 1 235 17 is_stmt 0 view .LVU31
 108 0068 0E49     		ldr	r1, .L4+24
ARM GAS  /tmp/ccIYA7Cs.s 			page 7


 109 006a 1963     		str	r1, [r3, #48]
 236:Src/system_stm32h7xx.c ****   /* Reset PLL1FRACR register */
 237:Src/system_stm32h7xx.c ****   RCC->PLL1FRACR = 0x00000000;
 110              		.loc 1 237 3 is_stmt 1 view .LVU32
 111              		.loc 1 237 18 is_stmt 0 view .LVU33
 112 006c 5A63     		str	r2, [r3, #52]
 238:Src/system_stm32h7xx.c **** 
 239:Src/system_stm32h7xx.c ****   /* Reset PLL2DIVR register */
 240:Src/system_stm32h7xx.c ****   RCC->PLL2DIVR = 0x01010280;
 113              		.loc 1 240 3 is_stmt 1 view .LVU34
 114              		.loc 1 240 17 is_stmt 0 view .LVU35
 115 006e 9963     		str	r1, [r3, #56]
 241:Src/system_stm32h7xx.c **** 
 242:Src/system_stm32h7xx.c ****   /* Reset PLL2FRACR register */
 243:Src/system_stm32h7xx.c **** 
 244:Src/system_stm32h7xx.c ****   RCC->PLL2FRACR = 0x00000000;
 116              		.loc 1 244 3 is_stmt 1 view .LVU36
 117              		.loc 1 244 18 is_stmt 0 view .LVU37
 118 0070 DA63     		str	r2, [r3, #60]
 245:Src/system_stm32h7xx.c ****   /* Reset PLL3DIVR register */
 246:Src/system_stm32h7xx.c ****   RCC->PLL3DIVR = 0x01010280;
 119              		.loc 1 246 3 is_stmt 1 view .LVU38
 120              		.loc 1 246 17 is_stmt 0 view .LVU39
 121 0072 1964     		str	r1, [r3, #64]
 247:Src/system_stm32h7xx.c **** 
 248:Src/system_stm32h7xx.c ****   /* Reset PLL3FRACR register */
 249:Src/system_stm32h7xx.c ****   RCC->PLL3FRACR = 0x00000000;
 122              		.loc 1 249 3 is_stmt 1 view .LVU40
 123              		.loc 1 249 18 is_stmt 0 view .LVU41
 124 0074 5A64     		str	r2, [r3, #68]
 250:Src/system_stm32h7xx.c **** 
 251:Src/system_stm32h7xx.c ****   /* Reset HSEBYP bit */
 252:Src/system_stm32h7xx.c ****   RCC->CR &= 0xFFFBFFFFU;
 125              		.loc 1 252 3 is_stmt 1 view .LVU42
 126              		.loc 1 252 6 is_stmt 0 view .LVU43
 127 0076 1968     		ldr	r1, [r3]
 128              		.loc 1 252 11 view .LVU44
 129 0078 21F48021 		bic	r1, r1, #262144
 130 007c 1960     		str	r1, [r3]
 253:Src/system_stm32h7xx.c **** 
 254:Src/system_stm32h7xx.c ****   /* Disable all interrupts */
 255:Src/system_stm32h7xx.c ****   RCC->CIER = 0x00000000;
 131              		.loc 1 255 3 is_stmt 1 view .LVU45
 132              		.loc 1 255 13 is_stmt 0 view .LVU46
 133 007e 1A66     		str	r2, [r3, #96]
 256:Src/system_stm32h7xx.c **** 
 257:Src/system_stm32h7xx.c **** #if (STM32H7_DEV_ID == 0x450UL)
 258:Src/system_stm32h7xx.c ****   /* dual core CM7 or single core line */
 259:Src/system_stm32h7xx.c ****   if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 260:Src/system_stm32h7xx.c ****   {
 261:Src/system_stm32h7xx.c ****     /* if stm32h7 revY*/
 262:Src/system_stm32h7xx.c ****     /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
 263:Src/system_stm32h7xx.c ****     *((__IO uint32_t*)0x51008108) = 0x000000001U;
 264:Src/system_stm32h7xx.c ****   }
 265:Src/system_stm32h7xx.c **** #endif /* STM32H7_DEV_ID */
 266:Src/system_stm32h7xx.c **** 
 267:Src/system_stm32h7xx.c **** #if defined(DATA_IN_D2_SRAM)
ARM GAS  /tmp/ccIYA7Cs.s 			page 8


 268:Src/system_stm32h7xx.c ****   /* in case of initialized data in D2 SRAM (AHB SRAM), enable the D2 SRAM clock (AHB SRAM clock) *
 269:Src/system_stm32h7xx.c **** #if defined(RCC_AHB2ENR_D2SRAM3EN)
 270:Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN | RCC_AHB2ENR_D2SRAM3EN);
 271:Src/system_stm32h7xx.c **** #elif defined(RCC_AHB2ENR_D2SRAM2EN)
 272:Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN);
 273:Src/system_stm32h7xx.c **** #else
 274:Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_AHBSRAM1EN | RCC_AHB2ENR_AHBSRAM2EN);
 275:Src/system_stm32h7xx.c **** #endif /* RCC_AHB2ENR_D2SRAM3EN */
 276:Src/system_stm32h7xx.c **** 
 277:Src/system_stm32h7xx.c ****   tmpreg = RCC->AHB2ENR;
 278:Src/system_stm32h7xx.c ****   (void) tmpreg;
 279:Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 280:Src/system_stm32h7xx.c **** 
 281:Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 282:Src/system_stm32h7xx.c ****   /* Configure the Vector Table location add offset address for cortex-M4 ------------------*/
 283:Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 284:Src/system_stm32h7xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D2 AX
 285:Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 286:Src/system_stm32h7xx.c **** 
 287:Src/system_stm32h7xx.c **** #else
 288:Src/system_stm32h7xx.c ****   /*
 289:Src/system_stm32h7xx.c ****    * Disable the FMC bank1 (enabled after reset).
 290:Src/system_stm32h7xx.c ****    * This, prevents CPU speculation access on this bank which blocks the use of FMC during
 291:Src/system_stm32h7xx.c ****    * 24us. During this time the others FMC master (such as LTDC) cannot use it!
 292:Src/system_stm32h7xx.c ****    */
 293:Src/system_stm32h7xx.c ****   FMC_Bank1_R->BTCR[0] = 0x000030D2;
 134              		.loc 1 293 3 is_stmt 1 view .LVU47
 135              		.loc 1 293 24 is_stmt 0 view .LVU48
 136 0080 094B     		ldr	r3, .L4+28
 137 0082 43F2D202 		movw	r2, #12498
 138 0086 1A60     		str	r2, [r3]
 294:Src/system_stm32h7xx.c **** 
 295:Src/system_stm32h7xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 296:Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 297:Src/system_stm32h7xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AX
 298:Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 299:Src/system_stm32h7xx.c **** 
 300:Src/system_stm32h7xx.c **** #endif /*DUAL_CORE && CORE_CM4*/
 301:Src/system_stm32h7xx.c **** }
 139              		.loc 1 301 1 view .LVU49
 140 0088 7047     		bx	lr
 141              	.L5:
 142 008a 00BF     		.align	2
 143              	.L4:
 144 008c 00ED00E0 		.word	-536810240
 145 0090 00200052 		.word	1375739904
 146 0094 00440258 		.word	1476543488
 147 0098 7FEDF6EA 		.word	-352916097
 148 009c 00020202 		.word	33686016
 149 00a0 0000FF01 		.word	33488896
 150 00a4 80020101 		.word	16843392
 151 00a8 00400052 		.word	1375748096
 152              		.cfi_endproc
 153              	.LFE144:
 155              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 156              		.align	1
 157              		.global	SystemCoreClockUpdate
ARM GAS  /tmp/ccIYA7Cs.s 			page 9


 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 162              	SystemCoreClockUpdate:
 163              	.LFB145:
 302:Src/system_stm32h7xx.c **** 
 303:Src/system_stm32h7xx.c **** /**
 304:Src/system_stm32h7xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 305:Src/system_stm32h7xx.c ****   *         The SystemCoreClock variable contains the core clock , it can
 306:Src/system_stm32h7xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 307:Src/system_stm32h7xx.c ****   *         other parameters.
 308:Src/system_stm32h7xx.c ****   *
 309:Src/system_stm32h7xx.c ****   * @note   Each time the core clock changes, this function must be called
 310:Src/system_stm32h7xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 311:Src/system_stm32h7xx.c ****   *         based on this variable will be incorrect.
 312:Src/system_stm32h7xx.c ****   *
 313:Src/system_stm32h7xx.c ****   * @note   - The system frequency computed by this function is not the real
 314:Src/system_stm32h7xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 315:Src/system_stm32h7xx.c ****   *           constant and the selected clock source:
 316:Src/system_stm32h7xx.c ****   *
 317:Src/system_stm32h7xx.c ****   *           - If SYSCLK source is CSI, SystemCoreClock will contain the CSI_VALUE(*)
 318:Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 319:Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 320:Src/system_stm32h7xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the CSI_VALUE(*),
 321:Src/system_stm32h7xx.c ****   *             HSI_VALUE(**) or HSE_VALUE(***) multiplied/divided by the PLL factors.
 322:Src/system_stm32h7xx.c ****   *
 323:Src/system_stm32h7xx.c ****   *         (*) CSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 324:Src/system_stm32h7xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 325:Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 326:Src/system_stm32h7xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 327:Src/system_stm32h7xx.c ****   *             64 MHz) but the real value may vary depending on the variations
 328:Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 329:Src/system_stm32h7xx.c ****   *
 330:Src/system_stm32h7xx.c ****   *         (***)HSE_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 331:Src/system_stm32h7xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 332:Src/system_stm32h7xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 333:Src/system_stm32h7xx.c ****   *              have wrong result.
 334:Src/system_stm32h7xx.c ****   *
 335:Src/system_stm32h7xx.c ****   *         - The result of this function could be not correct when using fractional
 336:Src/system_stm32h7xx.c ****   *           value for HSE crystal.
 337:Src/system_stm32h7xx.c ****   * @param  None
 338:Src/system_stm32h7xx.c ****   * @retval None
 339:Src/system_stm32h7xx.c ****   */
 340:Src/system_stm32h7xx.c **** void SystemCoreClockUpdate (void)
 341:Src/system_stm32h7xx.c **** {
 164              		.loc 1 341 1 is_stmt 1 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 169 0000 10B4     		push	{r4}
 170              		.cfi_def_cfa_offset 4
 171              		.cfi_offset 4, -4
 342:Src/system_stm32h7xx.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue, tmp;
 172              		.loc 1 342 3 view .LVU51
 343:Src/system_stm32h7xx.c ****   uint32_t common_system_clock;
 173              		.loc 1 343 3 view .LVU52
ARM GAS  /tmp/ccIYA7Cs.s 			page 10


 344:Src/system_stm32h7xx.c ****   float_t fracn1, pllvco;
 174              		.loc 1 344 3 view .LVU53
 345:Src/system_stm32h7xx.c **** 
 346:Src/system_stm32h7xx.c **** 
 347:Src/system_stm32h7xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 348:Src/system_stm32h7xx.c **** 
 349:Src/system_stm32h7xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 175              		.loc 1 349 3 view .LVU54
 176              		.loc 1 349 14 is_stmt 0 view .LVU55
 177 0002 7B4B     		ldr	r3, .L19
 178 0004 1B69     		ldr	r3, [r3, #16]
 179              		.loc 1 349 21 view .LVU56
 180 0006 03F03803 		and	r3, r3, #56
 181              		.loc 1 349 3 view .LVU57
 182 000a 182B     		cmp	r3, #24
 183 000c 00F2E680 		bhi	.L7
 184 0010 DFE813F0 		tbh	[pc, r3, lsl #1]
 185              	.L9:
 186 0014 1B00     		.2byte	(.L12-.L9)/2
 187 0016 E400     		.2byte	(.L7-.L9)/2
 188 0018 E400     		.2byte	(.L7-.L9)/2
 189 001a E400     		.2byte	(.L7-.L9)/2
 190 001c E400     		.2byte	(.L7-.L9)/2
 191 001e E400     		.2byte	(.L7-.L9)/2
 192 0020 E400     		.2byte	(.L7-.L9)/2
 193 0022 E400     		.2byte	(.L7-.L9)/2
 194 0024 1900     		.2byte	(.L11-.L9)/2
 195 0026 E400     		.2byte	(.L7-.L9)/2
 196 0028 E400     		.2byte	(.L7-.L9)/2
 197 002a E400     		.2byte	(.L7-.L9)/2
 198 002c E400     		.2byte	(.L7-.L9)/2
 199 002e E400     		.2byte	(.L7-.L9)/2
 200 0030 E400     		.2byte	(.L7-.L9)/2
 201 0032 E400     		.2byte	(.L7-.L9)/2
 202 0034 EB00     		.2byte	(.L17-.L9)/2
 203 0036 E400     		.2byte	(.L7-.L9)/2
 204 0038 E400     		.2byte	(.L7-.L9)/2
 205 003a E400     		.2byte	(.L7-.L9)/2
 206 003c E400     		.2byte	(.L7-.L9)/2
 207 003e E400     		.2byte	(.L7-.L9)/2
 208 0040 E400     		.2byte	(.L7-.L9)/2
 209 0042 E400     		.2byte	(.L7-.L9)/2
 210 0044 3700     		.2byte	(.L8-.L9)/2
 211              		.p2align 1
 212              	.L11:
 213 0046 6B4A     		ldr	r2, .L19+4
 214 0048 05E0     		b	.L10
 215              	.L12:
 350:Src/system_stm32h7xx.c ****   {
 351:Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 352:Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 216              		.loc 1 352 5 is_stmt 1 view .LVU58
 217              		.loc 1 352 57 is_stmt 0 view .LVU59
 218 004a 694B     		ldr	r3, .L19
 219 004c 1B68     		ldr	r3, [r3]
 220              		.loc 1 352 78 view .LVU60
 221 004e C3F3C103 		ubfx	r3, r3, #3, #2
ARM GAS  /tmp/ccIYA7Cs.s 			page 11


 222              		.loc 1 352 25 view .LVU61
 223 0052 694A     		ldr	r2, .L19+8
 224 0054 DA40     		lsrs	r2, r2, r3
 225              	.LVL0:
 353:Src/system_stm32h7xx.c ****     break;
 226              		.loc 1 353 5 is_stmt 1 view .LVU62
 227              	.L10:
 354:Src/system_stm32h7xx.c **** 
 355:Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
 356:Src/system_stm32h7xx.c ****     common_system_clock = CSI_VALUE;
 357:Src/system_stm32h7xx.c ****     break;
 358:Src/system_stm32h7xx.c **** 
 359:Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 360:Src/system_stm32h7xx.c ****     common_system_clock = HSE_VALUE;
 361:Src/system_stm32h7xx.c ****     break;
 362:Src/system_stm32h7xx.c **** 
 363:Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */
 364:Src/system_stm32h7xx.c **** 
 365:Src/system_stm32h7xx.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
 366:Src/system_stm32h7xx.c ****     SYSCLK = PLL_VCO / PLLR
 367:Src/system_stm32h7xx.c ****     */
 368:Src/system_stm32h7xx.c ****     pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 369:Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 370:Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 371:Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 372:Src/system_stm32h7xx.c **** 
 373:Src/system_stm32h7xx.c ****     if (pllm != 0U)
 374:Src/system_stm32h7xx.c ****     {
 375:Src/system_stm32h7xx.c ****       switch (pllsource)
 376:Src/system_stm32h7xx.c ****       {
 377:Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSI:  /* HSI used as PLL clock source */
 378:Src/system_stm32h7xx.c **** 
 379:Src/system_stm32h7xx.c ****         hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 380:Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 381:Src/system_stm32h7xx.c **** 
 382:Src/system_stm32h7xx.c ****         break;
 383:Src/system_stm32h7xx.c **** 
 384:Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_CSI:  /* CSI used as PLL clock source */
 385:Src/system_stm32h7xx.c ****           pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 386:Src/system_stm32h7xx.c ****         break;
 387:Src/system_stm32h7xx.c **** 
 388:Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSE:  /* HSE used as PLL clock source */
 389:Src/system_stm32h7xx.c ****           pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 390:Src/system_stm32h7xx.c ****         break;
 391:Src/system_stm32h7xx.c **** 
 392:Src/system_stm32h7xx.c ****       default:
 393:Src/system_stm32h7xx.c ****           hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 394:Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 395:Src/system_stm32h7xx.c ****         break;
 396:Src/system_stm32h7xx.c ****       }
 397:Src/system_stm32h7xx.c ****       pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 398:Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 399:Src/system_stm32h7xx.c ****     }
 400:Src/system_stm32h7xx.c ****     else
 401:Src/system_stm32h7xx.c ****     {
 402:Src/system_stm32h7xx.c ****       common_system_clock = 0U;
 403:Src/system_stm32h7xx.c ****     }
ARM GAS  /tmp/ccIYA7Cs.s 			page 12


 404:Src/system_stm32h7xx.c ****     break;
 405:Src/system_stm32h7xx.c **** 
 406:Src/system_stm32h7xx.c ****   default:
 407:Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 408:Src/system_stm32h7xx.c ****     break;
 409:Src/system_stm32h7xx.c ****   }
 410:Src/system_stm32h7xx.c **** 
 411:Src/system_stm32h7xx.c ****   /* Compute SystemClock frequency --------------------------------------------------*/
 412:Src/system_stm32h7xx.c **** #if defined (RCC_D1CFGR_D1CPRE)
 413:Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos];
 228              		.loc 1 413 3 view .LVU63
 229              		.loc 1 413 30 is_stmt 0 view .LVU64
 230 0056 6648     		ldr	r0, .L19
 231 0058 8369     		ldr	r3, [r0, #24]
 232              		.loc 1 413 59 view .LVU65
 233 005a C3F30323 		ubfx	r3, r3, #8, #4
 234              		.loc 1 413 25 view .LVU66
 235 005e 6749     		ldr	r1, .L19+12
 236 0060 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 237              	.LVL1:
 414:Src/system_stm32h7xx.c **** 
 415:Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 416:Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 238              		.loc 1 416 3 is_stmt 1 view .LVU67
 239              		.loc 1 416 23 is_stmt 0 view .LVU68
 240 0062 DA40     		lsrs	r2, r2, r3
 241              	.LVL2:
 417:Src/system_stm32h7xx.c **** 
 418:Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : CM4 CPU, AXI and AHBs Clock frequency  */
 419:Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_
 242              		.loc 1 419 3 is_stmt 1 view .LVU69
 243              		.loc 1 419 66 is_stmt 0 view .LVU70
 244 0064 8369     		ldr	r3, [r0, #24]
 245              	.LVL3:
 246              		.loc 1 419 93 view .LVU71
 247 0066 03F00F03 		and	r3, r3, #15
 248              		.loc 1 419 61 view .LVU72
 249 006a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 250              		.loc 1 419 118 view .LVU73
 251 006c 03F01F03 		and	r3, r3, #31
 252              		.loc 1 419 40 view .LVU74
 253 0070 22FA03F3 		lsr	r3, r2, r3
 254              		.loc 1 419 17 view .LVU75
 255 0074 6249     		ldr	r1, .L19+16
 256              		.loc 1 419 17 view .LVU76
 257 0076 0B60     		str	r3, [r1]
 420:Src/system_stm32h7xx.c **** 
 421:Src/system_stm32h7xx.c **** #else
 422:Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos];
 423:Src/system_stm32h7xx.c **** 
 424:Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 425:Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 426:Src/system_stm32h7xx.c **** 
 427:Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : AXI and AHBs Clock frequency  */
 428:Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RC
 429:Src/system_stm32h7xx.c **** 
 430:Src/system_stm32h7xx.c **** #endif
ARM GAS  /tmp/ccIYA7Cs.s 			page 13


 431:Src/system_stm32h7xx.c **** 
 432:Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 433:Src/system_stm32h7xx.c ****   SystemCoreClock = SystemD2Clock;
 434:Src/system_stm32h7xx.c **** #else
 435:Src/system_stm32h7xx.c ****   SystemCoreClock = common_system_clock;
 258              		.loc 1 435 3 is_stmt 1 view .LVU77
 259              		.loc 1 435 19 is_stmt 0 view .LVU78
 260 0078 624B     		ldr	r3, .L19+20
 261 007a 1A60     		str	r2, [r3]
 436:Src/system_stm32h7xx.c **** #endif /* DUAL_CORE && CORE_CM4 */
 437:Src/system_stm32h7xx.c **** }
 262              		.loc 1 437 1 view .LVU79
 263 007c 5DF8044B 		ldr	r4, [sp], #4
 264              		.cfi_remember_state
 265              		.cfi_restore 4
 266              		.cfi_def_cfa_offset 0
 267 0080 7047     		bx	lr
 268              	.LVL4:
 269              	.L8:
 270              		.cfi_restore_state
 368:Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 271              		.loc 1 368 5 is_stmt 1 view .LVU80
 368:Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 272              		.loc 1 368 21 is_stmt 0 view .LVU81
 273 0082 5B4B     		ldr	r3, .L19
 274 0084 996A     		ldr	r1, [r3, #40]
 368:Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 275              		.loc 1 368 15 view .LVU82
 276 0086 01F00301 		and	r1, r1, #3
 277              	.LVL5:
 369:Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 278              		.loc 1 369 5 is_stmt 1 view .LVU83
 369:Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 279              		.loc 1 369 17 is_stmt 0 view .LVU84
 280 008a 9C6A     		ldr	r4, [r3, #40]
 369:Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 281              		.loc 1 369 10 view .LVU85
 282 008c C4F30512 		ubfx	r2, r4, #4, #6
 283              	.LVL6:
 370:Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 284              		.loc 1 370 5 is_stmt 1 view .LVU86
 370:Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 285              		.loc 1 370 22 is_stmt 0 view .LVU87
 286 0090 D86A     		ldr	r0, [r3, #44]
 370:Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 287              		.loc 1 370 15 view .LVU88
 288 0092 00F00100 		and	r0, r0, #1
 289              	.LVL7:
 371:Src/system_stm32h7xx.c **** 
 290              		.loc 1 371 5 is_stmt 1 view .LVU89
 371:Src/system_stm32h7xx.c **** 
 291              		.loc 1 371 50 is_stmt 0 view .LVU90
 292 0096 5B6B     		ldr	r3, [r3, #52]
 371:Src/system_stm32h7xx.c **** 
 293              		.loc 1 371 85 view .LVU91
 294 0098 C3F3CC03 		ubfx	r3, r3, #3, #13
 371:Src/system_stm32h7xx.c **** 
ARM GAS  /tmp/ccIYA7Cs.s 			page 14


 295              		.loc 1 371 23 view .LVU92
 296 009c 00FB03F3 		mul	r3, r0, r3
 371:Src/system_stm32h7xx.c **** 
 297              		.loc 1 371 12 view .LVU93
 298 00a0 07EE903A 		vmov	s15, r3	@ int
 299 00a4 F8EE677A 		vcvt.f32.u32	s15, s15
 300              	.LVL8:
 373:Src/system_stm32h7xx.c ****     {
 301              		.loc 1 373 5 is_stmt 1 view .LVU94
 373:Src/system_stm32h7xx.c ****     {
 302              		.loc 1 373 8 is_stmt 0 view .LVU95
 303 00a8 14F47C7F 		tst	r4, #1008
 304 00ac D3D0     		beq	.L10
 375:Src/system_stm32h7xx.c ****       {
 305              		.loc 1 375 7 is_stmt 1 view .LVU96
 306 00ae 0129     		cmp	r1, #1
 307 00b0 36D0     		beq	.L13
 308 00b2 0229     		cmp	r1, #2
 309 00b4 51D0     		beq	.L14
 310 00b6 0029     		cmp	r1, #0
 311 00b8 6CD1     		bne	.L15
 379:Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 312              		.loc 1 379 9 view .LVU97
 379:Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 313              		.loc 1 379 39 is_stmt 0 view .LVU98
 314 00ba 4D48     		ldr	r0, .L19
 315              	.LVL9:
 379:Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 316              		.loc 1 379 39 view .LVU99
 317 00bc 0168     		ldr	r1, [r0]
 318              	.LVL10:
 379:Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 319              		.loc 1 379 60 view .LVU100
 320 00be C1F3C101 		ubfx	r1, r1, #3, #2
 379:Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 321              		.loc 1 379 18 view .LVU101
 322 00c2 4D4B     		ldr	r3, .L19+8
 323 00c4 CB40     		lsrs	r3, r3, r1
 324              	.LVL11:
 380:Src/system_stm32h7xx.c **** 
 325              		.loc 1 380 9 is_stmt 1 view .LVU102
 380:Src/system_stm32h7xx.c **** 
 326              		.loc 1 380 20 is_stmt 0 view .LVU103
 327 00c6 07EE103A 		vmov	s14, r3	@ int
 328 00ca F8EE476A 		vcvt.f32.u32	s13, s14
 380:Src/system_stm32h7xx.c **** 
 329              		.loc 1 380 40 view .LVU104
 330 00ce 07EE102A 		vmov	s14, r2	@ int
 331 00d2 B8EE476A 		vcvt.f32.u32	s12, s14
 380:Src/system_stm32h7xx.c **** 
 332              		.loc 1 380 38 view .LVU105
 333 00d6 86EE867A 		vdiv.f32	s14, s13, s12
 380:Src/system_stm32h7xx.c **** 
 334              		.loc 1 380 81 view .LVU106
 335 00da 036B     		ldr	r3, [r0, #48]
 336              	.LVL12:
 380:Src/system_stm32h7xx.c **** 
ARM GAS  /tmp/ccIYA7Cs.s 			page 15


 337              		.loc 1 380 67 view .LVU107
 338 00dc C3F30803 		ubfx	r3, r3, #0, #9
 380:Src/system_stm32h7xx.c **** 
 339              		.loc 1 380 58 view .LVU108
 340 00e0 06EE903A 		vmov	s13, r3	@ int
 341 00e4 F8EE666A 		vcvt.f32.u32	s13, s13
 380:Src/system_stm32h7xx.c **** 
 342              		.loc 1 380 120 view .LVU109
 343 00e8 9FED476A 		vldr.32	s12, .L19+24
 344 00ec 67EE867A 		vmul.f32	s15, s15, s12
 345              	.LVL13:
 380:Src/system_stm32h7xx.c **** 
 346              		.loc 1 380 111 view .LVU110
 347 00f0 76EEA77A 		vadd.f32	s15, s13, s15
 380:Src/system_stm32h7xx.c **** 
 348              		.loc 1 380 138 view .LVU111
 349 00f4 F7EE006A 		vmov.f32	s13, #1.0e+0
 350 00f8 77EEA67A 		vadd.f32	s15, s15, s13
 380:Src/system_stm32h7xx.c **** 
 351              		.loc 1 380 16 view .LVU112
 352 00fc 27EE277A 		vmul.f32	s14, s14, s15
 353              	.LVL14:
 382:Src/system_stm32h7xx.c **** 
 354              		.loc 1 382 9 is_stmt 1 view .LVU113
 355              	.L16:
 397:Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 356              		.loc 1 397 7 view .LVU114
 397:Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 357              		.loc 1 397 20 is_stmt 0 view .LVU115
 358 0100 3B4B     		ldr	r3, .L19
 359 0102 1B6B     		ldr	r3, [r3, #48]
 397:Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 360              		.loc 1 397 50 view .LVU116
 361 0104 C3F34623 		ubfx	r3, r3, #9, #7
 397:Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 362              		.loc 1 397 12 view .LVU117
 363 0108 0133     		adds	r3, r3, #1
 364              	.LVL15:
 398:Src/system_stm32h7xx.c ****     }
 365              		.loc 1 398 7 is_stmt 1 view .LVU118
 398:Src/system_stm32h7xx.c ****     }
 366              		.loc 1 398 57 is_stmt 0 view .LVU119
 367 010a 07EE903A 		vmov	s15, r3	@ int
 368 010e F8EE677A 		vcvt.f32.u32	s15, s15
 398:Src/system_stm32h7xx.c ****     }
 369              		.loc 1 398 40 view .LVU120
 370 0112 C7EE276A 		vdiv.f32	s13, s14, s15
 398:Src/system_stm32h7xx.c ****     }
 371              		.loc 1 398 27 view .LVU121
 372 0116 FCEEE67A 		vcvt.u32.f32	s15, s13
 373 011a 17EE902A 		vmov	r2, s15	@ int
 374              	.LVL16:
 398:Src/system_stm32h7xx.c ****     }
 375              		.loc 1 398 27 view .LVU122
 376 011e 9AE7     		b	.L10
 377              	.LVL17:
 378              	.L13:
ARM GAS  /tmp/ccIYA7Cs.s 			page 16


 385:Src/system_stm32h7xx.c ****         break;
 379              		.loc 1 385 11 is_stmt 1 view .LVU123
 385:Src/system_stm32h7xx.c ****         break;
 380              		.loc 1 385 42 is_stmt 0 view .LVU124
 381 0120 07EE102A 		vmov	s14, r2	@ int
 382 0124 F8EE476A 		vcvt.f32.u32	s13, s14
 385:Src/system_stm32h7xx.c ****         break;
 383              		.loc 1 385 40 view .LVU125
 384 0128 9FED386A 		vldr.32	s12, .L19+28
 385 012c 86EE267A 		vdiv.f32	s14, s12, s13
 385:Src/system_stm32h7xx.c ****         break;
 386              		.loc 1 385 83 view .LVU126
 387 0130 2F4B     		ldr	r3, .L19
 388 0132 1B6B     		ldr	r3, [r3, #48]
 385:Src/system_stm32h7xx.c ****         break;
 389              		.loc 1 385 69 view .LVU127
 390 0134 C3F30803 		ubfx	r3, r3, #0, #9
 385:Src/system_stm32h7xx.c ****         break;
 391              		.loc 1 385 60 view .LVU128
 392 0138 06EE903A 		vmov	s13, r3	@ int
 393 013c F8EE666A 		vcvt.f32.u32	s13, s13
 385:Src/system_stm32h7xx.c ****         break;
 394              		.loc 1 385 122 view .LVU129
 395 0140 9FED316A 		vldr.32	s12, .L19+24
 396 0144 67EE867A 		vmul.f32	s15, s15, s12
 397              	.LVL18:
 385:Src/system_stm32h7xx.c ****         break;
 398              		.loc 1 385 113 view .LVU130
 399 0148 76EEA77A 		vadd.f32	s15, s13, s15
 385:Src/system_stm32h7xx.c ****         break;
 400              		.loc 1 385 140 view .LVU131
 401 014c F7EE006A 		vmov.f32	s13, #1.0e+0
 402 0150 77EEA67A 		vadd.f32	s15, s15, s13
 385:Src/system_stm32h7xx.c ****         break;
 403              		.loc 1 385 18 view .LVU132
 404 0154 27EE277A 		vmul.f32	s14, s14, s15
 405              	.LVL19:
 386:Src/system_stm32h7xx.c **** 
 406              		.loc 1 386 9 is_stmt 1 view .LVU133
 407 0158 D2E7     		b	.L16
 408              	.LVL20:
 409              	.L14:
 389:Src/system_stm32h7xx.c ****         break;
 410              		.loc 1 389 11 view .LVU134
 389:Src/system_stm32h7xx.c ****         break;
 411              		.loc 1 389 42 is_stmt 0 view .LVU135
 412 015a 07EE102A 		vmov	s14, r2	@ int
 413 015e F8EE476A 		vcvt.f32.u32	s13, s14
 389:Src/system_stm32h7xx.c ****         break;
 414              		.loc 1 389 40 view .LVU136
 415 0162 9FED2B6A 		vldr.32	s12, .L19+32
 416 0166 86EE267A 		vdiv.f32	s14, s12, s13
 389:Src/system_stm32h7xx.c ****         break;
 417              		.loc 1 389 83 view .LVU137
 418 016a 214B     		ldr	r3, .L19
 419 016c 1B6B     		ldr	r3, [r3, #48]
 389:Src/system_stm32h7xx.c ****         break;
ARM GAS  /tmp/ccIYA7Cs.s 			page 17


 420              		.loc 1 389 69 view .LVU138
 421 016e C3F30803 		ubfx	r3, r3, #0, #9
 389:Src/system_stm32h7xx.c ****         break;
 422              		.loc 1 389 60 view .LVU139
 423 0172 06EE903A 		vmov	s13, r3	@ int
 424 0176 F8EE666A 		vcvt.f32.u32	s13, s13
 389:Src/system_stm32h7xx.c ****         break;
 425              		.loc 1 389 122 view .LVU140
 426 017a 9FED236A 		vldr.32	s12, .L19+24
 427 017e 67EE867A 		vmul.f32	s15, s15, s12
 428              	.LVL21:
 389:Src/system_stm32h7xx.c ****         break;
 429              		.loc 1 389 113 view .LVU141
 430 0182 76EEA77A 		vadd.f32	s15, s13, s15
 389:Src/system_stm32h7xx.c ****         break;
 431              		.loc 1 389 140 view .LVU142
 432 0186 F7EE006A 		vmov.f32	s13, #1.0e+0
 433 018a 77EEA67A 		vadd.f32	s15, s15, s13
 389:Src/system_stm32h7xx.c ****         break;
 434              		.loc 1 389 18 view .LVU143
 435 018e 27EE277A 		vmul.f32	s14, s14, s15
 436              	.LVL22:
 390:Src/system_stm32h7xx.c **** 
 437              		.loc 1 390 9 is_stmt 1 view .LVU144
 438 0192 B5E7     		b	.L16
 439              	.LVL23:
 440              	.L15:
 393:Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 441              		.loc 1 393 11 view .LVU145
 393:Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 442              		.loc 1 393 41 is_stmt 0 view .LVU146
 443 0194 1648     		ldr	r0, .L19
 444              	.LVL24:
 393:Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 445              		.loc 1 393 41 view .LVU147
 446 0196 0168     		ldr	r1, [r0]
 447              	.LVL25:
 393:Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 448              		.loc 1 393 62 view .LVU148
 449 0198 C1F3C101 		ubfx	r1, r1, #3, #2
 393:Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 450              		.loc 1 393 20 view .LVU149
 451 019c 164B     		ldr	r3, .L19+8
 452 019e CB40     		lsrs	r3, r3, r1
 453              	.LVL26:
 394:Src/system_stm32h7xx.c ****         break;
 454              		.loc 1 394 11 is_stmt 1 view .LVU150
 394:Src/system_stm32h7xx.c ****         break;
 455              		.loc 1 394 21 is_stmt 0 view .LVU151
 456 01a0 07EE103A 		vmov	s14, r3	@ int
 457 01a4 F8EE476A 		vcvt.f32.u32	s13, s14
 394:Src/system_stm32h7xx.c ****         break;
 458              		.loc 1 394 41 view .LVU152
 459 01a8 07EE102A 		vmov	s14, r2	@ int
 460 01ac B8EE476A 		vcvt.f32.u32	s12, s14
 394:Src/system_stm32h7xx.c ****         break;
 461              		.loc 1 394 39 view .LVU153
ARM GAS  /tmp/ccIYA7Cs.s 			page 18


 462 01b0 86EE867A 		vdiv.f32	s14, s13, s12
 394:Src/system_stm32h7xx.c ****         break;
 463              		.loc 1 394 82 view .LVU154
 464 01b4 036B     		ldr	r3, [r0, #48]
 465              	.LVL27:
 394:Src/system_stm32h7xx.c ****         break;
 466              		.loc 1 394 68 view .LVU155
 467 01b6 C3F30803 		ubfx	r3, r3, #0, #9
 394:Src/system_stm32h7xx.c ****         break;
 468              		.loc 1 394 59 view .LVU156
 469 01ba 06EE903A 		vmov	s13, r3	@ int
 470 01be F8EE666A 		vcvt.f32.u32	s13, s13
 394:Src/system_stm32h7xx.c ****         break;
 471              		.loc 1 394 121 view .LVU157
 472 01c2 9FED116A 		vldr.32	s12, .L19+24
 473 01c6 67EE867A 		vmul.f32	s15, s15, s12
 474              	.LVL28:
 394:Src/system_stm32h7xx.c ****         break;
 475              		.loc 1 394 112 view .LVU158
 476 01ca 76EEA77A 		vadd.f32	s15, s13, s15
 394:Src/system_stm32h7xx.c ****         break;
 477              		.loc 1 394 139 view .LVU159
 478 01ce F7EE006A 		vmov.f32	s13, #1.0e+0
 479 01d2 77EEA67A 		vadd.f32	s15, s15, s13
 394:Src/system_stm32h7xx.c ****         break;
 480              		.loc 1 394 18 view .LVU160
 481 01d6 27EE277A 		vmul.f32	s14, s14, s15
 482              	.LVL29:
 395:Src/system_stm32h7xx.c ****       }
 483              		.loc 1 395 9 is_stmt 1 view .LVU161
 484 01da 91E7     		b	.L16
 485              	.LVL30:
 486              	.L7:
 407:Src/system_stm32h7xx.c ****     break;
 487              		.loc 1 407 5 view .LVU162
 407:Src/system_stm32h7xx.c ****     break;
 488              		.loc 1 407 57 is_stmt 0 view .LVU163
 489 01dc 044B     		ldr	r3, .L19
 490 01de 1B68     		ldr	r3, [r3]
 407:Src/system_stm32h7xx.c ****     break;
 491              		.loc 1 407 78 view .LVU164
 492 01e0 C3F3C103 		ubfx	r3, r3, #3, #2
 407:Src/system_stm32h7xx.c ****     break;
 493              		.loc 1 407 25 view .LVU165
 494 01e4 044A     		ldr	r2, .L19+8
 495 01e6 DA40     		lsrs	r2, r2, r3
 496              	.LVL31:
 408:Src/system_stm32h7xx.c ****   }
 497              		.loc 1 408 5 is_stmt 1 view .LVU166
 498 01e8 35E7     		b	.L10
 499              	.LVL32:
 500              	.L17:
 360:Src/system_stm32h7xx.c ****     break;
 501              		.loc 1 360 25 is_stmt 0 view .LVU167
 502 01ea 0A4A     		ldr	r2, .L19+36
 503 01ec 33E7     		b	.L10
 504              	.L20:
ARM GAS  /tmp/ccIYA7Cs.s 			page 19


 505 01ee 00BF     		.align	2
 506              	.L19:
 507 01f0 00440258 		.word	1476543488
 508 01f4 00093D00 		.word	4000000
 509 01f8 0090D003 		.word	64000000
 510 01fc 00000000 		.word	D1CorePrescTable
 511 0200 00000000 		.word	SystemD2Clock
 512 0204 00000000 		.word	SystemCoreClock
 513 0208 00000039 		.word	956301312
 514 020c 0024744A 		.word	1249125376
 515 0210 0024F44A 		.word	1257513984
 516 0214 00127A00 		.word	8000000
 517              		.cfi_endproc
 518              	.LFE145:
 520              		.global	D1CorePrescTable
 521              		.section	.rodata.D1CorePrescTable,"a"
 522              		.align	2
 525              	D1CorePrescTable:
 526 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004\001\002\003\004\006"
 526      01020304 
 526      01020304 
 526      06
 527 000d 070809   		.ascii	"\007\010\011"
 528              		.global	SystemD2Clock
 529              		.section	.data.SystemD2Clock,"aw"
 530              		.align	2
 533              	SystemD2Clock:
 534 0000 0090D003 		.word	64000000
 535              		.global	SystemCoreClock
 536              		.section	.data.SystemCoreClock,"aw"
 537              		.align	2
 540              	SystemCoreClock:
 541 0000 0090D003 		.word	64000000
 542              		.text
 543              	.Letext0:
 544              		.file 2 "/home/chris/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-non
 545              		.file 3 "/home/chris/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-non
 546              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 547              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 548              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 549              		.file 7 "/home/chris/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-non
ARM GAS  /tmp/ccIYA7Cs.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32h7xx.c
     /tmp/ccIYA7Cs.s:20     .text.SystemInit:00000000 $t
     /tmp/ccIYA7Cs.s:26     .text.SystemInit:00000000 SystemInit
     /tmp/ccIYA7Cs.s:144    .text.SystemInit:0000008c $d
     /tmp/ccIYA7Cs.s:156    .text.SystemCoreClockUpdate:00000000 $t
     /tmp/ccIYA7Cs.s:162    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
     /tmp/ccIYA7Cs.s:186    .text.SystemCoreClockUpdate:00000014 $d
     /tmp/ccIYA7Cs.s:211    .text.SystemCoreClockUpdate:00000046 $t
     /tmp/ccIYA7Cs.s:507    .text.SystemCoreClockUpdate:000001f0 $d
     /tmp/ccIYA7Cs.s:525    .rodata.D1CorePrescTable:00000000 D1CorePrescTable
     /tmp/ccIYA7Cs.s:533    .data.SystemD2Clock:00000000 SystemD2Clock
     /tmp/ccIYA7Cs.s:540    .data.SystemCoreClock:00000000 SystemCoreClock
     /tmp/ccIYA7Cs.s:522    .rodata.D1CorePrescTable:00000000 $d
     /tmp/ccIYA7Cs.s:530    .data.SystemD2Clock:00000000 $d
     /tmp/ccIYA7Cs.s:537    .data.SystemCoreClock:00000000 $d

NO UNDEFINED SYMBOLS
