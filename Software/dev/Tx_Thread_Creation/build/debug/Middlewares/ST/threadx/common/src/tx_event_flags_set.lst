ARM GAS  /tmp/ccMaPMLP.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"tx_event_flags_set.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Middlewares/ST/threadx/common/src/tx_event_flags_set.c"
  19              		.section	.text._tx_event_flags_set,"ax",%progbits
  20              		.align	1
  21              		.global	_tx_event_flags_set
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_tx_event_flags_set:
  27              	.LVL0:
  28              	.LFB8:
   1:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**************************************************************************/
   2:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
   3:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
   5:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*       This software is licensed under the Microsoft Software License   */
   6:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*       and in the root directory of this software.                      */
   9:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  10:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**************************************************************************/
  11:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
  12:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
  13:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**************************************************************************/
  14:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**************************************************************************/
  15:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**                                                                       */
  16:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /** ThreadX Component                                                     */
  17:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**                                                                       */
  18:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**   Event Flags                                                         */
  19:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**                                                                       */
  20:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**************************************************************************/
  21:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**************************************************************************/
  22:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
  23:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #define TX_SOURCE_CODE
  24:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
  25:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
  26:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /* Include necessary system files.  */
  27:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
  28:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #include "tx_api.h"
  29:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #include "tx_trace.h"
  30:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #include "tx_thread.h"
ARM GAS  /tmp/ccMaPMLP.s 			page 2


  31:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #include "tx_event_flags.h"
  32:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
  33:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
  34:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**************************************************************************/
  35:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  36:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  FUNCTION                                               RELEASE        */
  37:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  38:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    _tx_event_flags_set                                 PORTABLE C      */
  39:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                           6.1.11       */
  40:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  AUTHOR                                                                */
  41:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  42:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    William E. Lamie, Microsoft Corporation                             */
  43:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  44:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  DESCRIPTION                                                           */
  45:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  46:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    This function sets the specified flags in the event group based on  */
  47:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    the set option specified.  All threads suspended on the group whose */
  48:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    get request can now be satisfied are resumed.                       */
  49:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  50:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  INPUT                                                                 */
  51:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  52:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    group_ptr                         Pointer to group control block    */
  53:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    flags_to_set                      Event flags to set                */
  54:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    set_option                        Specified either AND or OR        */
  55:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                        operation on the event flags    */
  56:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  57:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  OUTPUT                                                                */
  58:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  59:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    TX_SUCCESS                        Always returns success            */
  60:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  61:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  CALLS                                                                 */
  62:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  63:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    _tx_thread_system_preempt_check   Check for preemption              */
  64:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    _tx_thread_system_resume          Resume thread service             */
  65:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    _tx_thread_system_ni_resume       Non-interruptable resume thread   */
  66:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  67:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  CALLED BY                                                             */
  68:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  69:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    Application Code                                                    */
  70:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  71:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  RELEASE HISTORY                                                       */
  72:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  73:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*    DATE              NAME                      DESCRIPTION             */
  74:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  75:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  05-19-2020      William E. Lamie        Initial Version 6.0           */
  76:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  09-30-2020      Yuxin Zhou              Modified comment(s),          */
  77:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                            resulting in version 6.1    */
  78:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*  04-25-2022      William E. Lamie        Modified comment(s), and      */
  79:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                            added corrected preemption  */
  80:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                            check logic, resulting in   */
  81:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                            version 6.1.11              */
  82:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /*                                                                        */
  83:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** /**************************************************************************/
  84:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** UINT  _tx_event_flags_set(TX_EVENT_FLAGS_GROUP *group_ptr, ULONG flags_to_set, UINT set_option)
  85:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** {
  29              		.loc 1 85 1 view -0
  30              		.cfi_startproc
ARM GAS  /tmp/ccMaPMLP.s 			page 3


  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 85 1 is_stmt 0 view .LVU1
  34 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
  35              		.cfi_def_cfa_offset 40
  36              		.cfi_offset 3, -40
  37              		.cfi_offset 4, -36
  38              		.cfi_offset 5, -32
  39              		.cfi_offset 6, -28
  40              		.cfi_offset 7, -24
  41              		.cfi_offset 8, -20
  42              		.cfi_offset 9, -16
  43              		.cfi_offset 10, -12
  44              		.cfi_offset 11, -8
  45              		.cfi_offset 14, -4
  46 0004 8446     		mov	ip, r0
  86:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
  87:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** TX_INTERRUPT_SAVE_AREA
  47              		.loc 1 87 1 is_stmt 1 view .LVU2
  88:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
  89:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** TX_THREAD       *thread_ptr;
  48              		.loc 1 89 1 view .LVU3
  90:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** TX_THREAD       *next_thread_ptr;
  49              		.loc 1 90 1 view .LVU4
  91:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** TX_THREAD       *next_thread;
  50              		.loc 1 91 1 view .LVU5
  92:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** TX_THREAD       *previous_thread;
  51              		.loc 1 92 1 view .LVU6
  93:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** TX_THREAD       *satisfied_list;
  52              		.loc 1 93 1 view .LVU7
  94:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** TX_THREAD       *last_satisfied;
  53              		.loc 1 94 1 view .LVU8
  95:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** TX_THREAD       *suspended_list;
  54              		.loc 1 95 1 view .LVU9
  96:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** UINT            suspended_count;
  55              		.loc 1 96 1 view .LVU10
  97:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** ULONG           current_event_flags;
  56              		.loc 1 97 1 view .LVU11
  98:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** ULONG           requested_flags;
  57              		.loc 1 98 1 view .LVU12
  99:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** ULONG           flags_satisfied;
  58              		.loc 1 99 1 view .LVU13
 100:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** ULONG           *suspend_info_ptr;
  59              		.loc 1 100 1 view .LVU14
 101:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** UINT            and_request;
  60              		.loc 1 101 1 view .LVU15
 102:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** UINT            get_option;
  61              		.loc 1 102 1 view .LVU16
 103:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** UINT            clear_request;
  62              		.loc 1 103 1 view .LVU17
 104:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** UINT            preempt_check;
  63              		.loc 1 104 1 view .LVU18
 105:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifndef TX_NOT_INTERRUPTABLE
 106:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** UINT            interrupted_set_request;
  64              		.loc 1 106 1 view .LVU19
 107:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 108:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifndef TX_DISABLE_NOTIFY_CALLBACKS
ARM GAS  /tmp/ccMaPMLP.s 			page 4


 109:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** VOID            (*events_set_notify)(struct TX_EVENT_FLAGS_GROUP_STRUCT *notify_group_ptr);
 110:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 111:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 112:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 113:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     /* Disable interrupts to remove the semaphore from the created list.  */
 114:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     TX_DISABLE
  65              		.loc 1 114 5 view .LVU20
  66              	.LBB36:
  67              	.LBI36:
  68              		.file 2 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h"
   1:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
   2:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
   3:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
   5:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*       This software is licensed under the Microsoft Software License   */
   6:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*       and in the root directory of this software.                      */
   9:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  10:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  11:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  12:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  13:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  14:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  15:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**                                                                       */
  16:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /** ThreadX Component                                                     */
  17:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**                                                                       */
  18:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**   Port Specific                                                       */
  19:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**                                                                       */
  20:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  21:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  22:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  23:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  24:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  25:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  26:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  PORT SPECIFIC C INFORMATION                            RELEASE        */
  27:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  28:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    tx_port.h                                         Cortex-M7/GNU     */
  29:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                           6.1.12       */
  30:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  31:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  AUTHOR                                                                */
  32:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  33:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    Scott Larson, Microsoft Corporation                                 */
  34:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  35:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  DESCRIPTION                                                           */
  36:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  37:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    This file contains data type definitions that make the ThreadX      */
  38:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    real-time kernel function identically on a variety of different     */
  39:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    processor architectures.  For example, the size or number of bits   */
  40:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    in an "int" data type vary between microprocessor architectures and */
  41:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    even C compilers for the same microprocessor.  ThreadX does not     */
  42:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    directly use native C data types.  Instead, ThreadX creates its     */
  43:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    own special types that can be mapped to actual data types by this   */
  44:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    file to guarantee consistency in the interface and functionality.   */
  45:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  46:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    This file replaces the previous Cortex-M3/M4/M7 files. It unifies   */
  47:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    the ARMv7-M architecture and compilers into one common file.        */
ARM GAS  /tmp/ccMaPMLP.s 			page 5


  48:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  49:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  RELEASE HISTORY                                                       */
  50:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  51:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    DATE              NAME                      DESCRIPTION             */
  52:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  53:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  06-02-2021      Scott Larson            Initial Version 6.1.7         */
  54:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  01-31-2022      Scott Larson            Modified comments, updated    */
  55:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            typedef to fix misra        */
  56:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            violation,                  */
  57:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            fixed predefined macro,     */
  58:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.10 */
  59:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  04-25-2022      Scott Larson            Modified comments and added   */
  60:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            volatile to registers,      */
  61:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.11 */
  62:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  07-29-2022      Scott Larson            Modified comments and         */
  63:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            described BASEPRI usage,    */
  64:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.12 */
  65:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  66:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  67:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  68:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_PORT_H
  69:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_PORT_H
  70:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  71:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  72:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Determine if the optional ThreadX user define file should be used.  */
  73:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  74:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_INCLUDE_USER_DEFINE_FILE
  75:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  76:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Yes, include the user defines in tx_user.h. The defines in this file may
  77:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    alternately be defined on the command line.  */
  78:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  79:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include "tx_user.h"
  80:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
  81:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  82:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  83:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define compiler library include files.  */
  84:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  85:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include <stdlib.h>
  86:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include <string.h>
  87:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  88:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __ICCARM__
  89:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include <intrinsics.h>                     /* IAR Intrinsics */
  90:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define __asm__ __asm                       /* Define to make all inline asm look similar */
  91:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
  92:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include <yvals.h>
  93:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
  94:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif /* __ICCARM__ */
  95:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  96:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __ghs__
  97:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include <arm_ghs.h>
  98:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include "tx_ghs.h"
  99:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
 100:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 101:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 102:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #if !defined(__GNUC__) && !defined(__CC_ARM)
 103:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define __get_control_value __get_CONTROL
 104:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define __set_control_value __set_CONTROL
ARM GAS  /tmp/ccMaPMLP.s 			page 6


 105:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 106:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 107:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef __GNUC__
 108:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define __get_ipsr_value __get_IPSR
 109:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 110:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 111:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define ThreadX basic types for this port.  */
 112:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 113:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define VOID                                    void
 114:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef char                                    CHAR;
 115:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef unsigned char                           UCHAR;
 116:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef int                                     INT;
 117:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef unsigned int                            UINT;
 118:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef long                                    LONG;
 119:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef unsigned long                           ULONG;
 120:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef unsigned long long                      ULONG64;
 121:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef short                                   SHORT;
 122:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef unsigned short                          USHORT;
 123:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define ULONG64_DEFINED
 124:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 125:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the priority levels for ThreadX.  Legal values range
 126:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    from 32 to 1024 and MUST be evenly divisible by 32.  */
 127:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 128:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MAX_PRIORITIES
 129:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_MAX_PRIORITIES                       32
 130:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 131:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 132:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 133:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the minimum stack for a ThreadX thread on this processor. If the size supplied during
 134:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    thread creation is less than this value, the thread create call will return an error.  */
 135:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 136:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MINIMUM_STACK
 137:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_MINIMUM_STACK                        200         /* Minimum stack size for this port  */
 138:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 139:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 140:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 141:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the system timer thread's default stack size and priority.  These are only applicable
 142:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    if TX_TIMER_PROCESS_IN_ISR is not defined.  */
 143:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 144:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_STACK_SIZE
 145:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_STACK_SIZE              1024        /* Default timer thread stack size  */
 146:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 147:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 148:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_PRIORITY
 149:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_PRIORITY                0           /* Default timer thread priority    */
 150:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 151:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 152:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* By default, ThreadX for Cortex-M uses the PRIMASK register to enable/disable interrupts.
 153:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** If using BASEPRI is desired, define the following two symbols for both c and assembly files:
 154:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** TX_PORT_USE_BASEPRI - This tells ThreadX to use BASEPRI instead of PRIMASK.
 155:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** TX_PORT_BASEPRI = (priority_mask << (8 - number_priority_bits)) - this defines the maximum priority
 156:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** Any interrupt with a higher priority than priority_mask will not be masked, thus the interrupt will
 157:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** */
 158:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 159:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define various constants for the ThreadX Cortex-M port.  */
 160:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 161:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_INT_DISABLE                          1           /* Disable interrupts               */
ARM GAS  /tmp/ccMaPMLP.s 			page 7


 162:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_INT_ENABLE                           0           /* Enable interrupts                */
 163:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 164:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 165:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the clock source for trace event entry time stamp. The following two item are port specif
 166:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    For example, if the time source is at the address 0x0a800024 and is 16-bits in size, the clock
 167:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    source constants would be:
 168:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 169:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((volatile ULONG *) 0x0a800024)
 170:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0x0000FFFFUL
 171:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 172:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** */
 173:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 174:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 175:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_SOURCE
 176:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((volatile ULONG *) 0xE0001004)
 177:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 178:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 179:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG   _tx_misra_time_stamp_get(VOID);
 180:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    _tx_misra_time_stamp_get()
 181:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 182:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 183:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_MASK
 184:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0xFFFFFFFFUL
 185:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 186:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 187:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __ghs__
 188:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define constants for Green Hills EventAnalyzer.  */
 189:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 190:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the number of ticks per second. This informs the EventAnalyzer what the timestamps
 191:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    represent.  By default, this is set to 1,000,000 i.e., one tick every microsecond. */
 192:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 193:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_EL_TICKS_PER_SECOND                  1000000
 194:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 195:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the method of how to get the upper and lower 32-bits of the time stamp. By default, simpl
 196:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    simulate the time-stamp source with a counter.  */
 197:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 198:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define read_tbu()                              _tx_el_time_base_upper
 199:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define read_tbl()                              ++_tx_el_time_base_lower
 200:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
 201:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 202:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the port specific options for the _tx_build_options variable. This variable indicates
 203:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    how the ThreadX library was built.  */
 204:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 205:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_BUILD_OPTIONS          (0)
 206:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 207:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 208:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the in-line initialization constant so that modules with in-line
 209:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    initialization capabilities can prevent their initialization from being
 210:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    a function call.  */
 211:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 212:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 213:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_DISABLE_INLINE
 214:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 215:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_INLINE_INITIALIZATION
 216:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 217:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 218:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
ARM GAS  /tmp/ccMaPMLP.s 			page 8


 219:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Determine whether or not stack checking is enabled. By default, ThreadX stack checking is
 220:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    disabled. When the following is defined, ThreadX thread stack checking is enabled.  If stack
 221:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    checking is enabled (TX_ENABLE_STACK_CHECKING is defined), the TX_DISABLE_STACK_FILLING
 222:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    define is negated, thereby forcing the stack fill which is necessary for the stack checking
 223:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    logic.  */
 224:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 225:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 226:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_ENABLE_STACK_CHECKING
 227:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #undef TX_DISABLE_STACK_FILLING
 228:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 229:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 230:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 231:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 232:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the TX_THREAD control block extensions for this port. The main reason
 233:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    for the multiple macros is so that backward compatibility can be maintained with
 234:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    existing ThreadX kernel awareness modules.  */
 235:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 236:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_0
 237:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_1
 238:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 239:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID    *tx_thread_iar_tls_pointer;
 240:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__ghs__)
 241:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID *  tx_thread_eh_globals;                           \
 242:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                         int     Errno;             /* errno.  */                \
 243:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                         char *  strtok_saved_pos;  /* strtok() position.  */
 244:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 245:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2
 246:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 247:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 248:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 249:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_3
 250:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 251:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 252:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 253:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the port extensions of the remaining ThreadX objects.  */
 254:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 255:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_EXTENSION
 256:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_EXTENSION
 257:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_EXTENSION
 258:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_MUTEX_EXTENSION
 259:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_QUEUE_EXTENSION
 260:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_EXTENSION
 261:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TIMER_EXTENSION
 262:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 263:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 264:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the user extension field of the thread control block.  Nothing
 265:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    additional is needed for this port so it is defined as white space.  */
 266:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 267:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_THREAD_USER_EXTENSION
 268:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_USER_EXTENSION
 269:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 270:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 271:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 272:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the macros for processing extensions in tx_thread_create, tx_thread_delete,
 273:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    tx_thread_shell_entry, and tx_thread_terminate.  */
 274:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 275:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
ARM GAS  /tmp/ccMaPMLP.s 			page 9


 276:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 277:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #if (__VER__ < 8000000)
 278:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 279:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      __iar_dlib_perthread_deallocate
 280:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     thread_ptr -> tx_thread_iar_tls
 281:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               __iar_dlib_perthread_access(0);
 282:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 283:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void    *_tx_iar_create_per_thread_tls_area(void);
 284:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void    _tx_iar_destroy_per_thread_tls_area(void *tls_ptr);
 285:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void    __iar_Initlocks(void);
 286:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 287:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 288:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      do {_tx_iar_destroy_per_thread_
 289:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                         thread_ptr -> tx_thread_iar
 290:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               do {__iar_Initlocks();} while(0
 291:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 292:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 293:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)
 294:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)
 295:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 296:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 297:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #if defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_FPU_VFP)
 298:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 299:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 300:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 301:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG  _tx_misra_control_get(void);
 302:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void   _tx_misra_control_set(ULONG value);
 303:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG  _tx_misra_fpccr_get(void);
 304:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void   _tx_misra_vfp_touch(void);
 305:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 306:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE not defined */
 307:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 308:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define some helper functions (these are intrinsics in some compilers). */
 309:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __GNUC__ /* GCC and ARM Compiler 6 */
 310:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 311:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline ULONG __get_control_value(void)
 312:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 313:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG  control_value;
 314:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 315:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,CONTROL ": "=r" (control_value) );
 316:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(control_value);
 317:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 318:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 319:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_control_value(ULONG control_value)
 320:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 321:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile (" MSR  CONTROL,%0": : "r" (control_value): "memory" );
 322:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 323:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 324:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 325:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 326:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* ARM Compiler 5 */
 327:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 328:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) ULONG __get_control_value(void)
 329:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 330:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG  control_value;
 331:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 332:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm volatile ("MRS control_value,CONTROL");
ARM GAS  /tmp/ccMaPMLP.s 			page 10


 333:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(control_value);
 334:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 335:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 336:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) void __set_control_value(ULONG control_value)
 337:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 338:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR CONTROL,control_value");
 339:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 340:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Can't access VFP registers with inline asm, so define this in tx_thread_schedule.  */
 341:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void _tx_vfp_access(void);
 342:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  _tx_vfp_access();
 343:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 344:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)  /* IAR */
 345:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 346:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* Helper functions for different compilers */
 347:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 348:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 349:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 350:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 351:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* A completed thread falls into _thread_shell_entry and we can simply deactivate the FPU via CONTR
 352:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    in order to ensure no lazy stacking will occur. */
 353:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 354:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 355:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 356:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 357:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 358:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  __get_control_value();    
 359:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 360:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         __set_control_value(_tx_vfp_state);        
 361:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     }
 362:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 363:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 364:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 365:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 366:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_misra_control_get();  
 367:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 368:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_misra_control_set(_tx_vfp_state);      
 369:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     }
 370:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 371:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 372:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 373:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* A thread can be terminated by another thread, so we first check if it's self-terminating and not
 374:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    If so, deactivate the FPU via CONTROL.FPCA. Otherwise we are in an interrupt or another thread i
 375:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    this one, so if the FPCCR.LSPACT bit is set, we need to save the CONTROL.FPCA state, touch the F
 376:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    the lazy FPU save, then restore the CONTROL.FPCA state. */
 377:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 378:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 379:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 380:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 381:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 382:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 383:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 384:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         {                                          
 385:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 386:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  __get_control_value();
 387:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 388:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             __set_control_value(_tx_vfp_state);    
 389:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         }                                          
ARM GAS  /tmp/ccMaPMLP.s 			page 11


 390:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         else                                       
 391:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         {                                          
 392:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 393:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  *((volatile ULONG *) 0xE00
 394:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 395:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 396:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             {                                      
 397:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 398:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = __get_control_value
 399:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 400:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 TX_VFP_TOUCH();                    
 401:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 402:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 {                                  
 403:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  __get_control_
 404:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 405:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     __set_control_value(_tx_vfp_sta
 406:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 }                                  
 407:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             }                                      
 408:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         }                                          
 409:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     }
 410:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 411:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 412:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 413:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 414:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 415:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 416:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         {                                          
 417:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 418:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_misra_control_get(
 419:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 420:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_misra_control_set(_tx_vfp_state);  
 421:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         }                                          
 422:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         else                                       
 423:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         {                                          
 424:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 425:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_misra_fpccr_get();    
 426:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 427:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 428:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             {                                      
 429:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 430:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = _tx_misra_control_g
 431:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 432:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 _tx_misra_vfp_touch();             
 433:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 434:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 {                                  
 435:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_misra_cont
 436:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 437:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     _tx_misra_control_set(_tx_vfp_s
 438:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 }                                  
 439:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             }                                      
 440:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         }                                          
 441:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     }
 442:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 443:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 444:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else   /* No VFP in use */
 445:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 446:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)
ARM GAS  /tmp/ccMaPMLP.s 			page 12


 447:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)
 448:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 449:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_F
 450:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 451:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 452:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the ThreadX object creation extensions for the remaining objects.  */
 453:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 454:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_CREATE_EXTENSION(pool_ptr)
 455:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_CREATE_EXTENSION(pool_ptr)
 456:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_CREATE_EXTENSION(group_ptr)
 457:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_MUTEX_CREATE_EXTENSION(mutex_ptr)
 458:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_QUEUE_CREATE_EXTENSION(queue_ptr)
 459:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_CREATE_EXTENSION(semaphore_ptr)
 460:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TIMER_CREATE_EXTENSION(timer_ptr)
 461:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 462:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 463:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the ThreadX object deletion extensions for the remaining objects.  */
 464:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 465:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_DELETE_EXTENSION(pool_ptr)
 466:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_DELETE_EXTENSION(pool_ptr)
 467:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_DELETE_EXTENSION(group_ptr)
 468:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_MUTEX_DELETE_EXTENSION(mutex_ptr)
 469:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_QUEUE_DELETE_EXTENSION(queue_ptr)
 470:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_DELETE_EXTENSION(semaphore_ptr)
 471:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TIMER_DELETE_EXTENSION(timer_ptr)
 472:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 473:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 474:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the get system state macro.  */
 475:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 476:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_THREAD_GET_SYSTEM_STATE
 477:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 478:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 479:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __CC_ARM /* ARM Compiler 5 */
 480:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 481:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** register unsigned int _ipsr __asm("ipsr");
 482:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _ipsr)
 483:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 484:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and ARM Compiler 6 */
 485:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 486:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_ipsr_value(void)
 487:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 488:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** unsigned int  ipsr_value;
 489:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
 490:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(ipsr_value);
 491:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 492:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 493:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_ipsr_value())
 494:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 495:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)   /* IAR */
 496:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 497:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_IPSR())
 498:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 499:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE for different compilers */
 500:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 501:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE is defined, use MISRA function. */
 502:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG   _tx_misra_ipsr_get(VOID);
 503:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _tx_misra_ipsr_get())
ARM GAS  /tmp/ccMaPMLP.s 			page 13


 504:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 505:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE */
 506:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 507:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 508:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the check for whether or not to call the _tx_thread_system_return function.  A non-zero v
 509:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    indicates that _tx_thread_system_return should not be called. This overrides the definition in t
 510:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    for Cortex-M since so we don't waste time checking the _tx_thread_system_state variable that is 
 511:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    zero after initialization for Cortex-M ports. */
 512:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 513:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_THREAD_SYSTEM_RETURN_CHECK
 514:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_SYSTEM_RETURN_CHECK(c)    (c) = ((ULONG) _tx_thread_preempt_disable);
 515:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 516:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 517:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the macro to ensure _tx_thread_preempt_disable is set early in initialization in order to
 518:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    prevent early scheduling on Cortex-M parts.  */
 519:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 520:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_POST_INITIALIZATION    _tx_thread_preempt_disable++;
 521:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 522:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 523:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 524:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 525:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_DISABLE_INLINE
 526:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 527:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the TX_LOWEST_SET_BIT_CALCULATE macro for each compiler. */
 528:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __ICCARM__       /* IAR Compiler */
 529:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __CLZ(__RBIT((m)));
 530:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* AC5 Compiler */
 531:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __clz(__rbit((m)));
 532:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and AC6 Compiler */
 533:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       __asm__ volatile (" RBIT %0,%1 ": "=r" (m) : "r" (m
 534:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                 __asm__ volatile (" CLZ  %0,%1 ": "=r" (b) : "r" (m
 535:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 536:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 537:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 538:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 539:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the interrupt disable/restore macros for each compiler. */
 540:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 541:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #if defined(__GNUC__) || defined(__ICCARM__)
 542:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 543:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*** GCC/AC6 and IAR ***/
 544:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 545:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_interrupt_posture(void)
 546:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 547:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** unsigned int posture;
 548:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 549:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, BASEPRI ": "=r" (posture));
 550:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 551:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
 552:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(posture);
 554:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 555:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 556:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 557:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_basepri_value(unsigned int basepri_valu
 558:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 559:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  BASEPRI,%0 ": : "r" (basepri_value));
 560:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
ARM GAS  /tmp/ccMaPMLP.s 			page 14


 561:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 562:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __enable_interrupts(void)
 563:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 564:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSIE  i": : : "memory");
 565:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 566:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 567:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __restore_interrupt(unsigned int int_posture)
 569:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 570:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 571:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __set_basepri_value(int_posture);
 572:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     //__asm__ volatile ("MSR  BASEPRI,%0": : "r" (int_posture): "memory");
 573:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
 575:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 576:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 577:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 578:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __disable_interrupts(void)
  69              		.loc 2 578 63 view .LVU21
  70              	.LBB37:
 579:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 580:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** unsigned int int_posture;
  71              		.loc 2 580 1 view .LVU22
 581:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 582:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     int_posture = __get_interrupt_posture();
  72              		.loc 2 582 5 view .LVU23
  73              	.LBB38:
  74              	.LBI38:
 545:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
  75              		.loc 2 545 63 view .LVU24
  76              	.LBB39:
 547:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
  77              		.loc 2 547 1 view .LVU25
 551:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
  78              		.loc 2 551 5 view .LVU26
  79              		.syntax unified
  80              	@ 551 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
  81 0006 EFF3108E 		MRS  lr, PRIMASK 
  82              	@ 0 "" 2
  83              	.LVL1:
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
  84              		.loc 2 553 5 view .LVU27
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
  85              		.loc 2 553 5 is_stmt 0 view .LVU28
  86              		.thumb
  87              		.syntax unified
  88              	.LBE39:
  89              	.LBE38:
 583:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 584:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 585:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __set_basepri_value(TX_PORT_BASEPRI);
 586:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 587:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSID i" : : : "memory");
  90              		.loc 2 587 5 is_stmt 1 view .LVU29
  91              		.syntax unified
  92              	@ 587 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
  93 000a 72B6     		CPSID i
ARM GAS  /tmp/ccMaPMLP.s 			page 15


  94              	@ 0 "" 2
 588:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 589:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(int_posture);
  95              		.loc 2 589 5 view .LVU30
  96              	.LVL2:
  97              		.loc 2 589 5 is_stmt 0 view .LVU31
  98              		.thumb
  99              		.syntax unified
 100              	.LBE37:
 101              	.LBE36:
 115:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 116:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifdef TX_EVENT_FLAGS_ENABLE_PERFORMANCE_INFO
 117:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 118:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     /* Increment the total event flags set counter.  */
 119:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     _tx_event_flags_performance_set_count++;
 120:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 121:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     /* Increment the number of event flags sets on this semaphore.  */
 122:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     group_ptr -> tx_event_flags_group_performance_set_count++;
 123:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 124:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 125:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     /* If trace is enabled, insert this event into the trace buffer.  */
 126:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     TX_TRACE_IN_LINE_INSERT(TX_TRACE_EVENT_FLAGS_SET, group_ptr, flags_to_set, set_option, group_pt
 127:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 128:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     /* Log this kernel call.  */
 129:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     TX_EL_EVENT_FLAGS_SET_INSERT
 130:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 131:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     /* Determine how to set this group's event flags.  */
 132:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     if ((set_option & TX_EVENT_FLAGS_AND_MASK) == TX_AND)
 102              		.loc 1 132 5 is_stmt 1 view .LVU32
 103              		.loc 1 132 8 is_stmt 0 view .LVU33
 104 000c 12F00205 		ands	r5, r2, #2
 105 0010 12D0     		beq	.L2
 133:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     {
 134:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 135:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifndef TX_NOT_INTERRUPTABLE
 136:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 137:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Set interrupted set request flag to false.  */
 138:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         interrupted_set_request =  TX_FALSE;
 106              		.loc 1 138 9 is_stmt 1 view .LVU34
 107              	.LVL3:
 139:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 140:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Determine if the suspension list is being processed by an interrupted
 141:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****            set request.  */
 142:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         if (group_ptr -> tx_event_flags_group_suspended_count != TX_NO_SUSPENSIONS)
 108              		.loc 1 142 9 view .LVU35
 109              		.loc 1 142 23 is_stmt 0 view .LVU36
 110 0012 4369     		ldr	r3, [r0, #20]
 111              		.loc 1 142 12 view .LVU37
 112 0014 0BB1     		cbz	r3, .L3
 143:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 144:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 145:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             if (group_ptr -> tx_event_flags_group_suspension_list == TX_NULL)
 113              		.loc 1 145 13 is_stmt 1 view .LVU38
 114              		.loc 1 145 27 is_stmt 0 view .LVU39
 115 0016 0369     		ldr	r3, [r0, #16]
 116              		.loc 1 145 16 view .LVU40
 117 0018 4BB1     		cbz	r3, .L32
ARM GAS  /tmp/ccMaPMLP.s 			page 16


 118              	.L3:
 119              	.LVL4:
 146:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             {
 147:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 148:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Set the interrupted set request flag.  */
 149:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 interrupted_set_request =  TX_TRUE;
 150:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             }
 151:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 152:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 153:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Was a set request interrupted?  */
 154:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         if (interrupted_set_request == TX_TRUE)
 155:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 156:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 157:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             /* A previous set operation was interrupted, we need to defer the
 158:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                event clearing until the set operation is complete.  */
 159:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 160:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             /* Remember the events to clear.  */
 161:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             group_ptr -> tx_event_flags_group_delayed_clear =
 162:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                         group_ptr -> tx_event_flags_group_delayed_clear | ~flags_to
 163:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 164:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         else
 165:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 166:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 167:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 168:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             /* Previous set operation was not interrupted, simply clear the
 169:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                specified flags by "ANDing" the flags into the current events
 170:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                of the group.  */
 171:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             group_ptr -> tx_event_flags_group_current =
 120              		.loc 1 171 13 is_stmt 1 view .LVU41
 172:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 group_ptr -> tx_event_flags_group_current & flags_to_set;
 121              		.loc 1 172 27 is_stmt 0 view .LVU42
 122 001a DCF80830 		ldr	r3, [ip, #8]
 123              		.loc 1 172 59 view .LVU43
 124 001e 0B40     		ands	r3, r3, r1
 171:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 group_ptr -> tx_event_flags_group_current & flags_to_set;
 125              		.loc 1 171 55 view .LVU44
 126 0020 CCF80830 		str	r3, [ip, #8]
 127              	.L4:
 173:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 174:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifndef TX_NOT_INTERRUPTABLE
 175:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 176:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 177:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 178:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 179:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Restore interrupts.  */
 180:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         TX_RESTORE
 128              		.loc 1 180 9 is_stmt 1 view .LVU45
 129              	.LVL5:
 130              	.LBB40:
 131              	.LBI40:
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 132              		.loc 2 568 55 view .LVU46
 133              	.LBB41:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 134              		.loc 2 574 5 view .LVU47
 135              		.syntax unified
 136              	@ 574 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
ARM GAS  /tmp/ccMaPMLP.s 			page 17


 137 0024 8EF31088 		MSR  PRIMASK,lr
 138              	@ 0 "" 2
 139              	.LVL6:
 140              		.thumb
 141              		.syntax unified
 142              	.L5:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 143              		.loc 2 574 5 is_stmt 0 view .LVU48
 144              	.LBE41:
 145              	.LBE40:
 181:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     }
 182:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     else
 183:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     {
 184:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 185:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifndef TX_DISABLE_NOTIFY_CALLBACKS
 186:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 187:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Pickup the notify callback routine for this event flag group.  */
 188:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         events_set_notify =  group_ptr -> tx_event_flags_group_set_notify;
 189:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 190:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 191:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* "OR" the flags into the current events of the group.  */
 192:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         group_ptr -> tx_event_flags_group_current =
 193:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             group_ptr -> tx_event_flags_group_current | flags_to_set;
 194:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 195:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifndef TX_NOT_INTERRUPTABLE
 196:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 197:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Determine if there are any delayed flags to clear.  */
 198:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         if (group_ptr -> tx_event_flags_group_delayed_clear != ((ULONG) 0))
 199:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 200:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 201:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             /* Yes, we need to neutralize the delayed clearing as well.  */
 202:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             group_ptr -> tx_event_flags_group_delayed_clear =
 203:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                         group_ptr -> tx_event_flags_group_delayed_clear & ~flags_to
 204:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 205:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 206:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 207:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Clear the preempt check flag.  */
 208:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         preempt_check =  TX_FALSE;
 209:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 210:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Pickup the thread suspended count.  */
 211:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         suspended_count =  group_ptr -> tx_event_flags_group_suspended_count;
 212:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 213:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Determine if there are any threads suspended on the event flag group.  */
 214:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         if (group_ptr -> tx_event_flags_group_suspension_list != TX_NULL)
 215:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 216:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 217:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             /* Determine if there is just a single thread waiting on the event
 218:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                flag group.  */
 219:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             if (suspended_count == ((UINT) 1))
 220:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             {
 221:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 222:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Single thread waiting for event flags.  Bypass the multiple thread
 223:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                    logic.  */
 224:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 225:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Setup thread pointer.  */
 226:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 thread_ptr =  group_ptr -> tx_event_flags_group_suspension_list;
 227:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
ARM GAS  /tmp/ccMaPMLP.s 			page 18


 228:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Pickup the current event flags.  */
 229:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 current_event_flags =  group_ptr -> tx_event_flags_group_current;
 230:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 231:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Pickup the suspend information.  */
 232:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 requested_flags =  thread_ptr -> tx_thread_suspend_info;
 233:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 234:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Pickup the suspend option.  */
 235:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 get_option =  thread_ptr -> tx_thread_suspend_option;
 236:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 237:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Isolate the AND selection.  */
 238:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 and_request =  (get_option & TX_AND);
 239:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 240:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Check for AND condition. All flags must be present to satisfy request.  */
 241:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 if (and_request == TX_AND)
 242:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 243:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 244:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* AND request is present.  */
 245:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 246:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Calculate the flags present.  */
 247:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     flags_satisfied =  (current_event_flags & requested_flags);
 248:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 249:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Determine if they satisfy the AND request.  */
 250:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     if (flags_satisfied != requested_flags)
 251:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 252:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 253:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* No, not all the requested flags are present. Clear the flags present var
 254:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         flags_satisfied =  ((ULONG) 0);
 255:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 256:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 257:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 else
 258:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 259:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 260:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* OR request is present. Simply or the requested flags and the current flags. 
 261:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     flags_satisfied =  (current_event_flags & requested_flags);
 262:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 263:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 264:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Determine if the request is satisfied.  */
 265:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 if (flags_satisfied != ((ULONG) 0))
 266:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 267:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 268:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Yes, resume the thread and apply any event flag
 269:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                        clearing.  */
 270:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 271:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Return the actual event flags that satisfied the request.  */
 272:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     suspend_info_ptr =   TX_VOID_TO_ULONG_POINTER_CONVERT(thread_ptr -> tx_thread_a
 273:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     *suspend_info_ptr =  current_event_flags;
 274:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 275:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Pickup the clear bit.  */
 276:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     clear_request =  (get_option & TX_EVENT_FLAGS_CLEAR_MASK);
 277:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 278:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Determine whether or not clearing needs to take place.  */
 279:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     if (clear_request == TX_TRUE)
 280:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 281:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 282:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Yes, clear the flags that satisfied this request.  */
 283:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         group_ptr -> tx_event_flags_group_current =  group_ptr -> tx_event_flags_gr
 284:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
ARM GAS  /tmp/ccMaPMLP.s 			page 19


 285:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 286:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Clear the suspension information in the event flag group.  */
 287:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     group_ptr -> tx_event_flags_group_suspension_list =  TX_NULL;
 288:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     group_ptr -> tx_event_flags_group_suspended_count =  TX_NO_SUSPENSIONS;
 289:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 290:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Clear cleanup routine to avoid timeout.  */
 291:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     thread_ptr -> tx_thread_suspend_cleanup =  TX_NULL;
 292:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 293:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Put return status into the thread control block.  */
 294:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     thread_ptr -> tx_thread_suspend_status =  TX_SUCCESS;
 295:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 296:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifdef TX_NOT_INTERRUPTABLE
 297:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 298:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Resume the thread!  */
 299:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     _tx_thread_system_ni_resume(thread_ptr);
 300:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #else
 301:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 302:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Temporarily disable preemption.  */
 303:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     _tx_thread_preempt_disable++;
 304:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 305:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Restore interrupts.  */
 306:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     TX_RESTORE
 307:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 308:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Resume thread.  */
 309:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     _tx_thread_system_resume(thread_ptr);
 310:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 311:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Disable interrupts to remove the semaphore from the created list.  */
 312:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     TX_DISABLE
 313:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 314:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 315:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             }
 316:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             else
 317:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             {
 318:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 319:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Otherwise, the event flag requests of multiple threads must be
 320:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                    examined.  */
 321:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 322:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Setup thread pointer, keep a local copy of the head pointer.  */
 323:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 suspended_list =  group_ptr -> tx_event_flags_group_suspension_list;
 324:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 thread_ptr =      suspended_list;
 325:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 326:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Clear the suspended list head pointer to thwart manipulation of
 327:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                    the list in ISR's while we are processing here.  */
 328:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 group_ptr -> tx_event_flags_group_suspension_list =  TX_NULL;
 329:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 330:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Setup the satisfied thread pointers.  */
 331:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 satisfied_list =  TX_NULL;
 332:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 last_satisfied =  TX_NULL;
 333:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 334:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Pickup the current event flags.  */
 335:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 current_event_flags =  group_ptr -> tx_event_flags_group_current;
 336:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 337:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Disable preemption while we process the suspended list.  */
 338:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 _tx_thread_preempt_disable++;
 339:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 340:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Since we have temporarily disabled preemption globally, set the preempt 
 341:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                    check flag to check for any preemption condition - including from 
ARM GAS  /tmp/ccMaPMLP.s 			page 20


 342:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                    unrelated ISR processing.  */
 343:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 preempt_check =  TX_TRUE;
 344:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 345:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Loop to examine all of the suspended threads. */
 346:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 do
 347:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 348:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 349:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifndef TX_NOT_INTERRUPTABLE
 350:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 351:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Restore interrupts temporarily.  */
 352:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     TX_RESTORE
 353:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 354:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Disable interrupts again.  */
 355:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     TX_DISABLE
 356:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 357:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 358:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Determine if we need to reset the search.  */
 359:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     if (group_ptr -> tx_event_flags_group_reset_search != TX_FALSE)
 360:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 361:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 362:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Clear the reset search flag.  */
 363:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         group_ptr -> tx_event_flags_group_reset_search =  TX_FALSE;
 364:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 365:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Move the thread pointer to the beginning of the search list.  */
 366:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         thread_ptr =  suspended_list;
 367:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 368:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Reset the suspended count.  */
 369:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         suspended_count =  group_ptr -> tx_event_flags_group_suspended_count;
 370:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 371:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Update the current events with any new ones that might
 372:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                            have been set in a nested set events call from an ISR.  */
 373:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         current_event_flags =  current_event_flags | group_ptr -> tx_event_flags_gr
 374:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 375:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 376:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Save next thread pointer.  */
 377:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     next_thread_ptr =  thread_ptr -> tx_thread_suspended_next;
 378:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 379:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Pickup the suspend information.  */
 380:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     requested_flags =  thread_ptr -> tx_thread_suspend_info;
 381:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 382:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Pickup this thread's suspension get option.  */
 383:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     get_option =  thread_ptr -> tx_thread_suspend_option;
 384:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 385:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Isolate the AND selection.  */
 386:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     and_request =  (get_option & TX_AND);
 387:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 388:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Check for AND condition. All flags must be present to satisfy request.  */
 389:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     if (and_request == TX_AND)
 390:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 391:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 392:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* AND request is present.  */
 393:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 394:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Calculate the flags present.  */
 395:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         flags_satisfied =  (current_event_flags & requested_flags);
 396:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 397:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Determine if they satisfy the AND request.  */
 398:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         if (flags_satisfied != requested_flags)
ARM GAS  /tmp/ccMaPMLP.s 			page 21


 399:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 400:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 401:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* No, not all the requested flags are present. Clear the flags present
 402:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             flags_satisfied =  ((ULONG) 0);
 403:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 404:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 405:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     else
 406:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 407:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 408:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* OR request is present. Simply or the requested flags and the current fla
 409:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         flags_satisfied =  (current_event_flags & requested_flags);
 410:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 411:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 412:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Check to see if the thread had a timeout or wait abort during the event sear
 413:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                        If so, just set the flags satisfied to ensure the processing here removes th
 414:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                        the suspension list.  */
 415:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     if (thread_ptr -> tx_thread_state != TX_EVENT_FLAG)
 416:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 417:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 418:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                        /* Simply set the satisfied flags to 1 in order to remove the thread from th
 419:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         flags_satisfied =  ((ULONG) 1);
 420:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 421:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 422:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Determine if the request is satisfied.  */
 423:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     if (flags_satisfied != ((ULONG) 0))
 424:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 425:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 426:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Yes, this request can be handled now.  */
 427:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 428:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Determine if the thread is still suspended on the event flag group. If n
 429:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                            abort must have been done from an ISR.  */
 430:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         if (thread_ptr -> tx_thread_state == TX_EVENT_FLAG)
 431:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 432:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 433:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Return the actual event flags that satisfied the request.  */
 434:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             suspend_info_ptr =   TX_VOID_TO_ULONG_POINTER_CONVERT(thread_ptr -> tx_
 435:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             *suspend_info_ptr =  current_event_flags;
 436:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 437:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Pickup the clear bit.  */
 438:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             clear_request =  (get_option & TX_EVENT_FLAGS_CLEAR_MASK);
 439:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 440:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Determine whether or not clearing needs to take place.  */
 441:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             if (clear_request == TX_TRUE)
 442:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             {
 443:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 444:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                 /* Yes, clear the flags that satisfied this request.  */
 445:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                 group_ptr -> tx_event_flags_group_current =  group_ptr -> tx_event_
 446:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             }
 447:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 448:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Prepare for resumption of the first thread.  */
 449:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 450:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Clear cleanup routine to avoid timeout.  */
 451:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             thread_ptr -> tx_thread_suspend_cleanup =  TX_NULL;
 452:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 453:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Put return status into the thread control block.  */
 454:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             thread_ptr -> tx_thread_suspend_status =  TX_SUCCESS;
 455:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
ARM GAS  /tmp/ccMaPMLP.s 			page 22


 456:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 457:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* We need to remove the thread from the suspension list and place it in th
 458:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                            expired list.  */
 459:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 460:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* See if this is the only suspended thread on the list.  */
 461:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         if (thread_ptr == thread_ptr -> tx_thread_suspended_next)
 462:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 463:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 464:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Yes, the only suspended thread.  */
 465:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 466:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Update the head pointer.  */
 467:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             suspended_list =  TX_NULL;
 468:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 469:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         else
 470:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 471:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 472:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* At least one more thread is on the same expiration list.  */
 473:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 474:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Update the links of the adjacent threads.  */
 475:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             next_thread =                                  thread_ptr -> tx_thread_
 476:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             previous_thread =                              thread_ptr -> tx_thread_
 477:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             next_thread -> tx_thread_suspended_previous =  previous_thread;
 478:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             previous_thread -> tx_thread_suspended_next =  next_thread;
 479:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 480:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Update the list head pointer, if removing the head of the
 481:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                list.  */
 482:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             if (suspended_list == thread_ptr)
 483:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             {
 484:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 485:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                 /* Yes, head pointer needs to be updated.  */
 486:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                 suspended_list =  thread_ptr -> tx_thread_suspended_next;
 487:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             }
 488:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 489:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 490:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Decrement the suspension count.  */
 491:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         group_ptr -> tx_event_flags_group_suspended_count--;
 492:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 493:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         /* Place this thread on the expired list.  */
 494:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         if (satisfied_list == TX_NULL)
 495:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 496:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 497:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* First thread on the satisfied list.  */
 498:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             satisfied_list =  thread_ptr;
 499:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             last_satisfied =  thread_ptr;
 500:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 501:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Setup initial next pointer.  */
 502:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             thread_ptr -> tx_thread_suspended_next =  TX_NULL;
 503:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 504:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         else
 505:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 506:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 507:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Not the first thread on the satisfied list.  */
 508:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 509:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             /* Link it up at the end.  */
 510:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             last_satisfied -> tx_thread_suspended_next =  thread_ptr;
 511:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             thread_ptr -> tx_thread_suspended_next =      TX_NULL;
 512:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             last_satisfied =                              thread_ptr;
ARM GAS  /tmp/ccMaPMLP.s 			page 23


 513:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 514:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 515:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 516:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Copy next thread pointer to working thread ptr.  */
 517:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     thread_ptr =  next_thread_ptr;
 518:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 519:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Decrement the suspension count.  */
 520:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     suspended_count--;
 521:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 522:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 } while (suspended_count != TX_NO_SUSPENSIONS);
 523:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 524:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Setup the group's suspension list head again.  */
 525:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 group_ptr -> tx_event_flags_group_suspension_list =  suspended_list;
 526:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 527:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifndef TX_NOT_INTERRUPTABLE
 528:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 529:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Determine if there is any delayed event clearing to perform.  */
 530:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 if (group_ptr -> tx_event_flags_group_delayed_clear != ((ULONG) 0))
 531:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 532:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 533:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Perform the delayed event clearing.  */
 534:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     group_ptr -> tx_event_flags_group_current =
 535:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         group_ptr -> tx_event_flags_group_current & ~(group_ptr -> tx_event_flags_g
 536:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 537:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Clear the delayed event flag clear value.  */
 538:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     group_ptr -> tx_event_flags_group_delayed_clear =  ((ULONG) 0);
 539:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 540:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 541:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 542:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Restore interrupts.  */
 543:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 TX_RESTORE
 544:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 545:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Walk through the satisfied list, setup initial thread pointer. */
 546:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 thread_ptr =  satisfied_list;
 547:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 while(thread_ptr != TX_NULL)
 548:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 549:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 550:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Get next pointer first.  */
 551:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     next_thread_ptr =  thread_ptr -> tx_thread_suspended_next;
 552:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 553:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Disable interrupts.  */
 554:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     TX_DISABLE
 555:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 556:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifdef TX_NOT_INTERRUPTABLE
 557:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 558:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Resume the thread!  */
 559:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     _tx_thread_system_ni_resume(thread_ptr);
 560:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 561:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Restore interrupts.  */
 562:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     TX_RESTORE
 563:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #else
 564:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 565:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Disable preemption again.  */
 566:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     _tx_thread_preempt_disable++;
 567:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 568:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Restore interrupt posture.  */
 569:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     TX_RESTORE
ARM GAS  /tmp/ccMaPMLP.s 			page 24


 570:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 571:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Resume the thread.  */
 572:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     _tx_thread_system_resume(thread_ptr);
 573:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 574:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 575:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     /* Move next thread to current.  */
 576:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     thread_ptr =  next_thread_ptr;
 577:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 578:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 579:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Disable interrupts.  */
 580:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 TX_DISABLE
 581:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 582:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* Release thread preemption disable.  */
 583:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 _tx_thread_preempt_disable--;
 584:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             }
 585:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 586:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         else
 587:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 588:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 589:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             /* Determine if we need to set the reset search field.  */
 590:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             if (group_ptr -> tx_event_flags_group_suspended_count != TX_NO_SUSPENSIONS)
 591:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             {
 592:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 593:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 /* We interrupted a search of an event flag group suspension
 594:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                    list.  Make sure we reset the search.  */
 595:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 group_ptr -> tx_event_flags_group_reset_search =  TX_TRUE;
 596:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             }
 597:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 598:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 599:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Restore interrupts.  */
 600:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         TX_RESTORE
 601:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 602:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #ifndef TX_DISABLE_NOTIFY_CALLBACKS
 603:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 604:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Determine if a notify callback is required.  */
 605:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         if (events_set_notify != TX_NULL)
 606:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 607:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 608:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             /* Call application event flags set notification.  */
 609:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             (events_set_notify)(group_ptr);
 610:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 611:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 612:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 613:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         /* Determine if a check for preemption is necessary.  */
 614:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         if (preempt_check == TX_TRUE)
 615:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 616:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 617:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             /* Yes, one or more threads were resumed, check for preemption.  */
 618:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             _tx_thread_system_preempt_check();
 619:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 620:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     }
 621:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 622:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     /* Return completion status.  */
 623:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****     return(TX_SUCCESS);
 146              		.loc 1 623 5 is_stmt 1 view .LVU49
 624:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** }
 147              		.loc 1 624 1 is_stmt 0 view .LVU50
ARM GAS  /tmp/ccMaPMLP.s 			page 25


 148 0028 0020     		movs	r0, #0
 149 002a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 150              	.LVL7:
 151              	.L32:
 149:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             }
 152              		.loc 1 149 17 is_stmt 1 view .LVU51
 154:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 153              		.loc 1 154 9 view .LVU52
 161:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                         group_ptr -> tx_event_flags_group_delayed_clear | ~flags_to
 154              		.loc 1 161 13 view .LVU53
 162:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 155              		.loc 1 162 51 is_stmt 0 view .LVU54
 156 002e 036A     		ldr	r3, [r0, #32]
 162:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 157              		.loc 1 162 89 view .LVU55
 158 0030 63EA0103 		orn	r3, r3, r1
 161:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                         group_ptr -> tx_event_flags_group_delayed_clear | ~flags_to
 159              		.loc 1 161 61 view .LVU56
 160 0034 0362     		str	r3, [r0, #32]
 161 0036 F5E7     		b	.L4
 162              	.LVL8:
 163              	.L2:
 192:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             group_ptr -> tx_event_flags_group_current | flags_to_set;
 164              		.loc 1 192 9 is_stmt 1 view .LVU57
 193:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 165              		.loc 1 193 23 is_stmt 0 view .LVU58
 166 0038 8468     		ldr	r4, [r0, #8]
 193:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 167              		.loc 1 193 55 view .LVU59
 168 003a 0C43     		orrs	r4, r4, r1
 192:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             group_ptr -> tx_event_flags_group_current | flags_to_set;
 169              		.loc 1 192 51 view .LVU60
 170 003c 8460     		str	r4, [r0, #8]
 198:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 171              		.loc 1 198 9 is_stmt 1 view .LVU61
 198:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 172              		.loc 1 198 23 is_stmt 0 view .LVU62
 173 003e 036A     		ldr	r3, [r0, #32]
 198:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 174              		.loc 1 198 12 view .LVU63
 175 0040 13B1     		cbz	r3, .L6
 202:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                         group_ptr -> tx_event_flags_group_delayed_clear & ~flags_to
 176              		.loc 1 202 13 is_stmt 1 view .LVU64
 203:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 177              		.loc 1 203 89 is_stmt 0 view .LVU65
 178 0042 23EA0103 		bic	r3, r3, r1
 202:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                                         group_ptr -> tx_event_flags_group_delayed_clear & ~flags_to
 179              		.loc 1 202 61 view .LVU66
 180 0046 0362     		str	r3, [r0, #32]
 181              	.L6:
 208:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 182              		.loc 1 208 9 is_stmt 1 view .LVU67
 183              	.LVL9:
 211:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 184              		.loc 1 211 9 view .LVU68
 211:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 185              		.loc 1 211 25 is_stmt 0 view .LVU69
ARM GAS  /tmp/ccMaPMLP.s 			page 26


 186 0048 DCF81410 		ldr	r1, [ip, #20]
 187              	.LVL10:
 214:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 188              		.loc 1 214 9 is_stmt 1 view .LVU70
 214:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 189              		.loc 1 214 23 is_stmt 0 view .LVU71
 190 004c DCF81080 		ldr	r8, [ip, #16]
 214:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 191              		.loc 1 214 12 view .LVU72
 192 0050 B8F1000F 		cmp	r8, #0
 193 0054 00F0D180 		beq	.L7
 219:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             {
 194              		.loc 1 219 13 is_stmt 1 view .LVU73
 219:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             {
 195              		.loc 1 219 16 is_stmt 0 view .LVU74
 196 0058 0129     		cmp	r1, #1
 197 005a 09D0     		beq	.L33
 323:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 thread_ptr =      suspended_list;
 198              		.loc 1 323 17 is_stmt 1 view .LVU75
 199              	.LVL11:
 324:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 200              		.loc 1 324 17 view .LVU76
 328:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 201              		.loc 1 328 17 view .LVU77
 328:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 202              		.loc 1 328 67 is_stmt 0 view .LVU78
 203 005c 0020     		movs	r0, #0
 204              	.LVL12:
 328:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 205              		.loc 1 328 67 view .LVU79
 206 005e CCF81000 		str	r0, [ip, #16]
 331:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 last_satisfied =  TX_NULL;
 207              		.loc 1 331 17 is_stmt 1 view .LVU80
 208              	.LVL13:
 332:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 209              		.loc 1 332 17 view .LVU81
 335:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 210              		.loc 1 335 17 view .LVU82
 338:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 211              		.loc 1 338 17 view .LVU83
 338:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 212              		.loc 1 338 43 is_stmt 0 view .LVU84
 213 0062 6A4A     		ldr	r2, .L39
 214              	.LVL14:
 338:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 215              		.loc 1 338 43 view .LVU85
 216 0064 1368     		ldr	r3, [r2]
 217 0066 0133     		adds	r3, r3, #1
 218 0068 1360     		str	r3, [r2]
 343:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 219              		.loc 1 343 17 is_stmt 1 view .LVU86
 220              	.LVL15:
 323:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 thread_ptr =      suspended_list;
 221              		.loc 1 323 32 is_stmt 0 view .LVU87
 222 006a 4646     		mov	r6, r8
 332:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 223              		.loc 1 332 32 view .LVU88
ARM GAS  /tmp/ccMaPMLP.s 			page 27


 224 006c 0746     		mov	r7, r0
 225 006e 55E0     		b	.L22
 226              	.LVL16:
 227              	.L33:
 226:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 228              		.loc 1 226 17 is_stmt 1 view .LVU89
 229:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 229              		.loc 1 229 17 view .LVU90
 232:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 230              		.loc 1 232 17 view .LVU91
 232:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 231              		.loc 1 232 33 is_stmt 0 view .LVU92
 232 0070 D8F87830 		ldr	r3, [r8, #120]
 233              	.LVL17:
 235:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 234              		.loc 1 235 17 is_stmt 1 view .LVU93
 235:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 235              		.loc 1 235 28 is_stmt 0 view .LVU94
 236 0074 D8F88020 		ldr	r2, [r8, #128]
 237              	.LVL18:
 238:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 238              		.loc 1 238 17 is_stmt 1 view .LVU95
 241:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 239              		.loc 1 241 17 view .LVU96
 241:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 240              		.loc 1 241 20 is_stmt 0 view .LVU97
 241 0078 12F0020F 		tst	r2, #2
 242 007c 06D0     		beq	.L9
 247:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 243              		.loc 1 247 21 is_stmt 1 view .LVU98
 247:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 244              		.loc 1 247 37 is_stmt 0 view .LVU99
 245 007e 04EA0301 		and	r1, r4, r3
 246              	.LVL19:
 250:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 247              		.loc 1 250 21 is_stmt 1 view .LVU100
 250:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 248              		.loc 1 250 24 is_stmt 0 view .LVU101
 249 0082 33EA0400 		bics	r0, r3, r4
 250              	.LVL20:
 250:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 251              		.loc 1 250 24 view .LVU102
 252 0086 40F0B080 		bne	.L10
 253 008a 01E0     		b	.L11
 254              	.LVL21:
 255              	.L9:
 261:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 256              		.loc 1 261 21 is_stmt 1 view .LVU103
 261:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 257              		.loc 1 261 37 is_stmt 0 view .LVU104
 258 008c 04EA0301 		and	r1, r4, r3
 259              	.LVL22:
 260              	.L11:
 265:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 261              		.loc 1 265 17 is_stmt 1 view .LVU105
 265:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 262              		.loc 1 265 20 is_stmt 0 view .LVU106
ARM GAS  /tmp/ccMaPMLP.s 			page 28


 263 0090 0029     		cmp	r1, #0
 264 0092 00F0B780 		beq	.L26
 272:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     *suspend_info_ptr =  current_event_flags;
 265              		.loc 1 272 21 is_stmt 1 view .LVU107
 272:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     *suspend_info_ptr =  current_event_flags;
 266              		.loc 1 272 38 is_stmt 0 view .LVU108
 267 0096 D8F87C10 		ldr	r1, [r8, #124]
 268              	.LVL23:
 273:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 269              		.loc 1 273 21 is_stmt 1 view .LVU109
 273:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 270              		.loc 1 273 39 is_stmt 0 view .LVU110
 271 009a 0C60     		str	r4, [r1]
 272              	.LVL24:
 276:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 273              		.loc 1 276 21 is_stmt 1 view .LVU111
 279:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 274              		.loc 1 279 21 view .LVU112
 279:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 275              		.loc 1 279 24 is_stmt 0 view .LVU113
 276 009c 12F0010F 		tst	r2, #1
 277 00a0 05D0     		beq	.L12
 283:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 278              		.loc 1 283 25 is_stmt 1 view .LVU114
 283:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 279              		.loc 1 283 80 is_stmt 0 view .LVU115
 280 00a2 DCF80820 		ldr	r2, [ip, #8]
 281              	.LVL25:
 283:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 282              		.loc 1 283 112 view .LVU116
 283 00a6 22EA0302 		bic	r2, r2, r3
 283:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 284              		.loc 1 283 67 view .LVU117
 285 00aa CCF80820 		str	r2, [ip, #8]
 286              	.L12:
 287:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     group_ptr -> tx_event_flags_group_suspended_count =  TX_NO_SUSPENSIONS;
 287              		.loc 1 287 21 is_stmt 1 view .LVU118
 287:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     group_ptr -> tx_event_flags_group_suspended_count =  TX_NO_SUSPENSIONS;
 288              		.loc 1 287 71 is_stmt 0 view .LVU119
 289 00ae 0023     		movs	r3, #0
 290              	.LVL26:
 287:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     group_ptr -> tx_event_flags_group_suspended_count =  TX_NO_SUSPENSIONS;
 291              		.loc 1 287 71 view .LVU120
 292 00b0 CCF81030 		str	r3, [ip, #16]
 288:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 293              		.loc 1 288 21 is_stmt 1 view .LVU121
 288:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 294              		.loc 1 288 71 is_stmt 0 view .LVU122
 295 00b4 CCF81430 		str	r3, [ip, #20]
 291:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 296              		.loc 1 291 21 is_stmt 1 view .LVU123
 291:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 297              		.loc 1 291 61 is_stmt 0 view .LVU124
 298 00b8 C8F86830 		str	r3, [r8, #104]
 294:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 299              		.loc 1 294 21 is_stmt 1 view .LVU125
 294:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
ARM GAS  /tmp/ccMaPMLP.s 			page 29


 300              		.loc 1 294 60 is_stmt 0 view .LVU126
 301 00bc C8F88430 		str	r3, [r8, #132]
 303:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 302              		.loc 1 303 21 is_stmt 1 view .LVU127
 303:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 303              		.loc 1 303 47 is_stmt 0 view .LVU128
 304 00c0 524A     		ldr	r2, .L39
 305 00c2 1368     		ldr	r3, [r2]
 306 00c4 0133     		adds	r3, r3, #1
 307 00c6 1360     		str	r3, [r2]
 306:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 308              		.loc 1 306 21 is_stmt 1 view .LVU129
 309              	.LVL27:
 310              	.LBB42:
 311              	.LBI42:
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 312              		.loc 2 568 55 view .LVU130
 313              	.LBB43:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 314              		.loc 2 574 5 view .LVU131
 315              		.syntax unified
 316              	@ 574 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 317 00c8 8EF31088 		MSR  PRIMASK,lr
 318              	@ 0 "" 2
 319              	.LVL28:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 320              		.loc 2 574 5 is_stmt 0 view .LVU132
 321              		.thumb
 322              		.syntax unified
 323              	.LBE43:
 324              	.LBE42:
 309:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 325              		.loc 1 309 21 is_stmt 1 view .LVU133
 326 00cc 4046     		mov	r0, r8
 327 00ce FFF7FEFF 		bl	_tx_thread_system_resume
 328              	.LVL29:
 312:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 329              		.loc 1 312 21 view .LVU134
 330              	.LBB44:
 331              	.LBI44:
 578:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 332              		.loc 2 578 63 view .LVU135
 333              	.LBB45:
 580:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 334              		.loc 2 580 1 view .LVU136
 582:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 335              		.loc 2 582 5 view .LVU137
 336              	.LBB46:
 337              	.LBI46:
 545:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 338              		.loc 2 545 63 view .LVU138
 339              	.LBB47:
 547:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 340              		.loc 2 547 1 view .LVU139
 551:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 341              		.loc 2 551 5 view .LVU140
 342              		.syntax unified
ARM GAS  /tmp/ccMaPMLP.s 			page 30


 343              	@ 551 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 344 00d2 EFF3108E 		MRS  lr, PRIMASK 
 345              	@ 0 "" 2
 346              	.LVL30:
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 347              		.loc 2 553 5 view .LVU141
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 348              		.loc 2 553 5 is_stmt 0 view .LVU142
 349              		.thumb
 350              		.syntax unified
 351              	.LBE47:
 352              	.LBE46:
 587:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 353              		.loc 2 587 5 is_stmt 1 view .LVU143
 354              		.syntax unified
 355              	@ 587 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 356 00d6 72B6     		CPSID i
 357              	@ 0 "" 2
 358              		.loc 2 589 5 view .LVU144
 359              	.LVL31:
 360              		.loc 2 589 5 is_stmt 0 view .LVU145
 361              		.thumb
 362              		.syntax unified
 363 00d8 87E0     		b	.L10
 364              	.LVL32:
 365              	.L27:
 366              		.loc 2 589 5 view .LVU146
 367              	.LBE45:
 368              	.LBE44:
 369 00da 4346     		mov	r3, r8
 370 00dc 30E0     		b	.L13
 371              	.LVL33:
 372              	.L14:
 409:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 373              		.loc 1 409 25 is_stmt 1 view .LVU147
 409:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 374              		.loc 1 409 41 is_stmt 0 view .LVU148
 375 00de 04EA090B 		and	fp, r4, r9
 376              	.LVL34:
 377              	.L15:
 415:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 378              		.loc 1 415 21 is_stmt 1 view .LVU149
 415:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 379              		.loc 1 415 36 is_stmt 0 view .LVU150
 380 00e2 1A6B     		ldr	r2, [r3, #48]
 415:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 381              		.loc 1 415 24 view .LVU151
 382 00e4 072A     		cmp	r2, #7
 383 00e6 3BD0     		beq	.L34
 384              	.L16:
 385              	.LVL35:
 430:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 386              		.loc 1 430 25 is_stmt 1 view .LVU152
 430:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 387              		.loc 1 430 28 is_stmt 0 view .LVU153
 388 00e8 072A     		cmp	r2, #7
 389 00ea 3DD0     		beq	.L35
ARM GAS  /tmp/ccMaPMLP.s 			page 31


 390              	.L18:
 461:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 391              		.loc 1 461 25 is_stmt 1 view .LVU154
 461:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 392              		.loc 1 461 54 is_stmt 0 view .LVU155
 393 00ec 1A6F     		ldr	r2, [r3, #112]
 461:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 394              		.loc 1 461 28 view .LVU156
 395 00ee 9A42     		cmp	r2, r3
 396 00f0 4CD0     		beq	.L29
 475:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             previous_thread =                              thread_ptr -> tx_thread_
 397              		.loc 1 475 29 is_stmt 1 view .LVU157
 398              	.LVL36:
 476:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             next_thread -> tx_thread_suspended_previous =  previous_thread;
 399              		.loc 1 476 29 view .LVU158
 476:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             next_thread -> tx_thread_suspended_previous =  previous_thread;
 400              		.loc 1 476 45 is_stmt 0 view .LVU159
 401 00f2 D3F87490 		ldr	r9, [r3, #116]
 402              	.LVL37:
 477:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             previous_thread -> tx_thread_suspended_next =  next_thread;
 403              		.loc 1 477 29 is_stmt 1 view .LVU160
 477:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             previous_thread -> tx_thread_suspended_next =  next_thread;
 404              		.loc 1 477 73 is_stmt 0 view .LVU161
 405 00f6 C2F87490 		str	r9, [r2, #116]
 478:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 406              		.loc 1 478 29 is_stmt 1 view .LVU162
 478:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 407              		.loc 1 478 73 is_stmt 0 view .LVU163
 408 00fa C9F87020 		str	r2, [r9, #112]
 482:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             {
 409              		.loc 1 482 29 is_stmt 1 view .LVU164
 482:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             {
 410              		.loc 1 482 32 is_stmt 0 view .LVU165
 411 00fe B342     		cmp	r3, r6
 412 0100 42D0     		beq	.L36
 413              	.LVL38:
 414              	.L20:
 491:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 415              		.loc 1 491 25 is_stmt 1 view .LVU166
 491:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 416              		.loc 1 491 35 is_stmt 0 view .LVU167
 417 0102 DCF81420 		ldr	r2, [ip, #20]
 491:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 418              		.loc 1 491 74 view .LVU168
 419 0106 013A     		subs	r2, r2, #1
 420 0108 CCF81420 		str	r2, [ip, #20]
 494:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 421              		.loc 1 494 25 is_stmt 1 view .LVU169
 494:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 422              		.loc 1 494 28 is_stmt 0 view .LVU170
 423 010c 0028     		cmp	r0, #0
 424 010e 3FD0     		beq	.L37
 510:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             thread_ptr -> tx_thread_suspended_next =      TX_NULL;
 425              		.loc 1 510 29 is_stmt 1 view .LVU171
 510:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             thread_ptr -> tx_thread_suspended_next =      TX_NULL;
 426              		.loc 1 510 72 is_stmt 0 view .LVU172
 427 0110 3B67     		str	r3, [r7, #112]
ARM GAS  /tmp/ccMaPMLP.s 			page 32


 511:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             last_satisfied =                              thread_ptr;
 428              		.loc 1 511 29 is_stmt 1 view .LVU173
 511:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             last_satisfied =                              thread_ptr;
 429              		.loc 1 511 68 is_stmt 0 view .LVU174
 430 0112 0022     		movs	r2, #0
 431 0114 1A67     		str	r2, [r3, #112]
 512:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 432              		.loc 1 512 29 is_stmt 1 view .LVU175
 433              	.LVL39:
 512:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 434              		.loc 1 512 44 is_stmt 0 view .LVU176
 435 0116 1F46     		mov	r7, r3
 436              	.LVL40:
 437              	.L17:
 517:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 438              		.loc 1 517 21 is_stmt 1 view .LVU177
 520:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 439              		.loc 1 520 21 view .LVU178
 522:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 440              		.loc 1 522 42 view .LVU179
 441 0118 0139     		subs	r1, r1, #1
 442              	.LVL41:
 522:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 443              		.loc 1 522 42 is_stmt 0 view .LVU180
 444 011a 3ED0     		beq	.L38
 445              	.LVL42:
 446              	.L22:
 346:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 447              		.loc 1 346 17 is_stmt 1 view .LVU181
 352:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 448              		.loc 1 352 21 view .LVU182
 449              	.LBB48:
 450              	.LBI48:
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 451              		.loc 2 568 55 view .LVU183
 452              	.LBB49:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 453              		.loc 2 574 5 view .LVU184
 454              		.syntax unified
 455              	@ 574 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 456 011c 8EF31088 		MSR  PRIMASK,lr
 457              	@ 0 "" 2
 458              	.LVL43:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 459              		.loc 2 574 5 is_stmt 0 view .LVU185
 460              		.thumb
 461              		.syntax unified
 462              	.LBE49:
 463              	.LBE48:
 355:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 464              		.loc 1 355 21 is_stmt 1 view .LVU186
 465              	.LBB50:
 466              	.LBI50:
 578:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 467              		.loc 2 578 63 view .LVU187
 468              	.LBB51:
 580:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
ARM GAS  /tmp/ccMaPMLP.s 			page 33


 469              		.loc 2 580 1 view .LVU188
 582:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 470              		.loc 2 582 5 view .LVU189
 471              	.LBB52:
 472              	.LBI52:
 545:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 473              		.loc 2 545 63 view .LVU190
 474              	.LBB53:
 547:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 475              		.loc 2 547 1 view .LVU191
 551:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 476              		.loc 2 551 5 view .LVU192
 477              		.syntax unified
 478              	@ 551 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 479 0120 EFF3108E 		MRS  lr, PRIMASK 
 480              	@ 0 "" 2
 481              	.LVL44:
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 482              		.loc 2 553 5 view .LVU193
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 483              		.loc 2 553 5 is_stmt 0 view .LVU194
 484              		.thumb
 485              		.syntax unified
 486              	.LBE53:
 487              	.LBE52:
 587:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 488              		.loc 2 587 5 is_stmt 1 view .LVU195
 489              		.syntax unified
 490              	@ 587 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 491 0124 72B6     		CPSID i
 492              	@ 0 "" 2
 493              		.loc 2 589 5 view .LVU196
 494              	.LVL45:
 495              		.loc 2 589 5 is_stmt 0 view .LVU197
 496              		.thumb
 497              		.syntax unified
 498              	.LBE51:
 499              	.LBE50:
 359:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 500              		.loc 1 359 21 is_stmt 1 view .LVU198
 359:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 501              		.loc 1 359 35 is_stmt 0 view .LVU199
 502 0126 DCF80C30 		ldr	r3, [ip, #12]
 359:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 503              		.loc 1 359 24 view .LVU200
 504 012a 002B     		cmp	r3, #0
 505 012c D5D0     		beq	.L27
 363:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 506              		.loc 1 363 25 is_stmt 1 view .LVU201
 363:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 507              		.loc 1 363 72 is_stmt 0 view .LVU202
 508 012e 0023     		movs	r3, #0
 509 0130 CCF80C30 		str	r3, [ip, #12]
 366:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 510              		.loc 1 366 25 is_stmt 1 view .LVU203
 511              	.LVL46:
 369:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
ARM GAS  /tmp/ccMaPMLP.s 			page 34


 512              		.loc 1 369 25 view .LVU204
 369:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 513              		.loc 1 369 41 is_stmt 0 view .LVU205
 514 0134 DCF81410 		ldr	r1, [ip, #20]
 515              	.LVL47:
 373:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 516              		.loc 1 373 25 is_stmt 1 view .LVU206
 373:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 517              		.loc 1 373 80 is_stmt 0 view .LVU207
 518 0138 DCF80830 		ldr	r3, [ip, #8]
 373:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     }
 519              		.loc 1 373 45 view .LVU208
 520 013c 1C43     		orrs	r4, r4, r3
 521              	.LVL48:
 366:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 522              		.loc 1 366 36 view .LVU209
 523 013e 3346     		mov	r3, r6
 524              	.LVL49:
 525              	.L13:
 377:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 526              		.loc 1 377 21 is_stmt 1 view .LVU210
 377:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 527              		.loc 1 377 37 is_stmt 0 view .LVU211
 528 0140 D3F87080 		ldr	r8, [r3, #112]
 529              	.LVL50:
 380:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 530              		.loc 1 380 21 is_stmt 1 view .LVU212
 380:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 531              		.loc 1 380 37 is_stmt 0 view .LVU213
 532 0144 D3F87890 		ldr	r9, [r3, #120]
 533              	.LVL51:
 383:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 534              		.loc 1 383 21 is_stmt 1 view .LVU214
 383:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 535              		.loc 1 383 32 is_stmt 0 view .LVU215
 536 0148 D3F880A0 		ldr	r10, [r3, #128]
 537              	.LVL52:
 386:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 538              		.loc 1 386 21 is_stmt 1 view .LVU216
 389:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 539              		.loc 1 389 21 view .LVU217
 389:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 540              		.loc 1 389 24 is_stmt 0 view .LVU218
 541 014c 1AF0020F 		tst	r10, #2
 542 0150 C5D0     		beq	.L14
 395:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 543              		.loc 1 395 25 is_stmt 1 view .LVU219
 395:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 544              		.loc 1 395 41 is_stmt 0 view .LVU220
 545 0152 04EA090B 		and	fp, r4, r9
 546              	.LVL53:
 398:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 547              		.loc 1 398 25 is_stmt 1 view .LVU221
 398:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         {
 548              		.loc 1 398 28 is_stmt 0 view .LVU222
 549 0156 39EA0402 		bics	r2, r9, r4
 550 015a C2D0     		beq	.L15
ARM GAS  /tmp/ccMaPMLP.s 			page 35


 402:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 551              		.loc 1 402 45 view .LVU223
 552 015c AB46     		mov	fp, r5
 553              	.LVL54:
 402:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 554              		.loc 1 402 45 view .LVU224
 555 015e C0E7     		b	.L15
 556              	.LVL55:
 557              	.L34:
 423:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 558              		.loc 1 423 21 is_stmt 1 view .LVU225
 423:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                     {
 559              		.loc 1 423 24 is_stmt 0 view .LVU226
 560 0160 BBF1000F 		cmp	fp, #0
 561 0164 D8D0     		beq	.L17
 562 0166 BFE7     		b	.L16
 563              	.LVL56:
 564              	.L35:
 434:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             *suspend_info_ptr =  current_event_flags;
 565              		.loc 1 434 29 is_stmt 1 view .LVU227
 434:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             *suspend_info_ptr =  current_event_flags;
 566              		.loc 1 434 46 is_stmt 0 view .LVU228
 567 0168 DA6F     		ldr	r2, [r3, #124]
 568              	.LVL57:
 435:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 569              		.loc 1 435 29 is_stmt 1 view .LVU229
 435:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 570              		.loc 1 435 47 is_stmt 0 view .LVU230
 571 016a 1460     		str	r4, [r2]
 438:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 572              		.loc 1 438 29 is_stmt 1 view .LVU231
 573              	.LVL58:
 441:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             {
 574              		.loc 1 441 29 view .LVU232
 441:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             {
 575              		.loc 1 441 32 is_stmt 0 view .LVU233
 576 016c 1AF0010F 		tst	r10, #1
 577 0170 05D0     		beq	.L19
 445:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             }
 578              		.loc 1 445 33 is_stmt 1 view .LVU234
 445:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             }
 579              		.loc 1 445 88 is_stmt 0 view .LVU235
 580 0172 DCF80820 		ldr	r2, [ip, #8]
 581              	.LVL59:
 445:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             }
 582              		.loc 1 445 120 view .LVU236
 583 0176 22EA0902 		bic	r2, r2, r9
 445:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             }
 584              		.loc 1 445 75 view .LVU237
 585 017a CCF80820 		str	r2, [ip, #8]
 586              	.L19:
 451:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 587              		.loc 1 451 29 is_stmt 1 view .LVU238
 451:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 588              		.loc 1 451 69 is_stmt 0 view .LVU239
 589 017e 0022     		movs	r2, #0
 590 0180 9A66     		str	r2, [r3, #104]
ARM GAS  /tmp/ccMaPMLP.s 			page 36


 454:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 591              		.loc 1 454 29 is_stmt 1 view .LVU240
 454:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 592              		.loc 1 454 68 is_stmt 0 view .LVU241
 593 0182 C3F88420 		str	r2, [r3, #132]
 594 0186 B1E7     		b	.L18
 595              	.LVL60:
 596              	.L36:
 486:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             }
 597              		.loc 1 486 33 is_stmt 1 view .LVU242
 486:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             }
 598              		.loc 1 486 48 is_stmt 0 view .LVU243
 599 0188 1E6F     		ldr	r6, [r3, #112]
 600              	.LVL61:
 486:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             }
 601              		.loc 1 486 48 view .LVU244
 602 018a BAE7     		b	.L20
 603              	.LVL62:
 604              	.L29:
 467:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 605              		.loc 1 467 44 view .LVU245
 606 018c 0026     		movs	r6, #0
 607              	.LVL63:
 467:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 608              		.loc 1 467 44 view .LVU246
 609 018e B8E7     		b	.L20
 610              	.LVL64:
 611              	.L37:
 498:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             last_satisfied =  thread_ptr;
 612              		.loc 1 498 29 is_stmt 1 view .LVU247
 499:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 613              		.loc 1 499 29 view .LVU248
 502:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 614              		.loc 1 502 29 view .LVU249
 502:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         }
 615              		.loc 1 502 68 is_stmt 0 view .LVU250
 616 0190 0022     		movs	r2, #0
 617 0192 1A67     		str	r2, [r3, #112]
 499:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 618              		.loc 1 499 44 view .LVU251
 619 0194 1F46     		mov	r7, r3
 498:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                             last_satisfied =  thread_ptr;
 620              		.loc 1 498 44 view .LVU252
 621 0196 1846     		mov	r0, r3
 622 0198 BEE7     		b	.L17
 623              	.LVL65:
 624              	.L38:
 525:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 625              		.loc 1 525 17 is_stmt 1 view .LVU253
 525:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 626              		.loc 1 525 67 is_stmt 0 view .LVU254
 627 019a CCF81060 		str	r6, [ip, #16]
 530:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 628              		.loc 1 530 17 is_stmt 1 view .LVU255
 530:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 629              		.loc 1 530 31 is_stmt 0 view .LVU256
 630 019e DCF82030 		ldr	r3, [ip, #32]
ARM GAS  /tmp/ccMaPMLP.s 			page 37


 530:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 631              		.loc 1 530 20 view .LVU257
 632 01a2 43B1     		cbz	r3, .L23
 534:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         group_ptr -> tx_event_flags_group_current & ~(group_ptr -> tx_event_flags_g
 633              		.loc 1 534 21 is_stmt 1 view .LVU258
 535:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 634              		.loc 1 535 35 is_stmt 0 view .LVU259
 635 01a4 DCF80820 		ldr	r2, [ip, #8]
 535:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 636              		.loc 1 535 67 view .LVU260
 637 01a8 22EA0302 		bic	r2, r2, r3
 534:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                         group_ptr -> tx_event_flags_group_current & ~(group_ptr -> tx_event_flags_g
 638              		.loc 1 534 63 view .LVU261
 639 01ac CCF80820 		str	r2, [ip, #8]
 538:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 640              		.loc 1 538 21 is_stmt 1 view .LVU262
 538:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 641              		.loc 1 538 69 is_stmt 0 view .LVU263
 642 01b0 0023     		movs	r3, #0
 643 01b2 CCF82030 		str	r3, [ip, #32]
 644              	.L23:
 543:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 645              		.loc 1 543 17 is_stmt 1 view .LVU264
 646              	.LVL66:
 647              	.LBB54:
 648              	.LBI54:
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 649              		.loc 2 568 55 view .LVU265
 650              	.LBB55:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 651              		.loc 2 574 5 view .LVU266
 652              		.syntax unified
 653              	@ 574 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 654 01b6 8EF31088 		MSR  PRIMASK,lr
 655              	@ 0 "" 2
 656              	.LVL67:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 657              		.loc 2 574 5 is_stmt 0 view .LVU267
 658              		.thumb
 659              		.syntax unified
 660              	.LBE55:
 661              	.LBE54:
 546:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 while(thread_ptr != TX_NULL)
 662              		.loc 1 546 17 is_stmt 1 view .LVU268
 547:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 663              		.loc 1 547 17 view .LVU269
 547:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 664              		.loc 1 547 22 is_stmt 0 view .LVU270
 665 01ba 0CE0     		b	.L24
 666              	.LVL68:
 667              	.L25:
 551:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 668              		.loc 1 551 21 is_stmt 1 view .LVU271
 551:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 669              		.loc 1 551 37 is_stmt 0 view .LVU272
 670 01bc 046F     		ldr	r4, [r0, #112]
 671              	.LVL69:
ARM GAS  /tmp/ccMaPMLP.s 			page 38


 554:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 672              		.loc 1 554 21 is_stmt 1 view .LVU273
 673              	.LBB56:
 674              	.LBI56:
 578:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 675              		.loc 2 578 63 view .LVU274
 676              	.LBB57:
 580:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 677              		.loc 2 580 1 view .LVU275
 582:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 678              		.loc 2 582 5 view .LVU276
 679              	.LBB58:
 680              	.LBI58:
 545:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 681              		.loc 2 545 63 view .LVU277
 682              	.LBB59:
 547:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 683              		.loc 2 547 1 view .LVU278
 551:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 684              		.loc 2 551 5 view .LVU279
 685              		.syntax unified
 686              	@ 551 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 687 01be EFF31081 		MRS  r1, PRIMASK 
 688              	@ 0 "" 2
 689              	.LVL70:
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 690              		.loc 2 553 5 view .LVU280
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 691              		.loc 2 553 5 is_stmt 0 view .LVU281
 692              		.thumb
 693              		.syntax unified
 694              	.LBE59:
 695              	.LBE58:
 587:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 696              		.loc 2 587 5 is_stmt 1 view .LVU282
 697              		.syntax unified
 698              	@ 587 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 699 01c2 72B6     		CPSID i
 700              	@ 0 "" 2
 701              		.loc 2 589 5 view .LVU283
 702              	.LVL71:
 703              		.loc 2 589 5 is_stmt 0 view .LVU284
 704              		.thumb
 705              		.syntax unified
 706              	.LBE57:
 707              	.LBE56:
 566:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 708              		.loc 1 566 21 is_stmt 1 view .LVU285
 566:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 709              		.loc 1 566 47 is_stmt 0 view .LVU286
 710 01c4 114A     		ldr	r2, .L39
 711 01c6 1368     		ldr	r3, [r2]
 712 01c8 0133     		adds	r3, r3, #1
 713 01ca 1360     		str	r3, [r2]
 569:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 714              		.loc 1 569 21 is_stmt 1 view .LVU287
 715              	.LVL72:
ARM GAS  /tmp/ccMaPMLP.s 			page 39


 716              	.LBB60:
 717              	.LBI60:
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 718              		.loc 2 568 55 view .LVU288
 719              	.LBB61:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 720              		.loc 2 574 5 view .LVU289
 721              		.syntax unified
 722              	@ 574 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 723 01cc 81F31088 		MSR  PRIMASK,r1
 724              	@ 0 "" 2
 725              	.LVL73:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 726              		.loc 2 574 5 is_stmt 0 view .LVU290
 727              		.thumb
 728              		.syntax unified
 729              	.LBE61:
 730              	.LBE60:
 572:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** #endif
 731              		.loc 1 572 21 is_stmt 1 view .LVU291
 732 01d0 FFF7FEFF 		bl	_tx_thread_system_resume
 733              	.LVL74:
 576:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 734              		.loc 1 576 21 view .LVU292
 576:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 }
 735              		.loc 1 576 32 is_stmt 0 view .LVU293
 736 01d4 2046     		mov	r0, r4
 737              	.LVL75:
 738              	.L24:
 547:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****                 {
 739              		.loc 1 547 34 is_stmt 1 view .LVU294
 740 01d6 0028     		cmp	r0, #0
 741 01d8 F0D1     		bne	.L25
 580:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 742              		.loc 1 580 17 view .LVU295
 743              	.LBB62:
 744              	.LBI62:
 578:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 745              		.loc 2 578 63 view .LVU296
 746              	.LBB63:
 580:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 747              		.loc 2 580 1 view .LVU297
 582:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 748              		.loc 2 582 5 view .LVU298
 749              	.LBB64:
 750              	.LBI64:
 545:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 751              		.loc 2 545 63 view .LVU299
 752              	.LBB65:
 547:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 753              		.loc 2 547 1 view .LVU300
 551:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 754              		.loc 2 551 5 view .LVU301
 755              		.syntax unified
 756              	@ 551 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 757 01da EFF3108E 		MRS  lr, PRIMASK 
 758              	@ 0 "" 2
ARM GAS  /tmp/ccMaPMLP.s 			page 40


 759              	.LVL76:
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 760              		.loc 2 553 5 view .LVU302
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 761              		.loc 2 553 5 is_stmt 0 view .LVU303
 762              		.thumb
 763              		.syntax unified
 764              	.LBE65:
 765              	.LBE64:
 587:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 766              		.loc 2 587 5 is_stmt 1 view .LVU304
 767              		.syntax unified
 768              	@ 587 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 769 01de 72B6     		CPSID i
 770              	@ 0 "" 2
 771              		.loc 2 589 5 view .LVU305
 772              	.LVL77:
 773              		.loc 2 589 5 is_stmt 0 view .LVU306
 774              		.thumb
 775              		.syntax unified
 776              	.LBE63:
 777              	.LBE62:
 583:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             }
 778              		.loc 1 583 17 is_stmt 1 view .LVU307
 583:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             }
 779              		.loc 1 583 43 is_stmt 0 view .LVU308
 780 01e0 0A4A     		ldr	r2, .L39
 781 01e2 1368     		ldr	r3, [r2]
 782 01e4 013B     		subs	r3, r3, #1
 783 01e6 1360     		str	r3, [r2]
 343:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 784              		.loc 1 343 31 view .LVU309
 785 01e8 0125     		movs	r5, #1
 786              	.LVL78:
 787              	.L10:
 600:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 788              		.loc 1 600 9 is_stmt 1 view .LVU310
 789              	.LBB66:
 790              	.LBI66:
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 791              		.loc 2 568 55 view .LVU311
 792              	.LBB67:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 793              		.loc 2 574 5 view .LVU312
 794              		.syntax unified
 795              	@ 574 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 796 01ea 8EF31088 		MSR  PRIMASK,lr
 797              	@ 0 "" 2
 798              	.LVL79:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 799              		.loc 2 574 5 is_stmt 0 view .LVU313
 800              		.thumb
 801              		.syntax unified
 802              	.LBE67:
 803              	.LBE66:
 614:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 804              		.loc 1 614 9 is_stmt 1 view .LVU314
ARM GAS  /tmp/ccMaPMLP.s 			page 41


 614:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         {
 805              		.loc 1 614 12 is_stmt 0 view .LVU315
 806 01ee 012D     		cmp	r5, #1
 807 01f0 7FF41AAF 		bne	.L5
 618:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 808              		.loc 1 618 13 is_stmt 1 view .LVU316
 809 01f4 FFF7FEFF 		bl	_tx_thread_system_preempt_check
 810              	.LVL80:
 618:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****         }
 811              		.loc 1 618 13 is_stmt 0 view .LVU317
 812 01f8 16E7     		b	.L5
 813              	.LVL81:
 814              	.L7:
 590:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             {
 815              		.loc 1 590 13 is_stmt 1 view .LVU318
 590:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             {
 816              		.loc 1 590 16 is_stmt 0 view .LVU319
 817 01fa 29B1     		cbz	r1, .L30
 595:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             }
 818              		.loc 1 595 17 is_stmt 1 view .LVU320
 595:Middlewares/ST/threadx/common/src/tx_event_flags_set.c ****             }
 819              		.loc 1 595 64 is_stmt 0 view .LVU321
 820 01fc 0123     		movs	r3, #1
 821 01fe CCF80C30 		str	r3, [ip, #12]
 822 0202 F2E7     		b	.L10
 823              	.LVL82:
 824              	.L26:
 208:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 825              		.loc 1 208 23 view .LVU322
 826 0204 0D46     		mov	r5, r1
 827 0206 F0E7     		b	.L10
 828              	.LVL83:
 829              	.L30:
 208:Middlewares/ST/threadx/common/src/tx_event_flags_set.c **** 
 830              		.loc 1 208 23 view .LVU323
 831 0208 0D46     		mov	r5, r1
 832 020a EEE7     		b	.L10
 833              	.L40:
 834              		.align	2
 835              	.L39:
 836 020c 00000000 		.word	_tx_thread_preempt_disable
 837              		.cfi_endproc
 838              	.LFE8:
 840              		.text
 841              	.Letext0:
 842              		.file 3 "Middlewares/ST/threadx/common/inc/tx_api.h"
 843              		.file 4 "Middlewares/ST/threadx/common/inc/tx_thread.h"
ARM GAS  /tmp/ccMaPMLP.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 tx_event_flags_set.c
     /tmp/ccMaPMLP.s:20     .text._tx_event_flags_set:00000000 $t
     /tmp/ccMaPMLP.s:26     .text._tx_event_flags_set:00000000 _tx_event_flags_set
     /tmp/ccMaPMLP.s:836    .text._tx_event_flags_set:0000020c $d

UNDEFINED SYMBOLS
_tx_thread_system_resume
_tx_thread_system_preempt_check
_tx_thread_preempt_disable
