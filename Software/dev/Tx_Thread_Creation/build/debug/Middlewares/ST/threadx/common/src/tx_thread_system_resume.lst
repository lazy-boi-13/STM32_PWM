ARM GAS  /tmp/cct9C51U.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"tx_thread_system_resume.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Middlewares/ST/threadx/common/src/tx_thread_system_resume.c"
  19              		.section	.text._tx_thread_system_resume,"ax",%progbits
  20              		.align	1
  21              		.global	_tx_thread_system_resume
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_tx_thread_system_resume:
  27              	.LVL0:
  28              	.LFB8:
   1:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**************************************************************************/
   2:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
   3:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
   5:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*       This software is licensed under the Microsoft Software License   */
   6:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*       and in the root directory of this software.                      */
   9:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  10:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**************************************************************************/
  11:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
  12:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
  13:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**************************************************************************/
  14:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**************************************************************************/
  15:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**                                                                       */
  16:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /** ThreadX Component                                                     */
  17:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**                                                                       */
  18:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**   Thread                                                              */
  19:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**                                                                       */
  20:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**************************************************************************/
  21:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**************************************************************************/
  22:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
  23:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #define TX_SOURCE_CODE
  24:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
  25:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /* Include necessary system files.  */
  26:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #include "tx_api.h"
  27:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
  28:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #include "tx_initialize.h"
  29:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
  30:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #include "tx_trace.h"
ARM GAS  /tmp/cct9C51U.s 			page 2


  31:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #include "tx_timer.h"
  32:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #include "tx_thread.h"
  33:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
  34:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**************************************************************************/
  35:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  36:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*  FUNCTION                                               RELEASE        */
  37:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  38:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    _tx_thread_system_resume                            PORTABLE C      */
  39:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                           6.1          */
  40:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*  AUTHOR                                                                */
  41:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  42:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    William E. Lamie, Microsoft Corporation                             */
  43:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  44:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*  DESCRIPTION                                                           */
  45:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  46:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    This function places the specified thread on the list of ready      */
  47:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    threads at the thread's specific priority.                          */
  48:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  49:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*  INPUT                                                                 */
  50:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  51:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    thread_ptr                            Pointer to thread to resume   */
  52:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  53:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*  OUTPUT                                                                */
  54:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  55:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    None                                                                */
  56:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  57:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*  CALLS                                                                 */
  58:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  59:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    _tx_thread_system_return              Return to the system          */
  60:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    _tx_thread_system_ni_resume           Noninterruptable thread resume*/
  61:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    _tx_timer_system_deactivate           Timer deactivate              */
  62:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  63:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*  CALLED BY                                                             */
  64:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  65:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    _tx_thread_create                     Thread create function        */
  66:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    _tx_thread_priority_change            Thread priority change        */
  67:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    _tx_thread_resume                     Application resume service    */
  68:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    _tx_thread_timeout                    Thread timeout                */
  69:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    _tx_thread_wait_abort                 Thread wait abort             */
  70:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    Other ThreadX Components                                            */
  71:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  72:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*  RELEASE HISTORY                                                       */
  73:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  74:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*    DATE              NAME                      DESCRIPTION             */
  75:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  76:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
  77:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
  78:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                            resulting in version 6.1    */
  79:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /*                                                                        */
  80:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** /**************************************************************************/
  81:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** VOID  _tx_thread_system_resume(TX_THREAD *thread_ptr)
  82:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifndef TX_NOT_INTERRUPTABLE
  83:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** {
  29              		.loc 1 83 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cct9C51U.s 			page 3


  33              		.loc 1 83 1 is_stmt 0 view .LVU1
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 3, -16
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  40 0002 0446     		mov	r4, r0
  84:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
  85:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** TX_INTERRUPT_SAVE_AREA
  41              		.loc 1 85 1 is_stmt 1 view .LVU2
  86:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
  87:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** UINT            priority;
  42              		.loc 1 87 1 view .LVU3
  88:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** ULONG           priority_bit;
  43              		.loc 1 88 1 view .LVU4
  89:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** TX_THREAD       *head_ptr;
  44              		.loc 1 89 1 view .LVU5
  90:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** TX_THREAD       *tail_ptr;
  45              		.loc 1 90 1 view .LVU6
  91:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** TX_THREAD       *execute_ptr;
  46              		.loc 1 91 1 view .LVU7
  92:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** TX_THREAD       *current_thread;
  47              		.loc 1 92 1 view .LVU8
  93:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** ULONG           combined_flags;
  48              		.loc 1 93 1 view .LVU9
  94:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
  95:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_ENABLE_EVENT_TRACE
  96:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** TX_TRACE_BUFFER_ENTRY       *entry_ptr;
  97:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** ULONG                       time_stamp =  ((ULONG) 0);
  98:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
  99:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 100:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #if TX_MAX_PRIORITIES > 32
 101:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** UINT            map_index;
 102:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 103:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 104:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 105:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_ENABLE_STACK_CHECKING
 106:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 107:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Check this thread's stack.  */
 108:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     TX_THREAD_STACK_CHECK(thread_ptr)
 109:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 110:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 111:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Lockout interrupts while the thread is being resumed.  */
 112:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     TX_DISABLE
  49              		.loc 1 112 5 view .LVU10
  50              	.LBB40:
  51              	.LBI40:
  52              		.file 2 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h"
   1:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
   2:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
   3:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
   5:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*       This software is licensed under the Microsoft Software License   */
   6:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*       and in the root directory of this software.                      */
ARM GAS  /tmp/cct9C51U.s 			page 4


   9:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  10:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  11:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  12:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  13:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  14:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  15:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**                                                                       */
  16:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /** ThreadX Component                                                     */
  17:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**                                                                       */
  18:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**   Port Specific                                                       */
  19:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**                                                                       */
  20:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  21:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  22:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  23:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  24:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  25:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  26:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  PORT SPECIFIC C INFORMATION                            RELEASE        */
  27:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  28:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    tx_port.h                                         Cortex-M7/GNU     */
  29:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                           6.1.12       */
  30:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  31:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  AUTHOR                                                                */
  32:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  33:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    Scott Larson, Microsoft Corporation                                 */
  34:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  35:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  DESCRIPTION                                                           */
  36:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  37:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    This file contains data type definitions that make the ThreadX      */
  38:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    real-time kernel function identically on a variety of different     */
  39:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    processor architectures.  For example, the size or number of bits   */
  40:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    in an "int" data type vary between microprocessor architectures and */
  41:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    even C compilers for the same microprocessor.  ThreadX does not     */
  42:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    directly use native C data types.  Instead, ThreadX creates its     */
  43:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    own special types that can be mapped to actual data types by this   */
  44:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    file to guarantee consistency in the interface and functionality.   */
  45:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  46:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    This file replaces the previous Cortex-M3/M4/M7 files. It unifies   */
  47:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    the ARMv7-M architecture and compilers into one common file.        */
  48:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  49:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  RELEASE HISTORY                                                       */
  50:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  51:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    DATE              NAME                      DESCRIPTION             */
  52:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  53:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  06-02-2021      Scott Larson            Initial Version 6.1.7         */
  54:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  01-31-2022      Scott Larson            Modified comments, updated    */
  55:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            typedef to fix misra        */
  56:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            violation,                  */
  57:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            fixed predefined macro,     */
  58:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.10 */
  59:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  04-25-2022      Scott Larson            Modified comments and added   */
  60:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            volatile to registers,      */
  61:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.11 */
  62:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  07-29-2022      Scott Larson            Modified comments and         */
  63:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            described BASEPRI usage,    */
  64:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.12 */
  65:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
ARM GAS  /tmp/cct9C51U.s 			page 5


  66:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  67:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  68:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_PORT_H
  69:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_PORT_H
  70:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  71:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  72:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Determine if the optional ThreadX user define file should be used.  */
  73:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  74:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_INCLUDE_USER_DEFINE_FILE
  75:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  76:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Yes, include the user defines in tx_user.h. The defines in this file may
  77:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    alternately be defined on the command line.  */
  78:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  79:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include "tx_user.h"
  80:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
  81:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  82:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  83:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define compiler library include files.  */
  84:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  85:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include <stdlib.h>
  86:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include <string.h>
  87:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  88:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __ICCARM__
  89:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include <intrinsics.h>                     /* IAR Intrinsics */
  90:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define __asm__ __asm                       /* Define to make all inline asm look similar */
  91:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
  92:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include <yvals.h>
  93:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
  94:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif /* __ICCARM__ */
  95:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  96:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __ghs__
  97:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include <arm_ghs.h>
  98:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include "tx_ghs.h"
  99:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
 100:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 101:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 102:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #if !defined(__GNUC__) && !defined(__CC_ARM)
 103:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define __get_control_value __get_CONTROL
 104:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define __set_control_value __set_CONTROL
 105:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 106:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 107:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef __GNUC__
 108:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define __get_ipsr_value __get_IPSR
 109:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 110:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 111:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define ThreadX basic types for this port.  */
 112:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 113:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define VOID                                    void
 114:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef char                                    CHAR;
 115:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef unsigned char                           UCHAR;
 116:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef int                                     INT;
 117:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef unsigned int                            UINT;
 118:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef long                                    LONG;
 119:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef unsigned long                           ULONG;
 120:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef unsigned long long                      ULONG64;
 121:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef short                                   SHORT;
 122:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef unsigned short                          USHORT;
ARM GAS  /tmp/cct9C51U.s 			page 6


 123:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define ULONG64_DEFINED
 124:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 125:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the priority levels for ThreadX.  Legal values range
 126:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    from 32 to 1024 and MUST be evenly divisible by 32.  */
 127:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 128:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MAX_PRIORITIES
 129:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_MAX_PRIORITIES                       32
 130:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 131:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 132:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 133:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the minimum stack for a ThreadX thread on this processor. If the size supplied during
 134:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    thread creation is less than this value, the thread create call will return an error.  */
 135:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 136:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MINIMUM_STACK
 137:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_MINIMUM_STACK                        200         /* Minimum stack size for this port  */
 138:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 139:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 140:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 141:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the system timer thread's default stack size and priority.  These are only applicable
 142:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    if TX_TIMER_PROCESS_IN_ISR is not defined.  */
 143:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 144:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_STACK_SIZE
 145:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_STACK_SIZE              1024        /* Default timer thread stack size  */
 146:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 147:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 148:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_PRIORITY
 149:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_PRIORITY                0           /* Default timer thread priority    */
 150:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 151:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 152:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* By default, ThreadX for Cortex-M uses the PRIMASK register to enable/disable interrupts.
 153:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** If using BASEPRI is desired, define the following two symbols for both c and assembly files:
 154:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** TX_PORT_USE_BASEPRI - This tells ThreadX to use BASEPRI instead of PRIMASK.
 155:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** TX_PORT_BASEPRI = (priority_mask << (8 - number_priority_bits)) - this defines the maximum priority
 156:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** Any interrupt with a higher priority than priority_mask will not be masked, thus the interrupt will
 157:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** */
 158:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 159:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define various constants for the ThreadX Cortex-M port.  */
 160:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 161:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_INT_DISABLE                          1           /* Disable interrupts               */
 162:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_INT_ENABLE                           0           /* Enable interrupts                */
 163:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 164:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 165:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the clock source for trace event entry time stamp. The following two item are port specif
 166:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    For example, if the time source is at the address 0x0a800024 and is 16-bits in size, the clock
 167:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    source constants would be:
 168:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 169:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((volatile ULONG *) 0x0a800024)
 170:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0x0000FFFFUL
 171:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 172:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** */
 173:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 174:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 175:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_SOURCE
 176:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((volatile ULONG *) 0xE0001004)
 177:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 178:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 179:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG   _tx_misra_time_stamp_get(VOID);
ARM GAS  /tmp/cct9C51U.s 			page 7


 180:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    _tx_misra_time_stamp_get()
 181:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 182:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 183:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_MASK
 184:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0xFFFFFFFFUL
 185:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 186:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 187:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __ghs__
 188:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define constants for Green Hills EventAnalyzer.  */
 189:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 190:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the number of ticks per second. This informs the EventAnalyzer what the timestamps
 191:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    represent.  By default, this is set to 1,000,000 i.e., one tick every microsecond. */
 192:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 193:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_EL_TICKS_PER_SECOND                  1000000
 194:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 195:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the method of how to get the upper and lower 32-bits of the time stamp. By default, simpl
 196:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    simulate the time-stamp source with a counter.  */
 197:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 198:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define read_tbu()                              _tx_el_time_base_upper
 199:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define read_tbl()                              ++_tx_el_time_base_lower
 200:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
 201:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 202:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the port specific options for the _tx_build_options variable. This variable indicates
 203:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    how the ThreadX library was built.  */
 204:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 205:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_BUILD_OPTIONS          (0)
 206:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 207:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 208:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the in-line initialization constant so that modules with in-line
 209:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    initialization capabilities can prevent their initialization from being
 210:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    a function call.  */
 211:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 212:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 213:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_DISABLE_INLINE
 214:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 215:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_INLINE_INITIALIZATION
 216:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 217:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 218:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 219:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Determine whether or not stack checking is enabled. By default, ThreadX stack checking is
 220:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    disabled. When the following is defined, ThreadX thread stack checking is enabled.  If stack
 221:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    checking is enabled (TX_ENABLE_STACK_CHECKING is defined), the TX_DISABLE_STACK_FILLING
 222:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    define is negated, thereby forcing the stack fill which is necessary for the stack checking
 223:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    logic.  */
 224:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 225:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 226:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_ENABLE_STACK_CHECKING
 227:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #undef TX_DISABLE_STACK_FILLING
 228:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 229:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 230:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 231:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 232:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the TX_THREAD control block extensions for this port. The main reason
 233:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    for the multiple macros is so that backward compatibility can be maintained with
 234:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    existing ThreadX kernel awareness modules.  */
 235:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 236:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_0
ARM GAS  /tmp/cct9C51U.s 			page 8


 237:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_1
 238:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 239:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID    *tx_thread_iar_tls_pointer;
 240:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__ghs__)
 241:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID *  tx_thread_eh_globals;                           \
 242:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                         int     Errno;             /* errno.  */                \
 243:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                         char *  strtok_saved_pos;  /* strtok() position.  */
 244:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 245:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2
 246:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 247:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 248:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 249:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_3
 250:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 251:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 252:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 253:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the port extensions of the remaining ThreadX objects.  */
 254:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 255:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_EXTENSION
 256:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_EXTENSION
 257:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_EXTENSION
 258:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_MUTEX_EXTENSION
 259:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_QUEUE_EXTENSION
 260:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_EXTENSION
 261:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TIMER_EXTENSION
 262:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 263:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 264:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the user extension field of the thread control block.  Nothing
 265:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    additional is needed for this port so it is defined as white space.  */
 266:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 267:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_THREAD_USER_EXTENSION
 268:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_USER_EXTENSION
 269:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 270:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 271:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 272:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the macros for processing extensions in tx_thread_create, tx_thread_delete,
 273:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    tx_thread_shell_entry, and tx_thread_terminate.  */
 274:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 275:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 276:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 277:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #if (__VER__ < 8000000)
 278:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 279:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      __iar_dlib_perthread_deallocate
 280:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     thread_ptr -> tx_thread_iar_tls
 281:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               __iar_dlib_perthread_access(0);
 282:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 283:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void    *_tx_iar_create_per_thread_tls_area(void);
 284:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void    _tx_iar_destroy_per_thread_tls_area(void *tls_ptr);
 285:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void    __iar_Initlocks(void);
 286:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 287:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 288:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      do {_tx_iar_destroy_per_thread_
 289:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                         thread_ptr -> tx_thread_iar
 290:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               do {__iar_Initlocks();} while(0
 291:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 292:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 293:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)
ARM GAS  /tmp/cct9C51U.s 			page 9


 294:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)
 295:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 296:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 297:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #if defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_FPU_VFP)
 298:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 299:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 300:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 301:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG  _tx_misra_control_get(void);
 302:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void   _tx_misra_control_set(ULONG value);
 303:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG  _tx_misra_fpccr_get(void);
 304:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void   _tx_misra_vfp_touch(void);
 305:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 306:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE not defined */
 307:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 308:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define some helper functions (these are intrinsics in some compilers). */
 309:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __GNUC__ /* GCC and ARM Compiler 6 */
 310:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 311:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline ULONG __get_control_value(void)
 312:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 313:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG  control_value;
 314:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 315:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,CONTROL ": "=r" (control_value) );
 316:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(control_value);
 317:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 318:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 319:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_control_value(ULONG control_value)
 320:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 321:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile (" MSR  CONTROL,%0": : "r" (control_value): "memory" );
 322:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 323:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 324:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 325:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 326:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* ARM Compiler 5 */
 327:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 328:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) ULONG __get_control_value(void)
 329:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 330:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG  control_value;
 331:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 332:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm volatile ("MRS control_value,CONTROL");
 333:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(control_value);
 334:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 335:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 336:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) void __set_control_value(ULONG control_value)
 337:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 338:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR CONTROL,control_value");
 339:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 340:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Can't access VFP registers with inline asm, so define this in tx_thread_schedule.  */
 341:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void _tx_vfp_access(void);
 342:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  _tx_vfp_access();
 343:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 344:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)  /* IAR */
 345:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 346:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* Helper functions for different compilers */
 347:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 348:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 349:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 350:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
ARM GAS  /tmp/cct9C51U.s 			page 10


 351:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* A completed thread falls into _thread_shell_entry and we can simply deactivate the FPU via CONTR
 352:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    in order to ensure no lazy stacking will occur. */
 353:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 354:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 355:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 356:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 357:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 358:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  __get_control_value();    
 359:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 360:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         __set_control_value(_tx_vfp_state);        
 361:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     }
 362:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 363:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 364:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 365:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 366:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_misra_control_get();  
 367:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 368:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_misra_control_set(_tx_vfp_state);      
 369:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     }
 370:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 371:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 372:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 373:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* A thread can be terminated by another thread, so we first check if it's self-terminating and not
 374:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    If so, deactivate the FPU via CONTROL.FPCA. Otherwise we are in an interrupt or another thread i
 375:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    this one, so if the FPCCR.LSPACT bit is set, we need to save the CONTROL.FPCA state, touch the F
 376:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    the lazy FPU save, then restore the CONTROL.FPCA state. */
 377:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 378:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 379:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 380:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 381:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 382:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 383:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 384:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         {                                          
 385:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 386:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  __get_control_value();
 387:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 388:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             __set_control_value(_tx_vfp_state);    
 389:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         }                                          
 390:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         else                                       
 391:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         {                                          
 392:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 393:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  *((volatile ULONG *) 0xE00
 394:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 395:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 396:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             {                                      
 397:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 398:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = __get_control_value
 399:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 400:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 TX_VFP_TOUCH();                    
 401:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 402:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 {                                  
 403:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  __get_control_
 404:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 405:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     __set_control_value(_tx_vfp_sta
 406:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 }                                  
 407:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             }                                      
ARM GAS  /tmp/cct9C51U.s 			page 11


 408:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         }                                          
 409:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     }
 410:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 411:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 412:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 413:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 414:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 415:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 416:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         {                                          
 417:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 418:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_misra_control_get(
 419:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 420:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_misra_control_set(_tx_vfp_state);  
 421:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         }                                          
 422:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         else                                       
 423:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         {                                          
 424:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 425:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_misra_fpccr_get();    
 426:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 427:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 428:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             {                                      
 429:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 430:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = _tx_misra_control_g
 431:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 432:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 _tx_misra_vfp_touch();             
 433:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 434:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 {                                  
 435:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_misra_cont
 436:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 437:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     _tx_misra_control_set(_tx_vfp_s
 438:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 }                                  
 439:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             }                                      
 440:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         }                                          
 441:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     }
 442:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 443:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 444:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else   /* No VFP in use */
 445:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 446:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)
 447:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)
 448:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 449:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_F
 450:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 451:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 452:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the ThreadX object creation extensions for the remaining objects.  */
 453:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 454:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_CREATE_EXTENSION(pool_ptr)
 455:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_CREATE_EXTENSION(pool_ptr)
 456:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_CREATE_EXTENSION(group_ptr)
 457:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_MUTEX_CREATE_EXTENSION(mutex_ptr)
 458:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_QUEUE_CREATE_EXTENSION(queue_ptr)
 459:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_CREATE_EXTENSION(semaphore_ptr)
 460:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TIMER_CREATE_EXTENSION(timer_ptr)
 461:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 462:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 463:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the ThreadX object deletion extensions for the remaining objects.  */
 464:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
ARM GAS  /tmp/cct9C51U.s 			page 12


 465:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_DELETE_EXTENSION(pool_ptr)
 466:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_DELETE_EXTENSION(pool_ptr)
 467:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_DELETE_EXTENSION(group_ptr)
 468:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_MUTEX_DELETE_EXTENSION(mutex_ptr)
 469:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_QUEUE_DELETE_EXTENSION(queue_ptr)
 470:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_DELETE_EXTENSION(semaphore_ptr)
 471:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TIMER_DELETE_EXTENSION(timer_ptr)
 472:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 473:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 474:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the get system state macro.  */
 475:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 476:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_THREAD_GET_SYSTEM_STATE
 477:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 478:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 479:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __CC_ARM /* ARM Compiler 5 */
 480:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 481:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** register unsigned int _ipsr __asm("ipsr");
 482:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _ipsr)
 483:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 484:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and ARM Compiler 6 */
 485:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 486:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_ipsr_value(void)
 487:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 488:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** unsigned int  ipsr_value;
 489:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
 490:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(ipsr_value);
 491:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 492:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 493:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_ipsr_value())
 494:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 495:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)   /* IAR */
 496:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 497:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_IPSR())
 498:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 499:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE for different compilers */
 500:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 501:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE is defined, use MISRA function. */
 502:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG   _tx_misra_ipsr_get(VOID);
 503:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _tx_misra_ipsr_get())
 504:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 505:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE */
 506:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 507:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 508:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the check for whether or not to call the _tx_thread_system_return function.  A non-zero v
 509:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    indicates that _tx_thread_system_return should not be called. This overrides the definition in t
 510:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    for Cortex-M since so we don't waste time checking the _tx_thread_system_state variable that is 
 511:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    zero after initialization for Cortex-M ports. */
 512:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 513:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_THREAD_SYSTEM_RETURN_CHECK
 514:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_SYSTEM_RETURN_CHECK(c)    (c) = ((ULONG) _tx_thread_preempt_disable);
 515:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 516:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 517:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the macro to ensure _tx_thread_preempt_disable is set early in initialization in order to
 518:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    prevent early scheduling on Cortex-M parts.  */
 519:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 520:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_POST_INITIALIZATION    _tx_thread_preempt_disable++;
 521:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
ARM GAS  /tmp/cct9C51U.s 			page 13


 522:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 523:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 524:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 525:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_DISABLE_INLINE
 526:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 527:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the TX_LOWEST_SET_BIT_CALCULATE macro for each compiler. */
 528:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __ICCARM__       /* IAR Compiler */
 529:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __CLZ(__RBIT((m)));
 530:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* AC5 Compiler */
 531:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __clz(__rbit((m)));
 532:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and AC6 Compiler */
 533:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       __asm__ volatile (" RBIT %0,%1 ": "=r" (m) : "r" (m
 534:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                 __asm__ volatile (" CLZ  %0,%1 ": "=r" (b) : "r" (m
 535:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 536:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 537:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 538:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 539:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the interrupt disable/restore macros for each compiler. */
 540:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 541:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #if defined(__GNUC__) || defined(__ICCARM__)
 542:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 543:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*** GCC/AC6 and IAR ***/
 544:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 545:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_interrupt_posture(void)
 546:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 547:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** unsigned int posture;
 548:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 549:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, BASEPRI ": "=r" (posture));
 550:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 551:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
 552:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(posture);
 554:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 555:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 556:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 557:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_basepri_value(unsigned int basepri_valu
 558:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 559:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  BASEPRI,%0 ": : "r" (basepri_value));
 560:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 561:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 562:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __enable_interrupts(void)
 563:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 564:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSIE  i": : : "memory");
 565:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 566:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 567:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __restore_interrupt(unsigned int int_posture)
 569:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 570:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 571:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __set_basepri_value(int_posture);
 572:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     //__asm__ volatile ("MSR  BASEPRI,%0": : "r" (int_posture): "memory");
 573:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
 575:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 576:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 577:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 578:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __disable_interrupts(void)
ARM GAS  /tmp/cct9C51U.s 			page 14


  53              		.loc 2 578 63 view .LVU11
  54              	.LBB41:
 579:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 580:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** unsigned int int_posture;
  55              		.loc 2 580 1 view .LVU12
 581:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 582:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     int_posture = __get_interrupt_posture();
  56              		.loc 2 582 5 view .LVU13
  57              	.LBB42:
  58              	.LBI42:
 545:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
  59              		.loc 2 545 63 view .LVU14
  60              	.LBB43:
 547:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
  61              		.loc 2 547 1 view .LVU15
 551:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
  62              		.loc 2 551 5 view .LVU16
  63              		.syntax unified
  64              	@ 551 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
  65 0004 EFF31085 		MRS  r5, PRIMASK 
  66              	@ 0 "" 2
  67              	.LVL1:
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
  68              		.loc 2 553 5 view .LVU17
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
  69              		.loc 2 553 5 is_stmt 0 view .LVU18
  70              		.thumb
  71              		.syntax unified
  72              	.LBE43:
  73              	.LBE42:
 583:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 584:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 585:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __set_basepri_value(TX_PORT_BASEPRI);
 586:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 587:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSID i" : : : "memory");
  74              		.loc 2 587 5 is_stmt 1 view .LVU19
  75              		.syntax unified
  76              	@ 587 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
  77 0008 72B6     		CPSID i
  78              	@ 0 "" 2
 588:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 589:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(int_posture);
  79              		.loc 2 589 5 view .LVU20
  80              	.LVL2:
  81              		.loc 2 589 5 is_stmt 0 view .LVU21
  82              		.thumb
  83              		.syntax unified
  84              	.LBE41:
  85              	.LBE40:
 113:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 114:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifndef TX_NO_TIMER
 115:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 116:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Deactivate the timeout timer if necessary.  */
 117:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     if (thread_ptr -> tx_thread_timer.tx_timer_internal_list_head != TX_NULL)
  86              		.loc 1 117 5 is_stmt 1 view .LVU22
  87              		.loc 1 117 38 is_stmt 0 view .LVU23
  88 000a 436E     		ldr	r3, [r0, #100]
ARM GAS  /tmp/cct9C51U.s 			page 15


  89              		.loc 1 117 8 view .LVU24
  90 000c DBB1     		cbz	r3, .L2
 118:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     {
 119:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 120:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Deactivate the thread's timeout timer.  */
 121:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         _tx_timer_system_deactivate(&(thread_ptr -> tx_thread_timer));
  91              		.loc 1 121 9 is_stmt 1 view .LVU25
  92 000e 4C30     		adds	r0, r0, #76
  93              	.LVL3:
  94              		.loc 1 121 9 is_stmt 0 view .LVU26
  95 0010 FFF7FEFF 		bl	_tx_timer_system_deactivate
  96              	.LVL4:
  97              	.L3:
 122:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     }
 123:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     else
 124:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     {
 125:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 126:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Clear the remaining time to ensure timer doesn't get activated.  */
 127:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         thread_ptr -> tx_thread_timer.tx_timer_internal_remaining_ticks =  ((ULONG) 0);
 128:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     }
 129:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 130:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 131:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_ENABLE_EVENT_TRACE
 132:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 133:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* If trace is enabled, save the current event pointer.  */
 134:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     entry_ptr =  _tx_trace_buffer_current_ptr;
 135:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 136:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 137:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Log the thread status change.  */
 138:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     TX_TRACE_IN_LINE_INSERT(TX_TRACE_THREAD_RESUME, thread_ptr, thread_ptr -> tx_thread_state, TX_P
 139:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 140:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_ENABLE_EVENT_TRACE
 141:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 142:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Save the time stamp for later comparison to verify that
 143:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****        the event hasn't been overwritten by the time we have
 144:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****        computed the next thread to execute.  */
 145:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     if (entry_ptr != TX_NULL)
 146:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     {
 147:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 148:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Save time stamp.  */
 149:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         time_stamp =  entry_ptr -> tx_trace_buffer_entry_time_stamp;
 150:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     }
 151:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 152:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 153:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Decrease the preempt disabled count.  */
 154:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     _tx_thread_preempt_disable--;
  98              		.loc 1 154 5 is_stmt 1 view .LVU27
  99              		.loc 1 154 31 is_stmt 0 view .LVU28
 100 0014 404A     		ldr	r2, .L16
 101 0016 1368     		ldr	r3, [r2]
 102 0018 013B     		subs	r3, r3, #1
 103 001a 1360     		str	r3, [r2]
 155:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 156:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Determine if the thread is in the process of suspending.  If so, the thread
 157:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****        control block is already on the linked list so nothing needs to be done.  */
 158:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     if (thread_ptr -> tx_thread_suspending == TX_FALSE)
 104              		.loc 1 158 5 is_stmt 1 view .LVU29
ARM GAS  /tmp/cct9C51U.s 			page 16


 105              		.loc 1 158 20 is_stmt 0 view .LVU30
 106 001c A36B     		ldr	r3, [r4, #56]
 107              		.loc 1 158 8 view .LVU31
 108 001e 002B     		cmp	r3, #0
 109 0020 6BD1     		bne	.L4
 159:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     {
 160:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 161:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Thread is not in the process of suspending. Now check to make sure the thread
 162:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****            has not already been resumed.  */
 163:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         if (thread_ptr -> tx_thread_state != TX_READY)
 110              		.loc 1 163 9 is_stmt 1 view .LVU32
 111              		.loc 1 163 24 is_stmt 0 view .LVU33
 112 0022 236B     		ldr	r3, [r4, #48]
 113              		.loc 1 163 12 view .LVU34
 114 0024 002B     		cmp	r3, #0
 115 0026 4ED0     		beq	.L5
 164:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         {
 165:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 166:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             /* No, now check to see if the delayed suspension flag is set.  */
 167:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             if (thread_ptr -> tx_thread_delayed_suspend == TX_FALSE)
 116              		.loc 1 167 13 is_stmt 1 view .LVU35
 117              		.loc 1 167 28 is_stmt 0 view .LVU36
 118 0028 636B     		ldr	r3, [r4, #52]
 119              		.loc 1 167 16 view .LVU37
 120 002a 002B     		cmp	r3, #0
 121 002c 47D1     		bne	.L6
 168:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             {
 169:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 170:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Resume the thread!  */
 171:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 172:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Make this thread ready.  */
 173:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 174:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Change the state to ready.  */
 175:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 thread_ptr -> tx_thread_state =  TX_READY;
 122              		.loc 1 175 17 is_stmt 1 view .LVU38
 123              		.loc 1 175 47 is_stmt 0 view .LVU39
 124 002e 2363     		str	r3, [r4, #48]
 176:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 177:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Pickup priority of thread.  */
 178:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 priority =  thread_ptr -> tx_thread_priority;
 125              		.loc 1 178 17 is_stmt 1 view .LVU40
 126              		.loc 1 178 26 is_stmt 0 view .LVU41
 127 0030 E26A     		ldr	r2, [r4, #44]
 128              	.LVL5:
 179:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 180:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Thread state change.  */
 181:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 TX_THREAD_STATE_CHANGE(thread_ptr, TX_READY)
 182:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 183:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Log the thread status change.  */
 184:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 TX_EL_THREAD_STATUS_CHANGE_INSERT(thread_ptr, TX_READY)
 185:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 186:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
 187:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 188:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Increment the total number of thread resumptions.  */
 189:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 _tx_thread_performance_resume_count++;
 190:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 191:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Increment this thread's resume count.  */
ARM GAS  /tmp/cct9C51U.s 			page 17


 192:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 thread_ptr -> tx_thread_performance_resume_count++;
 193:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 194:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 195:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Determine if there are other threads at this priority that are
 196:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                    ready.  */
 197:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 head_ptr =  _tx_thread_priority_list[priority];
 129              		.loc 1 197 17 is_stmt 1 view .LVU42
 130              		.loc 1 197 26 is_stmt 0 view .LVU43
 131 0032 3A4B     		ldr	r3, .L16+4
 132 0034 53F82230 		ldr	r3, [r3, r2, lsl #2]
 133              	.LVL6:
 198:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 if (head_ptr == TX_NULL)
 134              		.loc 1 198 17 is_stmt 1 view .LVU44
 135              		.loc 1 198 20 is_stmt 0 view .LVU45
 136 0038 43B1     		cbz	r3, .L14
 199:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 {
 200:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 201:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* First thread at this priority ready.  Add to the front of the list.  */
 202:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     _tx_thread_priority_list[priority] =       thread_ptr;
 203:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_ready_next =       thread_ptr;
 204:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_ready_previous =   thread_ptr;
 205:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 206:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #if TX_MAX_PRIORITIES > 32
 207:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 208:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* Calculate the index into the bit map array.  */
 209:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     map_index =  priority/((UINT) 32);
 210:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 211:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* Set the active bit to remember that the priority map has something set.  */
 212:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     TX_DIV32_BIT_SET(priority, priority_bit)
 213:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     _tx_thread_priority_map_active =  _tx_thread_priority_map_active | priority_bit
 214:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 215:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 216:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* Or in the thread's priority bit.  */
 217:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     TX_MOD32_BIT_SET(priority, priority_bit)
 218:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     _tx_thread_priority_maps[MAP_INDEX] =  _tx_thread_priority_maps[MAP_INDEX] | pr
 219:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 220:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* Determine if this newly ready thread is the highest priority.  */
 221:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     if (priority < _tx_thread_highest_priority)
 222:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     {
 223:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 224:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         /* A new highest priority thread is present. */
 225:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 226:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         /* Update the highest priority variable.  */
 227:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         _tx_thread_highest_priority =  priority;
 228:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 229:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         /* Pickup the execute pointer. Since it is going to be referenced multiple
 230:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                            times, it is placed in a local variable.  */
 231:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         execute_ptr =  _tx_thread_execute_ptr;
 232:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 233:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         /* Determine if no thread is currently executing.  */
 234:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         if (execute_ptr == TX_NULL)
 235:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         {
 236:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 237:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                             /* Simply setup the execute pointer.  */
 238:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                             _tx_thread_execute_ptr =  thread_ptr;
 239:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         }
 240:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         else
ARM GAS  /tmp/cct9C51U.s 			page 18


 241:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         {
 242:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 243:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                             /* Another thread has been scheduled for execution.  */
 244:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 245:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                             /* Check to see if this is a higher priority thread and determine if pr
 246:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                             if (priority < execute_ptr -> tx_thread_preempt_threshold)
 247:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                             {
 248:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 249:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifndef TX_DISABLE_PREEMPTION_THRESHOLD
 250:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 251:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Determine if the preempted thread had preemption-threshold set. 
 252:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 if (execute_ptr -> tx_thread_preempt_threshold != execute_ptr -> tx
 253:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 {
 254:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 255:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #if TX_MAX_PRIORITIES > 32
 256:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 257:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* Calculate the index into the bit map array.  */
 258:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     map_index =  (execute_ptr -> tx_thread_priority)/((UINT) 32);
 259:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 260:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* Set the active bit to remember that the preempt map has some
 261:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     TX_DIV32_BIT_SET(execute_ptr -> tx_thread_priority, priority_bi
 262:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     _tx_thread_preempted_map_active =  _tx_thread_preempted_map_act
 263:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 264:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 265:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* Remember that this thread was preempted by a thread above th
 266:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     TX_MOD32_BIT_SET(execute_ptr -> tx_thread_priority, priority_bi
 267:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     _tx_thread_preempted_maps[MAP_INDEX] =  _tx_thread_preempted_ma
 268:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 }
 269:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 270:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 271:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
 272:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 273:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Determine if the caller is an interrupt or from a thread.  */
 274:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 if (TX_THREAD_GET_SYSTEM_STATE() == ((ULONG) 0))
 275:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 {
 276:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 277:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* Caller is a thread, so this is a solicited preemption.  */
 278:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     _tx_thread_performance_solicited_preemption_count++;
 279:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 280:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* Increment the thread's solicited preemption counter.  */
 281:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     execute_ptr -> tx_thread_performance_solicited_preemption_count
 282:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 }
 283:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 else
 284:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 {
 285:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 286:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     if (TX_THREAD_GET_SYSTEM_STATE() < TX_INITIALIZE_IN_PROGRESS)
 287:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     {
 288:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 289:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                         /* Caller is an interrupt, so this is an interrupt preempti
 290:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                         _tx_thread_performance_interrupt_preemption_count++;
 291:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 292:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                         /* Increment the thread's interrupt preemption counter.  */
 293:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                         execute_ptr -> tx_thread_performance_interrupt_preemption_c
 294:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     }
 295:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 }
 296:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 297:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Remember the thread that preempted this thread.  */
ARM GAS  /tmp/cct9C51U.s 			page 19


 298:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 execute_ptr -> tx_thread_performance_last_preempting_thread =  thre
 299:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 300:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 301:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 302:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Yes, modify the execute thread pointer.  */
 303:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 _tx_thread_execute_ptr =  thread_ptr;
 304:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 305:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifndef TX_MISRA_ENABLE
 306:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 307:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* If MISRA is not-enabled, insert a preemption and return in-line 
 308:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 309:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
 310:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 311:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Is the execute pointer different?  */
 312:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 if (_tx_thread_performance_execute_log[_tx_thread_performance__exec
 313:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 {
 314:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 315:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* Move to next entry.  */
 316:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     _tx_thread_performance__execute_log_index++;
 317:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 318:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* Check for wrap condition.  */
 319:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     if (_tx_thread_performance__execute_log_index >= TX_THREAD_EXEC
 320:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     {
 321:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 322:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                         /* Set the index to the beginning.  */
 323:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                         _tx_thread_performance__execute_log_index =  ((UINT) 0);
 324:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     }
 325:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 326:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* Log the new execute pointer.  */
 327:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     _tx_thread_performance_execute_log[_tx_thread_performance__exec
 328:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 }
 329:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 330:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 331:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_ENABLE_EVENT_TRACE
 332:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 333:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Check that the event time stamp is unchanged.  A different
 334:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                    timestamp means that a later event wrote over the thread
 335:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                    resume event. In that case, do nothing here.  */
 336:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 if (entry_ptr != TX_NULL)
 337:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 {
 338:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 339:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* Is the timestamp the same?  */
 340:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     if (time_stamp == entry_ptr -> tx_trace_buffer_entry_time_stamp
 341:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     {
 342:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 343:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                         /* Timestamp is the same, set the "next thread pointer" to 
 344:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                            be used by the trace analysis tool to show idle system c
 345:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                         entry_ptr -> tx_trace_buffer_entry_information_field_4 =  T
 346:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     }
 347:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 }
 348:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 349:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 350:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Restore interrupts.  */
 351:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 TX_RESTORE
 352:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 353:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_ENABLE_STACK_CHECKING
 354:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
ARM GAS  /tmp/cct9C51U.s 			page 20


 355:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Pickup the next execute pointer.  */
 356:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 thread_ptr =  _tx_thread_execute_ptr;
 357:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 358:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Check this thread's stack.  */
 359:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 TX_THREAD_STACK_CHECK(thread_ptr)
 360:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 361:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 362:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Now determine if preemption should take place. This is only poss
 363:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                    not the same as the execute thread pointer AND the system state 
 364:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 TX_THREAD_SYSTEM_RETURN_CHECK(combined_flags)
 365:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 if (combined_flags == ((ULONG) 0))
 366:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 {
 367:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 368:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
 369:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 370:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* There is another thread ready to run and will be scheduled u
 371:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     _tx_thread_performance_non_idle_return_count++;
 372:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 373:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 374:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     /* Preemption is needed - return to the system!  */
 375:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     _tx_thread_system_return();
 376:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 }
 377:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 378:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 /* Return in-line when MISRA is not enabled.  */
 379:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 return;
 380:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 381:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                             }
 382:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         }
 383:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     }
 384:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 }
 385:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 else
 386:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 {
 387:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 388:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* No, there are other threads at this priority already ready.  */
 389:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 390:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* Just add this thread to the priority list.  */
 391:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     tail_ptr =                                 head_ptr -> tx_thread_ready_previous
 137              		.loc 1 391 21 is_stmt 1 view .LVU46
 138              		.loc 1 391 30 is_stmt 0 view .LVU47
 139 003a 5A6A     		ldr	r2, [r3, #36]
 140              	.LVL7:
 392:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     tail_ptr -> tx_thread_ready_next =         thread_ptr;
 141              		.loc 1 392 21 is_stmt 1 view .LVU48
 142              		.loc 1 392 54 is_stmt 0 view .LVU49
 143 003c 1462     		str	r4, [r2, #32]
 144              	.LVL8:
 393:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     head_ptr -> tx_thread_ready_previous =     thread_ptr;
 145              		.loc 1 393 21 is_stmt 1 view .LVU50
 146              		.loc 1 393 58 is_stmt 0 view .LVU51
 147 003e 5C62     		str	r4, [r3, #36]
 394:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_ready_previous =   tail_ptr;
 148              		.loc 1 394 21 is_stmt 1 view .LVU52
 149              		.loc 1 394 60 is_stmt 0 view .LVU53
 150 0040 6262     		str	r2, [r4, #36]
 395:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_ready_next =       head_ptr;
 151              		.loc 1 395 21 is_stmt 1 view .LVU54
 152              		.loc 1 395 56 is_stmt 0 view .LVU55
ARM GAS  /tmp/cct9C51U.s 			page 21


 153 0042 2362     		str	r3, [r4, #32]
 154 0044 3FE0     		b	.L5
 155              	.LVL9:
 156              	.L2:
 127:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     }
 157              		.loc 1 127 9 is_stmt 1 view .LVU56
 127:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     }
 158              		.loc 1 127 73 is_stmt 0 view .LVU57
 159 0046 0023     		movs	r3, #0
 160 0048 C364     		str	r3, [r0, #76]
 161 004a E3E7     		b	.L3
 162              	.LVL10:
 163              	.L14:
 202:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_ready_next =       thread_ptr;
 164              		.loc 1 202 21 is_stmt 1 view .LVU58
 202:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_ready_next =       thread_ptr;
 165              		.loc 1 202 56 is_stmt 0 view .LVU59
 166 004c 334B     		ldr	r3, .L16+4
 167              	.LVL11:
 202:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_ready_next =       thread_ptr;
 168              		.loc 1 202 56 view .LVU60
 169 004e 43F82240 		str	r4, [r3, r2, lsl #2]
 170              	.LVL12:
 203:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_ready_previous =   thread_ptr;
 171              		.loc 1 203 21 is_stmt 1 view .LVU61
 203:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_ready_previous =   thread_ptr;
 172              		.loc 1 203 56 is_stmt 0 view .LVU62
 173 0052 2462     		str	r4, [r4, #32]
 204:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 174              		.loc 1 204 21 is_stmt 1 view .LVU63
 204:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 175              		.loc 1 204 60 is_stmt 0 view .LVU64
 176 0054 6462     		str	r4, [r4, #36]
 217:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     _tx_thread_priority_maps[MAP_INDEX] =  _tx_thread_priority_maps[MAP_INDEX] | pr
 177              		.loc 1 217 21 is_stmt 1 view .LVU65
 178 0056 0121     		movs	r1, #1
 179 0058 9140     		lsls	r1, r1, r2
 180              	.LVL13:
 218:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 181              		.loc 1 218 21 view .LVU66
 218:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 182              		.loc 1 218 84 is_stmt 0 view .LVU67
 183 005a 3148     		ldr	r0, .L16+8
 184 005c 0368     		ldr	r3, [r0]
 218:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 185              		.loc 1 218 96 view .LVU68
 186 005e 0B43     		orrs	r3, r3, r1
 218:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 187              		.loc 1 218 57 view .LVU69
 188 0060 0360     		str	r3, [r0]
 221:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     {
 189              		.loc 1 221 21 is_stmt 1 view .LVU70
 221:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     {
 190              		.loc 1 221 34 is_stmt 0 view .LVU71
 191 0062 304B     		ldr	r3, .L16+12
 192 0064 1B68     		ldr	r3, [r3]
 221:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     {
ARM GAS  /tmp/cct9C51U.s 			page 22


 193              		.loc 1 221 24 view .LVU72
 194 0066 9342     		cmp	r3, r2
 195 0068 2DD9     		bls	.L5
 227:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 196              		.loc 1 227 25 is_stmt 1 view .LVU73
 227:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 197              		.loc 1 227 53 is_stmt 0 view .LVU74
 198 006a 2E4B     		ldr	r3, .L16+12
 199 006c 1A60     		str	r2, [r3]
 231:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 200              		.loc 1 231 25 is_stmt 1 view .LVU75
 231:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 201              		.loc 1 231 37 is_stmt 0 view .LVU76
 202 006e 2E4B     		ldr	r3, .L16+16
 203 0070 1B68     		ldr	r3, [r3]
 204              	.LVL14:
 234:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         {
 205              		.loc 1 234 25 is_stmt 1 view .LVU77
 234:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         {
 206              		.loc 1 234 28 is_stmt 0 view .LVU78
 207 0072 0BB3     		cbz	r3, .L15
 246:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                             {
 208              		.loc 1 246 29 is_stmt 1 view .LVU79
 246:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                             {
 209              		.loc 1 246 56 is_stmt 0 view .LVU80
 210 0074 D96B     		ldr	r1, [r3, #60]
 211              	.LVL15:
 246:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                             {
 212              		.loc 1 246 32 view .LVU81
 213 0076 9142     		cmp	r1, r2
 214 0078 25D9     		bls	.L5
 252:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 {
 215              		.loc 1 252 33 is_stmt 1 view .LVU82
 252:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 {
 216              		.loc 1 252 95 is_stmt 0 view .LVU83
 217 007a DB6A     		ldr	r3, [r3, #44]
 218              	.LVL16:
 252:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 {
 219              		.loc 1 252 36 view .LVU84
 220 007c 9942     		cmp	r1, r3
 221 007e 05D0     		beq	.L9
 266:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     _tx_thread_preempted_maps[MAP_INDEX] =  _tx_thread_preempted_ma
 222              		.loc 1 266 37 is_stmt 1 view .LVU85
 223 0080 0122     		movs	r2, #1
 224              	.LVL17:
 266:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                     _tx_thread_preempted_maps[MAP_INDEX] =  _tx_thread_preempted_ma
 225              		.loc 1 266 37 is_stmt 0 view .LVU86
 226 0082 9A40     		lsls	r2, r2, r3
 227              	.LVL18:
 267:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 }
 228              		.loc 1 267 37 is_stmt 1 view .LVU87
 267:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 }
 229              		.loc 1 267 102 is_stmt 0 view .LVU88
 230 0084 2949     		ldr	r1, .L16+20
 231 0086 0B68     		ldr	r3, [r1]
 267:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 }
 232              		.loc 1 267 114 view .LVU89
ARM GAS  /tmp/cct9C51U.s 			page 23


 233 0088 1343     		orrs	r3, r3, r2
 267:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 }
 234              		.loc 1 267 74 view .LVU90
 235 008a 0B60     		str	r3, [r1]
 236              	.LVL19:
 237              	.L9:
 303:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 238              		.loc 1 303 33 is_stmt 1 view .LVU91
 303:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 239              		.loc 1 303 56 is_stmt 0 view .LVU92
 240 008c 264B     		ldr	r3, .L16+16
 241              	.LVL20:
 303:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 242              		.loc 1 303 56 view .LVU93
 243 008e 1C60     		str	r4, [r3]
 244              	.LVL21:
 351:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 245              		.loc 1 351 33 is_stmt 1 view .LVU94
 246              	.LBB44:
 247              	.LBI44:
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 248              		.loc 2 568 55 view .LVU95
 249              	.LBB45:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 250              		.loc 2 574 5 view .LVU96
 251              		.syntax unified
 252              	@ 574 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 253 0090 85F31088 		MSR  PRIMASK,r5
 254              	@ 0 "" 2
 255              	.LVL22:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 256              		.loc 2 574 5 is_stmt 0 view .LVU97
 257              		.thumb
 258              		.syntax unified
 259              	.LBE45:
 260              	.LBE44:
 364:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 if (combined_flags == ((ULONG) 0))
 261              		.loc 1 364 33 is_stmt 1 view .LVU98
 262 0094 204B     		ldr	r3, .L16
 263 0096 1B68     		ldr	r3, [r3]
 264              	.LVL23:
 365:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 {
 265              		.loc 1 365 33 view .LVU99
 365:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 {
 266              		.loc 1 365 36 is_stmt 0 view .LVU100
 267 0098 73BB     		cbnz	r3, .L1
 375:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                                 }
 268              		.loc 1 375 37 is_stmt 1 view .LVU101
 269              	.LBB46:
 270              	.LBI46:
 590:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 591:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 592:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void _tx_thread_system_return_inline(void)
 271              		.loc 2 592 55 view .LVU102
 272              	.LBB47:
 593:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 594:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** unsigned int interrupt_save;
ARM GAS  /tmp/cct9C51U.s 			page 24


 273              		.loc 2 594 1 view .LVU103
 595:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 596:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     /* Set PendSV to invoke ThreadX scheduler.  */
 597:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     *((volatile ULONG *) 0xE000ED04) = ((ULONG) 0x10000000);
 274              		.loc 2 597 5 view .LVU104
 275              		.loc 2 597 38 is_stmt 0 view .LVU105
 276 009a 4FF0E023 		mov	r3, #-536813568
 277              	.LVL24:
 278              		.loc 2 597 38 view .LVU106
 279 009e 4FF08052 		mov	r2, #268435456
 280 00a2 C3F8042D 		str	r2, [r3, #3332]
 281              	.LVL25:
 598:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     if (__get_ipsr_value() == 0)
 282              		.loc 2 598 5 is_stmt 1 view .LVU107
 283              	.LBB48:
 284              	.LBI48:
 486:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 285              		.loc 2 486 63 view .LVU108
 286              	.LBB49:
 488:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
 287              		.loc 2 488 1 view .LVU109
 489:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(ipsr_value);
 288              		.loc 2 489 5 view .LVU110
 289              		.syntax unified
 290              	@ 489 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 291 00a6 EFF30583 		 MRS  r3,IPSR 
 292              	@ 0 "" 2
 293              	.LVL26:
 490:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 294              		.loc 2 490 5 view .LVU111
 490:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 295              		.loc 2 490 5 is_stmt 0 view .LVU112
 296              		.thumb
 297              		.syntax unified
 298              	.LBE49:
 299              	.LBE48:
 300              		.loc 2 598 8 discriminator 1 view .LVU113
 301 00aa 2BBB     		cbnz	r3, .L1
 599:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     {
 600:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****         interrupt_save = __get_interrupt_posture();
 302              		.loc 2 600 9 is_stmt 1 view .LVU114
 303              	.LBB50:
 304              	.LBI50:
 545:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 305              		.loc 2 545 63 view .LVU115
 306              	.LBB51:
 547:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 307              		.loc 2 547 1 view .LVU116
 551:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 308              		.loc 2 551 5 view .LVU117
 309              		.syntax unified
 310              	@ 551 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 311 00ac EFF31083 		MRS  r3, PRIMASK 
 312              	@ 0 "" 2
 313              	.LVL27:
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 314              		.loc 2 553 5 view .LVU118
ARM GAS  /tmp/cct9C51U.s 			page 25


 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 315              		.loc 2 553 5 is_stmt 0 view .LVU119
 316              		.thumb
 317              		.syntax unified
 318              	.LBE51:
 319              	.LBE50:
 601:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 602:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****         __set_basepri_value(0);
 603:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 604:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****         __enable_interrupts();
 320              		.loc 2 604 9 is_stmt 1 view .LVU120
 321              	.LBB52:
 322              	.LBI52:
 562:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 323              		.loc 2 562 55 view .LVU121
 324              	.LBB53:
 564:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 325              		.loc 2 564 5 view .LVU122
 326              		.syntax unified
 327              	@ 564 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 328 00b0 62B6     		CPSIE  i
 329              	@ 0 "" 2
 330              		.thumb
 331              		.syntax unified
 332              	.LBE53:
 333              	.LBE52:
 605:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 606:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****         __restore_interrupt(interrupt_save);
 334              		.loc 2 606 9 view .LVU123
 335              	.LVL28:
 336              	.LBB54:
 337              	.LBI54:
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 338              		.loc 2 568 55 view .LVU124
 339              	.LBB55:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 340              		.loc 2 574 5 view .LVU125
 341              		.syntax unified
 342              	@ 574 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 343 00b2 83F31088 		MSR  PRIMASK,r3
 344              	@ 0 "" 2
 345              	.LVL29:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 346              		.loc 2 574 5 is_stmt 0 view .LVU126
 347              		.thumb
 348              		.syntax unified
 349              	.LBE55:
 350              	.LBE54:
 351              	.LBE47:
 352              	.LBE46:
 379:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 353              		.loc 1 379 33 is_stmt 1 view .LVU127
 354 00b6 1FE0     		b	.L1
 355              	.LVL30:
 356              	.L15:
 238:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         }
 357              		.loc 1 238 29 view .LVU128
ARM GAS  /tmp/cct9C51U.s 			page 26


 238:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         }
 358              		.loc 1 238 52 is_stmt 0 view .LVU129
 359 00b8 1B4B     		ldr	r3, .L16+16
 360              	.LVL31:
 238:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         }
 361              		.loc 1 238 52 view .LVU130
 362 00ba 1C60     		str	r4, [r3]
 363              	.LVL32:
 238:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                         }
 364              		.loc 1 238 52 view .LVU131
 365 00bc 03E0     		b	.L5
 366              	.LVL33:
 367              	.L6:
 396:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 }
 397:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             }
 398:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 399:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             /* Else, delayed suspend flag was set.  */
 400:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             else
 401:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             {
 402:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 403:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Clear the delayed suspend flag and change the state.  */
 404:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 thread_ptr -> tx_thread_delayed_suspend =  TX_FALSE;
 368              		.loc 1 404 17 is_stmt 1 view .LVU132
 369              		.loc 1 404 57 is_stmt 0 view .LVU133
 370 00be 0023     		movs	r3, #0
 371 00c0 6363     		str	r3, [r4, #52]
 405:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 thread_ptr -> tx_thread_state =            TX_SUSPENDED;
 372              		.loc 1 405 17 is_stmt 1 view .LVU134
 373              		.loc 1 405 47 is_stmt 0 view .LVU135
 374 00c2 0323     		movs	r3, #3
 375 00c4 2363     		str	r3, [r4, #48]
 376              	.L5:
 406:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             }
 407:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         }
 408:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     }
 409:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     else
 410:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     {
 411:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 412:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* A resumption occurred in the middle of a previous thread suspension.  */
 413:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 414:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Make sure the type of suspension under way is not a terminate or
 415:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****            thread completion.  In either of these cases, do not void the
 416:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****            interrupted suspension processing.  */
 417:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         if (thread_ptr -> tx_thread_state != TX_COMPLETED)
 418:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         {
 419:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 420:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             /* Make sure the thread isn't terminated.  */
 421:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             if (thread_ptr -> tx_thread_state != TX_TERMINATED)
 422:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             {
 423:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 424:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* No, now check to see if the delayed suspension flag is set.  */
 425:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 if (thread_ptr -> tx_thread_delayed_suspend == TX_FALSE)
 426:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 {
 427:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 428:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* Clear the suspending flag.  */
 429:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_suspending =   TX_FALSE;
 430:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
ARM GAS  /tmp/cct9C51U.s 			page 27


 431:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* Restore the state to ready.  */
 432:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_state =        TX_READY;
 433:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 434:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* Thread state change.  */
 435:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     TX_THREAD_STATE_CHANGE(thread_ptr, TX_READY)
 436:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 437:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* Log the thread status change.  */
 438:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     TX_EL_THREAD_STATUS_CHANGE_INSERT(thread_ptr, TX_READY)
 439:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 }
 440:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 else
 441:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 {
 442:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 443:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     /* Clear the delayed suspend flag and change the state.  */
 444:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_delayed_suspend =  TX_FALSE;
 445:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_state =            TX_SUSPENDED;
 446:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 }
 447:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 448:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
 449:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 450:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Increment the total number of thread resumptions.  */
 451:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 _tx_thread_performance_resume_count++;
 452:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 453:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 /* Increment this thread's resume count.  */
 454:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 thread_ptr -> tx_thread_performance_resume_count++;
 455:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 456:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             }
 457:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         }
 458:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     }
 459:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 460:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
 461:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 462:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Is the execute pointer different?  */
 463:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     if (_tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] != _tx_thread
 464:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     {
 465:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 466:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Move to next entry.  */
 467:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         _tx_thread_performance__execute_log_index++;
 468:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 469:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Check for wrap condition.  */
 470:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         if (_tx_thread_performance__execute_log_index >= TX_THREAD_EXECUTE_LOG_SIZE)
 471:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         {
 472:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 473:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             /* Set the index to the beginning.  */
 474:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             _tx_thread_performance__execute_log_index =  ((UINT) 0);
 475:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         }
 476:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 477:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Log the new execute pointer.  */
 478:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         _tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] =  _tx_thread
 479:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     }
 480:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 481:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 482:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_ENABLE_EVENT_TRACE
 483:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 484:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Check that the event time stamp is unchanged.  A different
 485:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****        timestamp means that a later event wrote over the thread
 486:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****        resume event. In that case, do nothing here.  */
 487:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     if (entry_ptr != TX_NULL)
ARM GAS  /tmp/cct9C51U.s 			page 28


 488:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     {
 489:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 490:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Is the timestamp the same?  */
 491:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         if (time_stamp == entry_ptr -> tx_trace_buffer_entry_time_stamp)
 492:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         {
 493:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 494:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             /* Timestamp is the same, set the "next thread pointer" to NULL. This can
 495:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                be used by the trace analysis tool to show idle system conditions.  */
 496:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_MISRA_ENABLE
 497:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             entry_ptr -> tx_trace_buffer_entry_info_4 =  TX_POINTER_TO_ULONG_CONVERT(_tx_thread_exe
 498:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #else
 499:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             entry_ptr -> tx_trace_buffer_entry_information_field_4 =  TX_POINTER_TO_ULONG_CONVERT(_
 500:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 501:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         }
 502:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     }
 503:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 504:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 505:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Pickup thread pointer.  */
 506:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     TX_THREAD_GET_CURRENT(current_thread)
 377              		.loc 1 506 5 is_stmt 1 view .LVU136
 378 00c6 1A4B     		ldr	r3, .L16+24
 379 00c8 1B68     		ldr	r3, [r3]
 380              	.LVL34:
 507:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 508:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Restore interrupts.  */
 509:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     TX_RESTORE
 381              		.loc 1 509 5 view .LVU137
 382              	.LBB56:
 383              	.LBI56:
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 384              		.loc 2 568 55 view .LVU138
 385              	.LBB57:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 386              		.loc 2 574 5 view .LVU139
 387              		.syntax unified
 388              	@ 574 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 389 00ca 85F31088 		MSR  PRIMASK,r5
 390              	@ 0 "" 2
 391              	.LVL35:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 392              		.loc 2 574 5 is_stmt 0 view .LVU140
 393              		.thumb
 394              		.syntax unified
 395              	.LBE57:
 396              	.LBE56:
 510:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 511:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     /* Determine if a preemption condition is present.  */
 512:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     if (current_thread != _tx_thread_execute_ptr)
 397              		.loc 1 512 5 is_stmt 1 view .LVU141
 398              		.loc 1 512 24 is_stmt 0 view .LVU142
 399 00ce 164A     		ldr	r2, .L16+16
 400 00d0 1268     		ldr	r2, [r2]
 401              		.loc 1 512 8 view .LVU143
 402 00d2 9A42     		cmp	r2, r3
 403 00d4 10D0     		beq	.L1
 513:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     {
 514:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
ARM GAS  /tmp/cct9C51U.s 			page 29


 515:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_ENABLE_STACK_CHECKING
 516:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 517:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Pickup the next execute pointer.  */
 518:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         thread_ptr =  _tx_thread_execute_ptr;
 519:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 520:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Check this thread's stack.  */
 521:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         TX_THREAD_STACK_CHECK(thread_ptr)
 522:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 523:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 524:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         /* Now determine if preemption should take place. This is only possible if the current thre
 525:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****            not the same as the execute thread pointer AND the system state and preempt disable flag
 526:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         TX_THREAD_SYSTEM_RETURN_CHECK(combined_flags)
 404              		.loc 1 526 9 is_stmt 1 view .LVU144
 405 00d6 104B     		ldr	r3, .L16
 406              	.LVL36:
 407              		.loc 1 526 9 is_stmt 0 view .LVU145
 408 00d8 1B68     		ldr	r3, [r3]
 409              	.LVL37:
 527:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         if (combined_flags == ((ULONG) 0))
 410              		.loc 1 527 9 is_stmt 1 view .LVU146
 411              		.loc 1 527 12 is_stmt 0 view .LVU147
 412 00da 6BB9     		cbnz	r3, .L1
 528:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         {
 529:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 530:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
 531:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 532:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             /* There is another thread ready to run and will be scheduled upon return.  */
 533:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             _tx_thread_performance_non_idle_return_count++;
 534:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** #endif
 535:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 536:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             /* Preemption is needed - return to the system!  */
 537:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             _tx_thread_system_return();
 413              		.loc 1 537 13 is_stmt 1 view .LVU148
 414              	.LBB58:
 415              	.LBI58:
 592:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 416              		.loc 2 592 55 view .LVU149
 417              	.LBB59:
 594:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 418              		.loc 2 594 1 view .LVU150
 597:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     if (__get_ipsr_value() == 0)
 419              		.loc 2 597 5 view .LVU151
 597:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     if (__get_ipsr_value() == 0)
 420              		.loc 2 597 38 is_stmt 0 view .LVU152
 421 00dc 4FF0E023 		mov	r3, #-536813568
 422              	.LVL38:
 597:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     if (__get_ipsr_value() == 0)
 423              		.loc 2 597 38 view .LVU153
 424 00e0 4FF08052 		mov	r2, #268435456
 425 00e4 C3F8042D 		str	r2, [r3, #3332]
 426              	.LVL39:
 598:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     {
 427              		.loc 2 598 5 is_stmt 1 view .LVU154
 428              	.LBB60:
 429              	.LBI60:
 486:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 430              		.loc 2 486 63 view .LVU155
ARM GAS  /tmp/cct9C51U.s 			page 30


 431              	.LBB61:
 488:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
 432              		.loc 2 488 1 view .LVU156
 489:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(ipsr_value);
 433              		.loc 2 489 5 view .LVU157
 434              		.syntax unified
 435              	@ 489 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 436 00e8 EFF30583 		 MRS  r3,IPSR 
 437              	@ 0 "" 2
 438              	.LVL40:
 490:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 439              		.loc 2 490 5 view .LVU158
 490:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 440              		.loc 2 490 5 is_stmt 0 view .LVU159
 441              		.thumb
 442              		.syntax unified
 443              	.LBE61:
 444              	.LBE60:
 598:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     {
 445              		.loc 2 598 8 discriminator 1 view .LVU160
 446 00ec 23B9     		cbnz	r3, .L1
 600:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 447              		.loc 2 600 9 is_stmt 1 view .LVU161
 448              	.LBB62:
 449              	.LBI62:
 545:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 450              		.loc 2 545 63 view .LVU162
 451              	.LBB63:
 547:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 452              		.loc 2 547 1 view .LVU163
 551:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 453              		.loc 2 551 5 view .LVU164
 454              		.syntax unified
 455              	@ 551 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 456 00ee EFF31083 		MRS  r3, PRIMASK 
 457              	@ 0 "" 2
 458              	.LVL41:
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 459              		.loc 2 553 5 view .LVU165
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 460              		.loc 2 553 5 is_stmt 0 view .LVU166
 461              		.thumb
 462              		.syntax unified
 463              	.LBE63:
 464              	.LBE62:
 604:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 465              		.loc 2 604 9 is_stmt 1 view .LVU167
 466              	.LBB64:
 467              	.LBI64:
 562:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 468              		.loc 2 562 55 view .LVU168
 469              	.LBB65:
 564:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 470              		.loc 2 564 5 view .LVU169
 471              		.syntax unified
 472              	@ 564 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 473 00f2 62B6     		CPSIE  i
ARM GAS  /tmp/cct9C51U.s 			page 31


 474              	@ 0 "" 2
 475              		.thumb
 476              		.syntax unified
 477              	.LBE65:
 478              	.LBE64:
 479              		.loc 2 606 9 view .LVU170
 480              	.LVL42:
 481              	.LBB66:
 482              	.LBI66:
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 483              		.loc 2 568 55 view .LVU171
 484              	.LBB67:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 485              		.loc 2 574 5 view .LVU172
 486              		.syntax unified
 487              	@ 574 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 488 00f4 83F31088 		MSR  PRIMASK,r3
 489              	@ 0 "" 2
 490              	.LVL43:
 491              		.thumb
 492              		.syntax unified
 493              	.L1:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 494              		.loc 2 574 5 is_stmt 0 view .LVU173
 495              	.LBE67:
 496              	.LBE66:
 497              	.LBE59:
 498              	.LBE58:
 538:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         }
 539:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****     }
 540:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** }
 499              		.loc 1 540 1 view .LVU174
 500 00f8 38BD     		pop	{r3, r4, r5, pc}
 501              	.LVL44:
 502              	.L4:
 417:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         {
 503              		.loc 1 417 9 is_stmt 1 view .LVU175
 417:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         {
 504              		.loc 1 417 24 is_stmt 0 view .LVU176
 505 00fa 236B     		ldr	r3, [r4, #48]
 417:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****         {
 506              		.loc 1 417 12 view .LVU177
 507 00fc 012B     		cmp	r3, #1
 508 00fe E2D0     		beq	.L5
 421:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             {
 509              		.loc 1 421 13 is_stmt 1 view .LVU178
 421:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****             {
 510              		.loc 1 421 16 is_stmt 0 view .LVU179
 511 0100 022B     		cmp	r3, #2
 512 0102 E0D0     		beq	.L5
 425:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 {
 513              		.loc 1 425 17 is_stmt 1 view .LVU180
 425:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 {
 514              		.loc 1 425 32 is_stmt 0 view .LVU181
 515 0104 636B     		ldr	r3, [r4, #52]
 425:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 {
 516              		.loc 1 425 20 view .LVU182
ARM GAS  /tmp/cct9C51U.s 			page 32


 517 0106 13B9     		cbnz	r3, .L12
 429:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 518              		.loc 1 429 21 is_stmt 1 view .LVU183
 429:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 519              		.loc 1 429 56 is_stmt 0 view .LVU184
 520 0108 A363     		str	r3, [r4, #56]
 432:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 521              		.loc 1 432 21 is_stmt 1 view .LVU185
 432:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c **** 
 522              		.loc 1 432 51 is_stmt 0 view .LVU186
 523 010a 2363     		str	r3, [r4, #48]
 524 010c DBE7     		b	.L5
 525              	.L12:
 444:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_state =            TX_SUSPENDED;
 526              		.loc 1 444 21 is_stmt 1 view .LVU187
 444:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                     thread_ptr -> tx_thread_state =            TX_SUSPENDED;
 527              		.loc 1 444 61 is_stmt 0 view .LVU188
 528 010e 0023     		movs	r3, #0
 529 0110 6363     		str	r3, [r4, #52]
 445:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 }
 530              		.loc 1 445 21 is_stmt 1 view .LVU189
 445:Middlewares/ST/threadx/common/src/tx_thread_system_resume.c ****                 }
 531              		.loc 1 445 51 is_stmt 0 view .LVU190
 532 0112 0323     		movs	r3, #3
 533 0114 2363     		str	r3, [r4, #48]
 534 0116 D6E7     		b	.L5
 535              	.L17:
 536              		.align	2
 537              	.L16:
 538 0118 00000000 		.word	_tx_thread_preempt_disable
 539 011c 00000000 		.word	_tx_thread_priority_list
 540 0120 00000000 		.word	_tx_thread_priority_maps
 541 0124 00000000 		.word	_tx_thread_highest_priority
 542 0128 00000000 		.word	_tx_thread_execute_ptr
 543 012c 00000000 		.word	_tx_thread_preempted_maps
 544 0130 00000000 		.word	_tx_thread_current_ptr
 545              		.cfi_endproc
 546              	.LFE8:
 548              		.text
 549              	.Letext0:
 550              		.file 3 "Middlewares/ST/threadx/common/inc/tx_api.h"
 551              		.file 4 "Middlewares/ST/threadx/common/inc/tx_thread.h"
 552              		.file 5 "Middlewares/ST/threadx/common/inc/tx_timer.h"
ARM GAS  /tmp/cct9C51U.s 			page 33


DEFINED SYMBOLS
                            *ABS*:00000000 tx_thread_system_resume.c
     /tmp/cct9C51U.s:20     .text._tx_thread_system_resume:00000000 $t
     /tmp/cct9C51U.s:26     .text._tx_thread_system_resume:00000000 _tx_thread_system_resume
     /tmp/cct9C51U.s:538    .text._tx_thread_system_resume:00000118 $d

UNDEFINED SYMBOLS
_tx_timer_system_deactivate
_tx_thread_preempt_disable
_tx_thread_priority_list
_tx_thread_priority_maps
_tx_thread_highest_priority
_tx_thread_execute_ptr
_tx_thread_preempted_maps
_tx_thread_current_ptr
